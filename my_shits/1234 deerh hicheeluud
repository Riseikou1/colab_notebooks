{"cells":[{"cell_type":"markdown","metadata":{"id":"BNCERdczIqi6"},"source":["##Lesson1"]},{"cell_type":"markdown","metadata":{"id":"HjP4US4kIwfm"},"source":["###Example1(Ard talaas ni zai avj hevleed bgan bn)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":320,"status":"ok","timestamp":1713877080556,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"z7iBJ09ZJBhG","outputId":"9e2d7c0e-2788-439a-b7a2-d00fc833b344"},"outputs":[{"output_type":"stream","name":"stdout","text":["Python    \n"]}],"source":["print('{:10}'.format('Python'))"]},{"cell_type":"markdown","metadata":{"id":"YSvbCTaFIwww"},"source":["###Example2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710659195116,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"jgRBRyL-JCM1","outputId":"5164f453-66ca-4c1c-bbe4-5dafbd0e9b14"},"outputs":[{"name":"stdout","output_type":"stream","text":["My favourite superhero is       Batman gedeg zaluu yum\n","My favourite superhero is     Temuujin gedeg zaluu yum\n"]}],"source":["print(\"My favourite superhero is {:>12} gedeg zaluu yum\".format(\"Batman\"))\n","print(\"My favourite superhero is {:>12} gedeg zaluu yum\".format(\"Temuujin\"))\n"]},{"cell_type":"markdown","metadata":{"id":"l6IbryjVI3Wp"},"source":["###Example3"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710659320647,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Bi7km-kxJDlO","outputId":"fccf4a3a-5052-41bc-99e8-2778a79df399"},"outputs":[{"name":"stdout","output_type":"stream","text":["G. Dorjoo\n"]}],"source":["print('{:.1}. {}'.format(\"Ganaa\", \"Dorjoo\"))"]},{"cell_type":"markdown","metadata":{"id":"5rDRIMgHI5dh"},"source":["###Example4"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3195,"status":"ok","timestamp":1713877167717,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"5RLuR0FHHzI2","outputId":"7862da3c-ceb9-4ed6-e43c-336a07aca864"},"outputs":[{"output_type":"stream","name":"stdout","text":["zi. zambia\n","pisd.gichii\n","Hussen ugee oruulna uu:grega\n","agerg\n","gre\n"]}],"source":["print('{:.2}. {}'.format(\"zimbab\",\"zambia\"))\n","print('{:.4}.{}'.format(\"pisda\",\"gichii\"))\n","n=input('Hussen ugee oruulna uu:')\n","print(n[::-1])\n","print(n[:3])\n","\n"]},{"cell_type":"markdown","metadata":{"id":"4XcRlqppQfdU"},"source":["###Example5( Buhel ba butarhai too hevleh)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":384,"status":"ok","timestamp":1710659707978,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"9B4I1Ji8Qf0Q","outputId":"93fa9a34-4438-4347-aa58-8077066719d8"},"outputs":[{"name":"stdout","output_type":"stream","text":["25\n"]}],"source":["print('{:d}'.format(25))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":326,"status":"ok","timestamp":1713877276170,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Uw59lvrSQgdo","outputId":"09aab16f-6cf9-4aa1-bf63-7850b7a71a4a"},"outputs":[{"output_type":"stream","name":"stdout","text":["21.42\n"]}],"source":["print('{:.2f}'.format(21.4214))  ##end yamr ch bsn f ni float gedgiig ilerhiilj baigaa."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711006775568,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NvKdXqVoQhM5","outputId":"e958c5fc-89b4-4525-ec1c-81adb80ad74a"},"outputs":[{"name":"stdout","output_type":"stream","text":["1000000\n"]}],"source":["print('{:<3d}'.format(1000000))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":330,"status":"ok","timestamp":1713877292663,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-csy1xwESNNo","outputId":"668f75e8-09e1-4fa1-b26f-cd3313ca47ab"},"outputs":[{"output_type":"stream","name":"stdout","text":["03.142\n"]}],"source":["print('{:06.3f}'.format(3.14159241))   ##end 6iin too ni ^n temdegt baigaa gsn utga. urdaa 0 avaad bui uchir ni .2f getsen bolhoor yum. ter ni butarhain 2 orong ni avay gesen utga buhii ed yum."]},{"cell_type":"markdown","metadata":{"id":"-IS95SRoQgNn"},"source":["###Example6"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4820,"status":"ok","timestamp":1710660854980,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Oc0_oQgHSjAB","outputId":"31a3c499-5b82-4ba8-f115-2eecf1822a9c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Duriin too oruulna uu:1243\n","Duriin too oruulna uu:312\n","Ehnii too 1243\n","Hoyrdoh too 312\n"]}],"source":["a=input('Duriin too oruulna uu:')\n","b=input('Duriin too oruulna uu:')\n","print('Ehnii too {}\\nHoyrdoh too {}'.format(a,b))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4483,"status":"ok","timestamp":1713877400864,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"FCNj8kJ6T2Lc","outputId":"e877d91d-0a43-4e76-9403-325652feaf5b"},"outputs":[{"output_type":"stream","name":"stdout","text":["32*4*43\n","32 4 43\n"]}],"source":["a,b,c=input().split(\"*\") ##split-iin ard bga ni bol oruulsn str-ees ter temdgtiig ni hasch hevleh gsn utgatai.\n","print(a,b,c)\n"]},{"cell_type":"markdown","metadata":{"id":"_CMZff38XcU9"},"source":["###Example 7 (MAP)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6841,"status":"ok","timestamp":1710664301174,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"iPoYLB4qWgYO","outputId":"7ed2ddc4-bc53-41ca-c1a4-3c9b69876e87"},"outputs":[{"name":"stdout","output_type":"stream","text":["12 31\n","Sum: 43\n","Multipilition: 372\n"]}],"source":["a,b= map(int, input().split())  ##map baihgui bol str,int deer aldaa zaagaad, lai boldiin bainle\n","print(\"Sum: {}\\nMultipilition: {}\".format(a+b, a*b))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14964,"status":"ok","timestamp":1710664286866,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Vawvy3_wWi8Y","outputId":"33f3eafd-6900-4c56-fb99-f1602757186b"},"outputs":[{"name":"stdout","output_type":"stream","text":["Ta neree oruulj ugnu uu:TEMUUJIN\n","Ta nasaa oruulj ugnu uu:19\n","Ta mergejlee oruulj ugnu uu:YURUNHIILUGCH\n","Tanii neriig TEMUUJIN gedeg ba ta 19 nastai yum. Mun tanii hiideg ajil bol:YURUNHIILUGCH\n"]}],"source":["a=input('Ta neree oruulj ugnu uu:')\n","b=input('Ta nasaa oruulj ugnu uu:')\n","c=input('Ta mergejlee oruulj ugnu uu:')\n","\n","print('Tanii neriig {} gedeg ba ta {} nastai yum. Mun tanii hiideg ajil bol:{}'.format(a,b,c))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4090,"status":"ok","timestamp":1711007220313,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"0HhmEgMbe7Mx","outputId":"c0932842-a4ed-4cec-eddd-148e0064c71c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Ta tursun onoo oruulj ugnu uu:2004\n","Ta ene jil 20 nastai ym bn. Yasan ch hugshin yum\n"]}],"source":["a=int(input('Ta tursun onoo oruulj ugnu uu:'))\n","print('Ta ene jil {} nastai ym bn. Yasan ch hugshin yum'.format(2024-a))\n"]},{"cell_type":"markdown","metadata":{"id":"L7cX4PvGjKja"},"source":["## Lesson 2 (Huvisagch,Ugugdliin turluud)"]},{"cell_type":"markdown","metadata":{"id":"Mxk5h2w4jVAs"},"source":["###Example2 (Ugugdliin numeric turul==> integer,float,complex)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":319,"status":"ok","timestamp":1713877542650,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"4_CFTNJkj_IZ","outputId":"cd23209c-b669-4e20-a4ba-888e48d92e90"},"outputs":[{"output_type":"stream","name":"stdout","text":["1452532553.242642\n","1.312e-40\n","1.04124\n","1452532553.242642\n","1.312e-40\n"]}],"source":["a=1.04124 ## As u know, float number exmpss\n","b=1.452532553242642e9\n","c=1312e-43\n","print(b)\n","print(c)\n","print(a,b,c, sep='\\n')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":376,"status":"ok","timestamp":1710671489239,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"o7L9yPWs9VKR","outputId":"cf8060ac-b63c-4c8f-db1d-8e11d421e064"},"outputs":[{"data":{"text/plain":["(4+4j)"]},"execution_count":108,"metadata":{},"output_type":"execute_result"}],"source":["a=2+1j ## complex number\n","a+2+3j\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JVXx6dNx_euj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713877674012,"user_tz":-540,"elapsed":424,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c5b7d25e-30c7-485e-926a-a3bb9c893299"},"outputs":[{"output_type":"stream","name":"stdout","text":["0x83\n","131\n"]}],"source":["print(hex(131))     #ene bol 16tiin toolol, 0x ni bol 16tiin toolol gedgiig ilerhiilj baigaa.\n","print(abs(-131))     #ene ni modul"]},{"cell_type":"markdown","metadata":{"id":"urTg9486jVDT"},"source":["###Example3  (Ugugdliin logic turul)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":605,"status":"ok","timestamp":1710672080374,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"uUNTJeapkAwh","outputId":"5e1df941-6dc9-4e45-d2ef-79e689059319"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'bool'>\n","False\n","True\n"]}],"source":["a= True\n","b=False\n","print(type(a))  # Ene functionii type ni\n","print(a and b)   # Ene tohioldold 1 ni l false bhad ter chigeer ni false\n","print(a or b)    # Enen uyd neg ni l true bhad bugdeere true"]},{"cell_type":"markdown","metadata":{"id":"WTD7Q4tBjVFP"},"source":["###Example4 (Ugugdliin string turul)\n"]},{"cell_type":"markdown","metadata":{"id":"SeLrViWxA1nn"},"source":["yum hiiy gesen chn bugdiign meddeg yum zaagaad bno."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":388,"status":"ok","timestamp":1710672622587,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"KgoFSofYkBeF","outputId":"846cdc7e-1f11-4542-83e4-98942c3cd6ec"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'       Jhon'"]},"execution_count":128,"metadata":{},"output_type":"execute_result"}],"source":["var='       Jhon       '\n","var.rstrip()     # right side aas ni space iig arilgaj bn"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":402,"status":"ok","timestamp":1710672704327,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"aJ6nROsKCQ-a","outputId":"9c57788d-a784-4369-d94f-7139ba8481d8"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Jhon       '"]},"execution_count":129,"metadata":{},"output_type":"execute_result"}],"source":["var.lstrip()     #left side aas ni zaig ni hasch bn"]},{"cell_type":"markdown","metadata":{"id":"tMGu5zQFDAGB"},"source":["##Lesson 3 (Python dahi undsen operatoruud)"]},{"cell_type":"markdown","metadata":{"id":"AZV5AV_jjVIF"},"source":["###Example1 (Arithmetic Operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZGuZkvpujB-1"},"outputs":[],"source":["# nuguu l '+',_'-', '*' ,'/', division floor,, Modulus etc"]},{"cell_type":"markdown","metadata":{"id":"NZKQYduWkHnf"},"source":["###Example2 (Relational operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_4FO1whgkIFz"},"outputs":[],"source":["# bas l nuguu ( greater than|| less than|| equal to|| not equal to|| Greater than or equal to|| less than or equal to)"]},{"cell_type":"markdown","metadata":{"id":"00VsdhNODPAF"},"source":["###Example3  (Logical Operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bnU8pkcnDPTp"},"outputs":[],"source":["## Logical AND OR NOT"]},{"cell_type":"markdown","metadata":{"id":"vV7dqZmNDPiy"},"source":["###Example5 (Medkue neg ymnii l Operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711507479823,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"6Jhek4_NDPyf","outputId":"ef3dae8d-027a-45ab-a9c5-9652612be313"},"outputs":[{"name":"stdout","output_type":"stream","text":["1024\n"]}],"source":["a=13\n","a+=10\n","a-=4\n","a*=2\n","a/=7\n","a=int(a)\n","a%6\n","a//=3\n","a+=1\n","a**=10\n","\n","print(a)"]},{"cell_type":"markdown","metadata":{"id":"8AplOS7DkITo"},"source":["###Example 4(Assignment operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1710675756342,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"3YqvmwNuNe58","outputId":"b82f01e3-2025-4d84-9c8f-50e0bffcdeb1"},"outputs":[{"data":{"text/plain":["True"]},"execution_count":134,"metadata":{},"output_type":"execute_result"}],"source":["#IS || IS NOT ()\n","a=3\n","b=3\n","c='phyton'\n","d='Python'\n","c is not d"]},{"cell_type":"markdown","metadata":{"id":"-0Dk6BNVEXlN"},"source":["###Example6  (Membership Operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1710676254436,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"qgqMA5XmNLj3","outputId":"a74aef4c-f364-44d1-a24f-3c218313590a"},"outputs":[{"data":{"text/plain":["False"]},"execution_count":144,"metadata":{},"output_type":"execute_result"}],"source":["#IN, NOT IN gesen function. 'p' in 'gaagpgagaepga' etccc\n","'p' not in 'fwqfeewqfewqfqfeqwfeqp'\n","\n"]},{"cell_type":"markdown","metadata":{"id":"6Hpp59icDbQE"},"source":["##Lesson4 (Bitwise)\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"yNTS_28kDbud"},"source":["###Example1 (Bitwise AND) (&)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710685273930,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"arTvPnqkphRg","outputId":"0a8d8fc9-a8f9-4d56-9996-50b8a05239ee"},"outputs":[{"data":{"text/plain":["0"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["26&37"]},{"cell_type":"markdown","metadata":{"id":"rOfDOdoSDkga"},"source":["###Example2 (Bitwise OR) (|)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":422,"status":"ok","timestamp":1710685329942,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"StpDwBcRph-m","outputId":"ccf1219e-e108-47e2-8152-ab288fab3d68"},"outputs":[{"data":{"text/plain":["63"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["26|37"]},{"cell_type":"markdown","metadata":{"id":"IKcc-_ViDkqx"},"source":["###Example3 (Bitwise XOR)  (^)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1710685352269,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"9DiJtxNSpivy","outputId":"c9024e39-92ff-4e08-9481-36575ff6c4b0"},"outputs":[{"data":{"text/plain":["63"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["26^37"]},{"cell_type":"markdown","metadata":{"id":"Xg4JPnQypNxc"},"source":["###Example 4 (Bitwise Leftshift) (<<)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":491,"status":"ok","timestamp":1710685473608,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"zfWKko4EpjjV","outputId":"baa47606-ff1b-4f1e-b429-ad87ebe32fd2"},"outputs":[{"data":{"text/plain":["416"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["26<<4"]},{"cell_type":"markdown","metadata":{"id":"Tq1yBocmpN9W"},"source":["###Example5 (Bitwise Rightshift)  (>>)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1710685158480,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"0DBumFJmplCX","outputId":"30c892d6-717b-41ca-9185-47e605e2de4b"},"outputs":[{"data":{"text/plain":["4"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["37>>3"]},{"cell_type":"markdown","metadata":{"id":"tKmv7rsippp1"},"source":["##Lesson 5 (Python deerh uildluudiin daraalal)"]},{"cell_type":"markdown","metadata":{"id":"jATOFKTspweG"},"source":["###Example 1"]},{"cell_type":"markdown","metadata":{"id":"FVDy1sIpIx60"},"source":["a=10\n","b=5\n","c=3\n","d=2\n","e=30\n","\n","1((2+3**3-(((a+b)*c)//d))//d )& 30"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1710691250433,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Jxq5W2IoIzzQ","outputId":"e96d2e44-657d-46dd-c551-3e6f2e7501a3"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'0b10'"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["bin(2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":433,"status":"ok","timestamp":1710691235688,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"75SUTmGuJCPn","outputId":"a588f54e-0fe3-45e4-f4e8-a8d029729b62"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'0b1000'"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["bin(2<<2)"]},{"cell_type":"markdown","metadata":{"id":"pcbNx83ypwha"},"source":["###Example2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":409,"status":"ok","timestamp":1710691840628,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"jmkxSJX_KYzt","outputId":"26dc5cac-4783-44ac-a4c8-5c6558e28021"},"outputs":[{"data":{"text/plain":["13"]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["4<<2 & 33>>3| 3<<2|3 >>1"]},{"cell_type":"markdown","metadata":{"id":"tDXUclq4Ls8m"},"source":["##Lesson 6 ( List)"]},{"cell_type":"markdown","metadata":{"id":"mdFjoOsRLtzf"},"source":["###Example1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1713878166457,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"_v8BTefyF3hY","outputId":"356438e4-ec32-4f77-b2ca-6bbef599b1fd"},"outputs":[{"output_type":"stream","name":"stdout","text":["2210\n"]}],"source":["numberss=[1,2,3,4,2141,4,21,1,1,1,2,3,4,6,8,8]\n","s=0\n","for x in numberss:\n","    s+=x\n","print(s)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1713878168935,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Lq0wvZVeGkiF","outputId":"b2c45613-ac39-4365-9a9a-fce4604f01fa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":23}],"source":["numberss[len(numberss)-1]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1710724706130,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"zsOcWbUcHFhv","outputId":"b90aa8e6-aa11-49c5-c49f-873434140c45"},"outputs":[{"name":"stdout","output_type":"stream","text":["2210\n"]}],"source":["print(sum(numberss))"]},{"cell_type":"markdown","metadata":{"id":"7Iy2mnLuLt9c"},"source":["###Example2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711507632019,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"MgpI12ReH1vv","outputId":"cc86c8af-e601-494b-90d1-b4d9a275cf03"},"outputs":[{"name":"stdout","output_type":"stream","text":["[4, 1, 2, 3, 4, 2141, 4, 21, 1, 1, 1, 2, 3, 4, 6, 8, 8]\n"]}],"source":["numberss.insert(0,4)\n","print(numberss)"]},{"cell_type":"markdown","metadata":{"id":"iq7bOdP0INUJ"},"source":["###Example3 (List iig  huulah)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":358,"status":"ok","timestamp":1713878278517,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"P1D3iLlOIQ6V","outputId":"96a53e49-cce0-4c05-e6fa-9135ac248fcf"},"outputs":[{"output_type":"stream","name":"stdout","text":["['phyton', 'java', 'c', 'c++', 'html', 'javascript']\n","['blyad', 'java', 'c', 'c++', 'html', 'javascript']\n","['phyton', 'java', 'c', 'c++', 'html', 'javascript']\n"]}],"source":["plang=['phyton','java','c','c++','html','javascript']\n","flang=plang.copy()\n","print(flang)\n","plang[0]= 'blyad'\n","print(plang, flang,sep='\\n')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"kPTPQm4Up348"},"source":["###Example4 (garaas avsan utgiig list bolgoj huvirgah uhaan)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7883,"status":"ok","timestamp":1710726752031,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"1d75jgS_H2pk","outputId":"9aecc02b-07b2-4df4-d175-abf90ff4fc88"},"outputs":[{"name":"stdout","output_type":"stream","text":["Zaigaar tusgaardlagdsan duriin toonuudaa oruulna uu:12 32 32 4 554 5 2\n","[12, 32, 32, 4, 554, 5, 2]\n"]}],"source":["numbers=list(map(int, input('Zaigaar tusgaardlagdsan duriin toonuudaa oruulna uu:').split()))\n","print(numbers)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9auoi1-NQP-E"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"Mcug3BluS2-t"},"source":["##Lesson 7  (Tuple deerh shits)"]},{"cell_type":"markdown","metadata":{"id":"KTlEq7idS4ws"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1710727536223,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"8ZDcAqYDTUtK","outputId":"f9f8d5a7-04a0-4aca-e744-69a69da55ed4"},"outputs":[{"name":"stdout","output_type":"stream","text":["('iphone', 'samsung', 'huawei', 'nokia')\n"]}],"source":["my_tuples=('iphone','samsung','huawei','nokia')\n","print(my_tuples)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":509,"status":"ok","timestamp":1710727584555,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"gENiwtyJTu_T","outputId":"501cd0d7-db6b-4d17-bd39-ced30c6ddfd8"},"outputs":[{"name":"stdout","output_type":"stream","text":["nokia\n"]}],"source":["print(my_tuples[3])"]},{"cell_type":"markdown","metadata":{"id":"mIGEllaqT_oQ"},"source":["###Example 1.5 (Loop through a tuple)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":427,"status":"ok","timestamp":1710727600139,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"1PxuItYHTVBC","outputId":"8d051a7d-ca63-45e2-f623-4040f1c93510"},"outputs":[{"name":"stdout","output_type":"stream","text":["iphone\n","samsung\n","huawei\n","nokia\n"]}],"source":["for x in my_tuples:\n","    print(x)"]},{"cell_type":"markdown","metadata":{"id":"ehzxnI5gS6x0"},"source":["###Example 2  (Membership operator)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710727710498,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ciUlJ4ajTVIh","outputId":"13594ea8-b759-46e3-d0ee-caf763cb9839"},"outputs":[{"name":"stdout","output_type":"stream","text":["tiim bnaa\n"]}],"source":["if 'huawei' in my_tuples:\n","    print('tiim bnaa')\n","else:\n","    print('Nothing')"]},{"cell_type":"markdown","metadata":{"id":"Xlboi99yUbmp"},"source":["###Example 3 (Construction)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":698,"status":"ok","timestamp":1710728215487,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"V-Qe1CmiUb3d","outputId":"cb3e15de-79ae-4ac4-de00-2eccdb816985"},"outputs":[{"name":"stdout","output_type":"stream","text":["('cat', 'dog', 'mouse', 'lion')\n"]}],"source":["animals= tuple(('cat','dog','mouse','lion'))\n","print(animals)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":516,"status":"ok","timestamp":1710728220403,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"iDAv_6IKUb5R","outputId":"c21def7a-7f09-4277-b32a-2a7947a9a7cc"},"outputs":[{"data":{"text/plain":["tuple"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["type(animals)"]},{"cell_type":"markdown","metadata":{"id":"4QPVSinyUbpb"},"source":["##Lesson 8 (Dictionary)"]},{"cell_type":"markdown","metadata":{"id":"Wi4ktrqcWU2b"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":314,"status":"ok","timestamp":1713878468678,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"TftVwaUkWcRB","outputId":"1c5c3d22-2df8-460a-9d81-ebdd4d1d1ea6"},"outputs":[{"output_type":"stream","name":"stdout","text":["tuesday\n","There is only 7 days in a week bruh\n","{'1': 'MON', '2': 'tuesday', '3': 'wednesday', '4': 'Thursday', '5': 'Friday', '6': 'Saturday', '7': 'sunday'}\n"]}],"source":["weeks={\n","'1' :'Monday',\n","'2' :'tuesday',\n","'3':'wednesday',\n","'4':'Thursday',\n","'5':'Friday',\n","'6':'Saturday',\n","'7':'sunday'\n","}\n","#print(weeks)\n","\n","print(weeks['2'])  #dictionary-aas utga avah\n","\n","print(weeks.get('10', 'There is only 7 days in a week bruh'))  #get\n","weeks['1']='MON'   #change\n","print(weeks)"]},{"cell_type":"markdown","metadata":{"id":"URM_-2D5WU5G"},"source":["###Example 2  (Loop through a dict)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":511,"status":"ok","timestamp":1713878643278,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"8iFexsJ4Wd0s","outputId":"fe00fe8f-cbf8-49ad-ea1b-8cb52c3fc801"},"outputs":[{"output_type":"stream","name":"stdout","text":["1 MON\n","2 tuesday\n","3 wednesday\n","4 Thursday\n","5 Friday\n","6 Saturday\n","7 sunday\n"]}],"source":["for x ,y in weeks.items():\n","    print(x,y)"]},{"cell_type":"code","source":["for x ,y in weeks.items():\n","    print(f'{x}:{y}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NTMW4F9vINW5","executionInfo":{"status":"ok","timestamp":1713878710760,"user_tz":-540,"elapsed":453,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a7011be2-9b0f-4a8d-f2ab-732f25482978"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1:MON\n","2:tuesday\n","3:wednesday\n","4:Thursday\n","5:Friday\n","6:Saturday\n","7:sunday\n"]}]},{"cell_type":"markdown","metadata":{"id":"92VO9p_QWU67"},"source":["###Example 3  (Dict-ees key bolon value-aar utga avah.... Mun hoyulang ni zereg avah)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":490,"status":"ok","timestamp":1710733950309,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"9Jm39nA-Weiu","outputId":"12f9c063-2898-4f48-ad2a-0b6a98caab39"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n","2\n","3\n","4\n","5\n","7\n","MON\n","tuesday\n","wednesday\n","Thursday\n","Saturday\n","sunday\n","1 MON\n","2 tuesday\n","3 wednesday\n","4 Thursday\n","5 Saturday\n","7 sunday\n"]}],"source":["for x in weeks.keys():\n","    print(x)\n","\n","for x in weeks.values():\n","    print(x)\n","\n","for (x,y) in weeks.items():\n","    print(x,y)"]},{"cell_type":"markdown","metadata":{"id":"mfEGBZofWU9w"},"source":["###Example 4"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":353,"status":"ok","timestamp":1710772942727,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"z2drEI1SWfRq","outputId":"7800a3e3-a4dd-4620-a789-54c5ba92f8c9"},"outputs":[{"name":"stdout","output_type":"stream","text":["6\n"]}],"source":["print(len(weeks))   #length"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":336,"status":"ok","timestamp":1710734315714,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ZYBsLre3sZAH","outputId":"2bb90b38-15e6-4283-8ee4-5544d93efb99"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'1': 'MON', '2': 'tuesday', '3': 'wednesday', '4': 'Thursday', '5': 'Friday', '6': 'Saturday', '7': 'sunday', '8': 'Strange day'}\n"]}],"source":["weeks['8']='Strange day'  #add\n","print(weeks)"]},{"cell_type":"markdown","metadata":{"id":"RjNK3-gis7Wt"},"source":["###Example 5 (Remove items from dict)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":526,"status":"ok","timestamp":1710734318568,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"YyidVoVbsjJt","outputId":"43e07bef-d29e-403f-bcf2-04ca053f87a1"},"outputs":[{"name":"stdout","output_type":"stream","text":["Strange day\n"]}],"source":["print(weeks.pop('8'))    ##pop func ni haaltandaa argument avaad, terendee hargalzsan utgiig hasdag"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":617,"status":"ok","timestamp":1710772934428,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"vSYZ60OJsjVZ","outputId":"d6b8b0e9-de5f-431f-a68c-8395eae36be9"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'1': 'MON', '2': 'tuesday', '3': 'wednesday', '4': 'Thursday', '5': 'Friday', '6': 'Saturday', '7': 'sunday'}\n"]}],"source":["print(weeks)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":412,"status":"ok","timestamp":1710772937688,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"k3haWoKasjgf","outputId":"23ac7de0-7198-4ad7-8aff-5762e3d3d62f"},"outputs":[{"name":"stdout","output_type":"stream","text":["('7', 'sunday')\n"]}],"source":["d= weeks.popitem()  ##popitem ni haaltandaa argument avdaggu, zuvhun hamgiin ardaas ni l hasaad yvchdag\n","print(d)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":416,"status":"ok","timestamp":1710734438062,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"SAY6-MojtqxD","outputId":"39518621-a07a-4b2f-8395-64063317ff12"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'1': 'MON', '2': 'tuesday', '3': 'wednesday', '4': 'Thursday', '5': 'Friday'}\n"]}],"source":["print(weeks)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1710734560837,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"XBSwsEyWtqzD","outputId":"048341fb-bfb8-4b8e-f4e1-7513e75ec0ed"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'2': 'tuesday', '3': 'wednesday', '4': 'Thursday', '5': 'Friday'}\n"]}],"source":["del weeks['1']  ##del ni bas popitemtai tustei\n","print(weeks)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1710734606205,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ZCj9yCQMtq1z","outputId":"ba6feff6-070c-4640-9aa0-d2384ab31f51"},"outputs":[{"name":"stdout","output_type":"stream","text":["{}\n"]}],"source":["weeks.clear()  #clear hiigeed bugd arilj bga ch yum hevelj bga ni object ni still hadgalagdaad uldej baigaa gsen ug\n","print(weeks)"]},{"cell_type":"markdown","metadata":{"id":"DFkeN582u6Hp"},"source":["###Example 6 (Copy a dict)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jZFle6YPvH0t"},"outputs":[],"source":["weeks['1']= 'Monday'\n","d2=weeks.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1710734832333,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"O-Ac3ikIvYBW","outputId":"798b5c6e-c61a-4200-f771-1311dc7ba63d"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'1': 'Monday'}\n","{'1': 'Monday'}\n"]}],"source":["\n","print(weeks)\n","print(d2)"]},{"cell_type":"markdown","metadata":{"id":"BJQXIsvOvAyj"},"source":["###Example 7 (Case statement)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QUXjd7Y4vYKf"},"outputs":[],"source":["strToNumber={\n","'one':1,\n","'two':2,\n","'three':3,\n","'four':4,\n","'five':5\n","}"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":477,"status":"ok","timestamp":1710750340430,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"VpN4uF6-qWPk","outputId":"d08506d9-9f65-4a3b-d4dd-e136759c8657"},"outputs":[{"data":{"text/plain":["1250"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["strToNumber['two']*strToNumber['five']** strToNumber['four']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711508021960,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ewxoLgjLqWax","outputId":"492fae5a-7377-4a55-be03-503eb3d5ee21"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Ene toog haraahan sand uusgeegui baina.'"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["strToNumber.get('ten','Ene toog haraahan sand uusgeegui baina.')"]},{"cell_type":"markdown","metadata":{"id":"v1Obq0xEtCPk"},"source":["##Lesson 9 (Set)"]},{"cell_type":"markdown","metadata":{"id":"MZQ1KkIWtE4n"},"source":["###Example 1\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9Fb1WC7O2_kD"},"outputs":[],"source":["my_sets={1,2,7,2,25,5,3,20,24,25,7,9}"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":408,"status":"ok","timestamp":1711508097018,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"DkPADQ8Q3Jub","outputId":"8b53f15d-2f59-4421-d577-3769eb349b54"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 2, 3, 5, 7, 9, 20, 24, 25}\n"]}],"source":["print(my_sets)   ##As you can see, ingeed bas angilaad ugchdug huurhun l sda bnle"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710753787110,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"AVZhCpWs3JxH","outputId":"86f3fcee-53c5-4ace-bf20-a2bb7eda90f0"},"outputs":[{"data":{"text/plain":["{1, 2, 3, 5, 7, 9, 11, 20, 24, 25}"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["(my_sets.add(11))    ##Set ni dotroos ni element hasch boldoggui hedii ch nemj bol boldog\n","my_sets"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1710753915548,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"MrpJ2T9X3XY2","outputId":"dea31b3e-c5a4-422f-c2d2-20d70d509311"},"outputs":[{"data":{"text/plain":["10"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["len(my_sets)"]},{"cell_type":"markdown","metadata":{"id":"-E1kH1w24X3_"},"source":["###Example 2 (Remove items)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711508101523,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"aoo5vmQB4TMF","outputId":"3a655e30-53c7-4796-91ea-3f1ee3078259"},"outputs":[{"name":"stdout","output_type":"stream","text":["{2, 3, 5, 7, 9, 20, 24, 25}\n"]}],"source":["my_sets.remove(1)\n","print(my_sets)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1711508118621,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"iMMuZncR4TN3","outputId":"d8c19312-b72d-4f7a-b7c8-3fa51f11083b"},"outputs":[{"name":"stdout","output_type":"stream","text":["{2, 3, 5, 7, 9, 20, 24, 25}\n"]}],"source":["my_sets.discard(100)    ##discard function ni dotor ni bsn bgagau aldaa ugduggu\n","print(my_sets)        ## aa harin remove sda ni bhgui ym bicheed bval aldaa uguud shaana"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1711508138385,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"UvsrUkrv4TQs","outputId":"19e666f8-9b49-44ec-f36b-f8d1de8abd62"},"outputs":[{"name":"stdout","output_type":"stream","text":["{5, 7, 9, 20, 24, 25}\n"]}],"source":["my_sets.pop()\n","print(my_sets) ##ene shuud urdaas ni hasaad yvchdag ym baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1710754412823,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"I9Kb4Koa6FwH","outputId":"a755ed7f-614b-4dfe-8582-31f9a209501c"},"outputs":[{"name":"stdout","output_type":"stream","text":["set()\n"]}],"source":["my_sets.clear()  ##clear hiij baigaa ch gsn sanah oind uldej bga gsn ug (clear function ii neg ontslog ghiimuda)\n","print(my_sets)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":159},"executionInfo":{"elapsed":5,"status":"error","timestamp":1711508190710,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"oe2ZGWKz6F_N","outputId":"290b19a4-84b5-488a-a1a1-e7d24b3d5a59"},"outputs":[{"ename":"NameError","evalue":"name 'my_sets' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-27-d3e9168270d0>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdel\u001b[0m \u001b[0mmy_sets\u001b[0m   \u001b[0;31m##gevel yuruusu l ustgaad haychij baigaan. ene uyd aldaa ugnu.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmy_sets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'my_sets' is not defined"]}],"source":["del my_sets   ##gevel yuruusu l ustgaad haychij baigaan. ene uyd aldaa ugnu.\n","print(my_sets)  ## ygaad gevel delete hiitsen yumaa hevelj chadku bolhoor"]},{"cell_type":"markdown","metadata":{"id":"_EKGSZvb4Jh_"},"source":["###Example 2.5  (Constructor)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":454,"status":"ok","timestamp":1710754656497,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"nMOTJ7QP6nqv","outputId":"87821bf1-0709-4c41-cc7c-71d49ed9d60b"},"outputs":[{"data":{"text/plain":["{1, 2, 3}"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["set((1,2,3))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":336,"status":"ok","timestamp":1710754652831,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"YvzXa_sU634g","outputId":"bc6d4e3e-8991-4f30-8958-c48bd1b4a90c"},"outputs":[{"data":{"text/plain":["{1, 2, 3, 4, 5, 6}"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["set((1,2,3,3,3,4,5,6))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1-BSVH9s637T"},"outputs":[],"source":["lisst=[1,2,3,2,2,2,1,2,2,4,5,3,1,3,]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":353,"status":"ok","timestamp":1710754862155,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"l_2Ew1NI7ggN","outputId":"802b28ee-e530-41c9-da88-f70d09f7d6f2"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 5]\n"]}],"source":["lisst.sort()  ##listiin bairlaliig sort hiij ugdug shit\n","print(lisst)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":337,"status":"ok","timestamp":1710754878821,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"BFW3K7N77giR","outputId":"6dc413e3-e439-4aad-a79a-4fb96bd0ef22"},"outputs":[{"data":{"text/plain":["[1, 2, 3, 4, 5]"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["list(set(lisst)) ##ene ni ehleed set bolgoj bn(set dotor davhardsan element bhgui bolchdog bolhoor---butsaagaad list bolgoh uyd davhardsan bsn shituu\n","                 ##        ni gants bolood l uldchij baiga)\n"]},{"cell_type":"markdown","metadata":{"id":"7dvywUdd4hih"},"source":["##Lesson 10 (Sets deerh olon uildluud ba tedgeeriin heregleeg oilgohui)"]},{"cell_type":"markdown","metadata":{"id":"deTfVHts4lAg"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":386,"status":"ok","timestamp":1711508288395,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"y2S0oF2pIJ-G","outputId":"286368b2-6325-4a68-dd81-6170101bb94e"},"outputs":[{"name":"stdout","output_type":"stream","text":["{(10, 'o'), (11, 'n'), (7, 'h'), (3, 'h'), (5, 'n'), (4, 'o'), (8, 'y'), (9, 't'), (0, 'P'), (1, 'y'), (2, 't'), (6, 'P')}\n"]}],"source":["print(set(enumerate('PythonPhyton'))) ##stringiig urd tald ni index bicheed set bolgoj huvirgaj bn"]},{"cell_type":"markdown","metadata":{"id":"OhPyaP3Q4lKG"},"source":["###Example 2 (Union)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jywKACgUTx0b"},"outputs":[],"source":["a={1,2,3,4,5,6,7,8,9,11,12}\n","b={2,4,5,6,8,54,32}"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":508,"status":"ok","timestamp":1710761183073,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"L6f_ReEHTyh8","outputId":"f6b40290-f966-4fcd-94e3-3dd0fe362e79"},"outputs":[{"data":{"text/plain":["{1, 2, 3, 4, 5, 6, 7, 8, 9}"]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["a.union(b)"]},{"cell_type":"markdown","metadata":{"id":"zBuRYt7F4ljs"},"source":["###Example 3  (Intersection)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":501,"status":"ok","timestamp":1710761450920,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"jJxL5hiEUELe","outputId":"0240c3c0-13b4-4b8b-edec-8a4ea31ab00f"},"outputs":[{"data":{"text/plain":["{2, 4, 5, 6, 8}"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["a.intersection(b)"]},{"cell_type":"markdown","metadata":{"id":"z_ppPSUY4lso"},"source":["###Example 4  (difference)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":530,"status":"ok","timestamp":1710761454022,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"2gLgcvRxUITJ","outputId":"92ca41f0-914b-4a02-cacb-ac93b47edbf0"},"outputs":[{"data":{"text/plain":["{1, 3, 7, 9, 11, 12}"]},"execution_count":46,"metadata":{},"output_type":"execute_result"}],"source":["a.difference(b)"]},{"cell_type":"markdown","metadata":{"id":"QKZyH5do4l2J"},"source":["###Example 5 (symmetric_difference)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":504,"status":"ok","timestamp":1710761457895,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Uwmcdbh9UQhW","outputId":"477f3b6e-9500-4809-e400-950c69d4ed8c"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 3, 7, 9, 11, 12, 32, 54}\n","{1, 3, 7, 9, 11, 12, 32, 54}\n"]}],"source":["print(a.symmetric_difference(b))  #a ba b set-iin zuvhun ylgaatai elementuudin tsugluulga\n","print(a^b)"]},{"cell_type":"markdown","metadata":{"id":"v3CLwTOqUQ64"},"source":["###Example 6  (Update////   |=)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":594,"status":"ok","timestamp":1710761822560,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Ocr-hSkFVfn6","outputId":"9e3fd4a0-e7c3-404b-9b5b-ca5bf5b46606"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16}\n"]}],"source":["a.update({13,14,15,16})\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":595,"status":"ok","timestamp":1710761827684,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"thdxKkMCV1XP","outputId":"d449ab33-3118-4bbe-e4e0-d03667a85997"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18}\n"]}],"source":["a |={17,18}    ##Yg deer baigaatai l adil sda. Bichiglell boginon version\n","print(a)"]},{"cell_type":"markdown","metadata":{"id":"soJhRsxuURVb"},"source":["###Example 7 (intersectoin_update///    &)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":461,"status":"ok","timestamp":1710761830959,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"gw0ZOoQ4URky","outputId":"8d9af628-4650-4b7b-83dd-84cd77dddb04"},"outputs":[{"name":"stdout","output_type":"stream","text":["{2, 4, 5, 6, 8}\n"]}],"source":["a.intersection_update(b)\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710761837397,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"2k1pd3dNWHID","outputId":"c8544c08-7f1f-45e1-8d25-f643add8cade"},"outputs":[{"data":{"text/plain":["{2, 4, 5, 6, 8}"]},"execution_count":59,"metadata":{},"output_type":"execute_result"}],"source":["a&b  ## bas deedehteigee adil"]},{"cell_type":"markdown","metadata":{"id":"Hv9RRYsfWpMU"},"source":["###Example 8   (difference_update/// -=)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"30VbQr2mWjtk"},"outputs":[],"source":["b.difference_update({11,12,13,14,15})\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":439,"status":"ok","timestamp":1710762025931,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"H__B_MsgWjvF","outputId":"6aa48cce-2cae-40c9-d213-46e6cd3116a9"},"outputs":[{"name":"stdout","output_type":"stream","text":["{32, 54}\n"]}],"source":["print(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HFIbM4TXXWJS"},"outputs":[],"source":["b -={32}  ## ene bas deedehteigee adilhan zuil(diffeence update)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":373,"status":"ok","timestamp":1710762081679,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"LTEz7A0qXWQG","outputId":"4fa25a53-47de-419e-972a-06ba0804740a"},"outputs":[{"name":"stdout","output_type":"stream","text":["{54}\n"]}],"source":["print(b)"]},{"cell_type":"markdown","metadata":{"id":"wJacPlV6WnvA"},"source":["###Example 9  (symmetric_difference_update////  ^)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1710762179686,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"XtnlMrjWWjx2","outputId":"16679335-8153-48a0-dd1c-e506278c4d0c"},"outputs":[{"name":"stdout","output_type":"stream","text":["{2, 4, 5, 6, 8, 54}\n"]}],"source":["a.symmetric_difference_update(b)\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":510,"status":"ok","timestamp":1710762208002,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"JehuBxeVXnW9","outputId":"3c835ac2-e0b7-4453-8404-652fa94e26d6"},"outputs":[{"name":"stdout","output_type":"stream","text":["{2, 4, 5, 6, 8, 54}\n"]}],"source":["a^={2,6,54}\n","print(a)"]},{"cell_type":"markdown","metadata":{"id":"kzgRsFAS4mFP"},"source":["##Lesson 11  (for bolon while davtalt)"]},{"cell_type":"markdown","metadata":{"id":"tR05bQ1VZj0x"},"source":["##for"]},{"cell_type":"markdown","metadata":{"id":"5YlFzOE6YhiH"},"source":["###Example 1\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1710762499335,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NShb5G5G5T5s","outputId":"bc7bf7cf-d418-44a7-994f-368e301206e7"},"outputs":[{"name":"stdout","output_type":"stream","text":["P\n","y\n","t\n","h\n","o\n","n\n"]}],"source":["for i in \"Python\":\n","    print(i)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":390,"status":"ok","timestamp":1711508475378,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"g0iVWq-cY9Lr","outputId":"c1de6b60-4bc0-436a-921a-a7f2c259e1e2"},"outputs":[{"name":"stdout","output_type":"stream","text":["P*y*t*h*o*n*"]}],"source":["for i in \"Python\":\n","    print(i , end='*')"]},{"cell_type":"markdown","metadata":{"id":"JXtCpS6bYo4X"},"source":["###Example 2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4329,"status":"ok","timestamp":1711508500166,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"WeyYu_0MZc1P","outputId":"570c62be-1e09-4abe-b74b-d950c4ecff5a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Zaigaar tusgaarlasna duriin 5n too oruulna uu:\n","1 2 3 4 5\n"]}],"source":["number_list=list(map(int, input('Zaigaar tusgaarlasna duriin 5n too oruulna uu:\\n').split(\" \")))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":432,"status":"ok","timestamp":1711508505480,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"t4w96mPl5gkH","outputId":"58368eb9-362c-49d8-d335-1235dbdbcc40"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 2, 3, 4, 5]\n"]}],"source":["print(number_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1710762965986,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"syhxZzrdasg6","outputId":"91806768-dbdb-41f5-de6f-3d90da8becbc"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n","9\n","25\n","49\n","121\n"]}],"source":["for el in number_list:\n","    print(el**2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":409,"status":"ok","timestamp":1710763122554,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"iNZ-6R-MasqR","outputId":"f0f8748e-6153-4fbe-81c5-d0f88a3caf99"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 toonii kvadrat zereg ni 1 yum \n","3 toonii kvadrat zereg ni 9 yum \n","5 toonii kvadrat zereg ni 25 yum \n","7 toonii kvadrat zereg ni 49 yum \n","11 toonii kvadrat zereg ni 121 yum \n"]}],"source":["for el in number_list:   ## deed taliin arai saijruulsan l bolohoos adilhan shit\n","    print(\"{} toonii kvadrat zereg ni {} yum \".format(el, el**2))"]},{"cell_type":"markdown","metadata":{"id":"h0Ev6aUOYq4z"},"source":["###Example 3 (fibonacci)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2023,"status":"ok","timestamp":1712589707974,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-x8zbnno8b5H","outputId":"3a16a4c0-79d5-44e2-a991-041b36189b8a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Toogoo oruulna uu u asshole:6\n","[0, 1, 1, 2, 3, 5, 8, 13]\n"]}],"source":["fib_list=[0,1]\n","n=int(input('Toogoo oruulna uu u asshole:'))\n","for i in range(n):\n","    fib_list.append(fib_list[-2]+fib_list[-1])\n","print(fib_list)\n"]},{"cell_type":"markdown","metadata":{"id":"6c8wXYiwYssB"},"source":["###Example 4"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9948,"status":"ok","timestamp":1711508942117,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"emOLzfAKBNj9","outputId":"c0651311-2d03-447b-9056-bbe9a4ca6147"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 2 3 4 3 2 1 2 1 3 4 5\n","{1: 3, 2: 3, 3: 3, 4: 2, 5: 1}\n","<class 'dict'>\n"]}],"source":["arr=list(map(int , input().split()))\n","\n","count_dict={}\n","\n","for el in arr:\n","    if el in count_dict:\n","        count_dict[el] +=1\n","    else :\n","        count_dict[el] =1\n","\n","print(count_dict)\n","print(type(count_dict))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8897,"status":"ok","timestamp":1710773630030,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ain5HtDw9jdC","outputId":"64f477b1-61c4-4a5a-a379-583d497f8b47"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 2 3 4 3 2 1 3 2\n","[1, 2, 3, 4, 3, 2, 1, 3, 2]\n","{1: 1}\n","[1, 2, 3, 4, 3, 2, 1, 3, 2]\n","{1: 1, 2: 1}\n","[1, 2, 3, 4, 3, 2, 1, 3, 2]\n","{1: 1, 2: 1, 3: 1}\n","[1, 2, 3, 4, 3, 2, 1, 3, 2]\n","{1: 1, 2: 1, 3: 1, 4: 1}\n","{1: 2, 2: 3, 3: 3, 4: 1}\n"]}],"source":["arr=list(map(int , input().split()))\n","\n","count_dict={}\n","for el in arr:\n","    #print(el)\n","    if el in count_dict:\n","        count_dict[el] +=1\n","    else:\n","        count_dict[el]=1\n","        print(arr)\n","        print(count_dict)\n","    #else:\n","     #   count_dict[el]=1\n","\n","print(count_dict)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":478,"status":"ok","timestamp":1710774860050,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"VL8x6tW5wfof","outputId":"0188cc0f-8292-4f07-ad91-1c064bcd5a33"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 element 2 udaa orson baina.\n","1\n","2\n","2 element 3 udaa orson baina.\n","2\n","3\n","3 element 2 udaa orson baina.\n","3\n","2\n","4 element 2 udaa orson baina.\n","4\n","2\n","12 element 1 udaa orson baina.\n","12\n","1\n"]}],"source":["for k in count_dict:\n","    print('{} element {} udaa orson baina.'.format(k, count_dict[k]))\n","    print(k)\n","    print(count_dict[k])"]},{"cell_type":"markdown","metadata":{"id":"jHoSgLnVYuX3"},"source":["##While"]},{"cell_type":"markdown","metadata":{"id":"CRyT-pDkYvFi"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":408,"status":"ok","timestamp":1710769302791,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"gJKMvlvhYy-I","outputId":"0ca43a97-429a-4691-cdcb-e7762f7641a9"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}],"source":["i=1\n","while i<11:\n","    print(i)\n","    i+=1"]},{"cell_type":"markdown","metadata":{"id":"J-waF66gzFJP"},"source":["###Example 2 (Fibonacci)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1712589732570,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"dg68lbKlytUL","outputId":"fe4053d6-1a33-441d-8ed1-c4c81a593046"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n"]}],"source":["lst=[0,1]\n","i=2\n","while i<11:\n","    lst.append(lst[-1]+lst[-2])\n","    i+=1\n","print(lst)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3370,"status":"ok","timestamp":1712589773325,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"09jYkPVBzcXQ","outputId":"8480b872-aa95-4f88-a972-12f876c5f669"},"outputs":[{"output_type":"stream","name":"stdout","text":["Hed hurtel hevlemeer baigaagaa songono uu:10\n","[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n"]}],"source":["lst=[0,1]\n","\n","i=int(input('Hed hurtel hevlemeer baigaagaa songono uu:'))\n","for x in range(2,i):\n","    lst.append(lst[-1]+lst[-2])\n","print(lst)\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"Eun_J79oNmOQ"},"source":["##Lesson 12 (Range function)"]},{"cell_type":"markdown","metadata":{"id":"27Ho1vk8NmZZ"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1711509363620,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"_KeU_pILNmnE","outputId":"b77b6e9a-5814-43a8-e3f9-9af9b5add0a4"},"outputs":[{"name":"stdout","output_type":"stream","text":["[2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50]\n"]}],"source":["   ##50 hurtelh buh tegsh toonuudiig hevlej bn\n","a=list(range(2,51,2))\n","#print(\"\".join(str(a)))\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":406,"status":"ok","timestamp":1711509377651,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NU2OW5SfNmpo","outputId":"8b15cd45-50b1-4b93-f657-057fba2f424e"},"outputs":[{"data":{"text/plain":["[1,\n"," 3,\n"," 5,\n"," 7,\n"," 9,\n"," 11,\n"," 13,\n"," 15,\n"," 17,\n"," 19,\n"," 21,\n"," 23,\n"," 25,\n"," 27,\n"," 29,\n"," 31,\n"," 33,\n"," 35,\n"," 37,\n"," 39,\n"," 41,\n"," 43,\n"," 45,\n"," 47,\n"," 49]"]},"execution_count":43,"metadata":{},"output_type":"execute_result"}],"source":["(list(range(1,50,2)))  ## 50 hurtelh buh sondgoi toonuud. Hamgiin ard taliin taslaliin ardah 2 ni 2oor nemegduulne gsn ug bhshig bn"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4134,"status":"ok","timestamp":1711509438371,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"x1fnrY1iNmsb","outputId":"ca54a267-4eb3-4d3a-bf4f-8335a29c8a24"},"outputs":[{"name":"stdout","output_type":"stream","text":["Value of n:10\n","3 6 9 "]}],"source":["n=int(input('Value of n:'))  ##garaas utga avaad ter too hurtelh buh 3t huvaagdah toonuudiig hevlej bn\n","\n","for x in range(3,n+1 ,3):\n","    print(x, end=' ')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1710777044329,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"OJnd6Xu6QBmS","outputId":"94bb6e0f-be2e-4028-d134-09fdc1ee574c"},"outputs":[{"name":"stdout","output_type":"stream","text":["[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n"]}],"source":["print(list(range(10,-10,-1)))"]},{"cell_type":"markdown","metadata":{"id":"ioWOodix5JX3"},"source":["###Lesson 13 (Bas l davtaltuud/)   (Pass,break, continue)"]},{"cell_type":"markdown","metadata":{"id":"MwIB-9XUQDI3"},"source":["###Example 1 (Pass)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iM7mOiPc0FNL"},"outputs":[],"source":["lst=[]\n","\n","for i in range(10):\n","    pass\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e7jbK_QZ03TA"},"outputs":[],"source":["for i in range(10):\n","    pass\n","    lst.append(i)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":426,"status":"ok","timestamp":1711509492649,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NkFXzBAA03Va","outputId":"51fa1609-5f18-4dae-d8de-e4c916b7f152"},"outputs":[{"data":{"text/plain":["[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["lst\n"]},{"cell_type":"markdown","metadata":{"id":"F8GUPWDiBUhM"},"source":["###Example 2 (Break)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711509530803,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"5v4xzm2M03Xm","outputId":"ac981760-bcc4-4c92-9eb8-7cc185d45511"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n"]}],"source":["i=1\n","lst=[]\n","while True:\n","    if i**2>100:\n","        break\n","    lst.append(i**2)\n","    i+=1\n","print(lst)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4859,"status":"ok","timestamp":1711509612662,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"bF9Ajx_H03Zt","outputId":"edc967ad-72b0-4f3e-e2d3-6a26b028df93"},"outputs":[{"name":"stdout","output_type":"stream","text":["Zaaval too oruulna uu:123r21\n","Aldaa\n"," Toonoos uur r temdegt orson baina\n"]}],"source":["s= input('Zaaval too oruulna uu:')\n","\n","for c in s:\n","    if c not in '1234567890':\n","        print('Aldaa\\n Toonoos uur {} temdegt orson baina'.format(c))\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2922,"status":"ok","timestamp":1713883304131,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"jJz6yrW503bw","outputId":"ff8081f8-b2e3-4d05-e21b-b5b7b2625efb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Zaaval too oruulna uu:421421\n","Tanii oruulsan 421421 toonii yazguur bol 649.1695 yum.\n"]}],"source":["s=input('Zaaval too oruulna uu:')\n","is_error=False\n","for c in s:\n","    if c not in '1234567890':\n","        is_error= True\n","        break\n","\n","if is_error:\n","    print('Aldaa!\\nToonoos uur {} temdegt orson baina!'.format(c))\n","else:\n","    print('Tanii oruulsan {} toonii yazguur bol {:.4f} yum.'.format(int(s), int(s)**0.5))\n","\n"]},{"cell_type":"markdown","metadata":{"id":"tW8W_a8fIjfk"},"source":["###Example 3 (Continue)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1710825412654,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"8xSZiN8j03d4","outputId":"d40efc6e-9539-4b7e-e156-1662a1fb3389"},"outputs":[{"name":"stdout","output_type":"stream","text":["15\n","30\n","45\n","60\n","75\n","90\n"]}],"source":["## 3 ba 5d zereg huvaagddag too\n","for i in range(1,101):\n","    if i%15 !=0:\n","        continue\n","    print(i)\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1849,"status":"ok","timestamp":1713883433673,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"YOwW3ZBo03f4","outputId":"8e40286a-a7e1-4317-c07e-6eede70ffd75"},"outputs":[{"output_type":"stream","name":"stdout","text":["114\n","Anhnii too bish baina\n"]}],"source":["##garaas too avaad anhnii too mun esehiig ni tanih shit\n","n=int(input())\n","\n","for i in range(2,n):\n","    if n%i==0:\n","        print('Anhnii too bish baina')\n","        break\n","else:\n","    print('Anhnii too uneheer mun baina aa bro')\n","\n","#break baihgui baival tegsh toon deer zavaarna."]},{"cell_type":"markdown","metadata":{"id":"m3xJmx20NKYo"},"source":["##Lesson 13 (Medlegee shalgah bodloguud)"]},{"cell_type":"markdown","metadata":{"id":"6C0FUmeBNKmh"},"source":["###Example 1\n","## ehleed orson humuusiin toog oruulad, daraa ni avsn onoonudig ni oruulahad 2doh bairnii onoog hevleh shit"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6087,"status":"ok","timestamp":1713883689581,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"TXQDg5FKNY9g","outputId":"2aae2219-81ee-4a3f-a5fe-8d43add7f748"},"outputs":[{"output_type":"stream","name":"stdout","text":["4\n","1 6 8 4\n","6\n"]}],"source":["if __name__=='__main__':\n","    n=int(input())\n","    arr=map(int, input().split())\n","    lst=list(set(arr))\n","    lst.sort()\n","    print(lst[-2])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14417,"status":"ok","timestamp":1713883673684,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"IT8VGmWqxL_P","outputId":"0bd4e3bc-a6ae-4ecb-df2c-6145cbed3082"},"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","1 4 5 7 4 \n","5\n"]}],"source":["if __name__=='__main__':\n","    n=int(input())\n","    arr=list(map(int, input().split()))\n","    big_max= max(arr)\n","    second_max= -10000\n","    for el in arr:\n","        if el != big_max and second_max<el:\n","            second_max = el\n","print(second_max)"]},{"cell_type":"markdown","metadata":{"id":"pP_FROfyNVHZ"},"source":["###Example 2\n","##given an integer, n and n space-seperated integer as input,create a tuple,t, of those n integers. Then compute and print the result of hash(t)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7066,"status":"ok","timestamp":1710898167372,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Pdgy74I6NZuA","outputId":"64d83530-938d-425b-b8f6-f450533cd3d3"},"outputs":[{"name":"stdout","output_type":"stream","text":["2 \n","1 2\n","-3550055125485641917\n"]}],"source":["if __name__ == '__main__':\n","    n=int(input())\n","    integer_list=map(int,input().split())\n","    print(hash(tuple(integer_list)))\n"]},{"cell_type":"markdown","metadata":{"id":"Q2LvLnI2NVLO"},"source":["###Example 3\n","## medkue 7n uildel hii gesen list-iin dasgal baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"executionInfo":{"elapsed":8016,"status":"error","timestamp":1710904080885,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"m8NqnLwV03kX","outputId":"6e8b10b1-8b0f-4034-f55a-bf55c0958a3f"},"outputs":[{"name":"stdout","output_type":"stream","text":["[5, 10, 9, 1]\n","[9, 10, 5]\n"]},{"ename":"KeyboardInterrupt","evalue":"Interrupted by user","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-821405bb4fe1>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mlst\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mN\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m         \u001b[0mcmd\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcmd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m==\u001b[0m \u001b[0;34m'insert'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m             \u001b[0mlst\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minsert\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcmd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcmd\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}],"source":["if __name__=='__main__':\n","    N=int(input())\n","    lst=[]\n","    for i in range(N):\n","        cmd=input().split()\n","        if cmd[0]== 'insert':\n","            lst.insert(int(cmd[1]), int(cmd[2]))\n","        elif cmd[0]== 'remove':\n","            lst.remove(int(cmd[1]))\n","        elif cmd[0]== 'append':\n","            lst.append(int(cmd[1]))\n","        elif cmd[0]=='sort ':\n","            lst.sort()\n","        elif cmd[0]=='pop':\n","            lst.pop()\n","        elif cmd[0]=='reverse':\n","            lst.reverse()\n","        else:print(lst)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4613,"status":"ok","timestamp":1710838831725,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"pRhDSfhD03m7","outputId":"226e873e-0a5b-457a-d892-7aa5f145a879"},"outputs":[{"name":"stdout","output_type":"stream","text":["22\n","Not weird\n"]}],"source":["i\n","if __name__ == '__main__':\n","    n = int(input().strip())\n","if n%2 !=0:\n","    print('Weird')\n","if n%2==0 and n in  range(2,5):\n","    print('Not weird')\n","if n%2==0 and n in range(6,20):\n","    print('Not weird')\n","if n%2==0 and  n>20:\n","    print('Not weird')\n"]},{"cell_type":"markdown","metadata":{"id":"dNw1R-3IxV_t"},"source":["##Lesson 14"]},{"cell_type":"markdown","metadata":{"id":"P981JjrcxWKA"},"source":["###Example 1 (Nested loop--- davhar davtalt)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":514,"status":"ok","timestamp":1713883984743,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"8A9PfG1X8_5U","outputId":"e25ed14f-cf77-4959-b8b8-dd4d5fbcafab"},"outputs":[{"output_type":"stream","name":"stdout","text":["1 12\n","2 11\n","3 10\n","4 9\n"]}],"source":["for x in range(1,5):\n","    for y in range(6,14):\n","        if x+y==13:\n","            print(x,y)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1713884140462,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"aN5ZvFySy8DW","outputId":"e021a3bf-903e-4b0e-8fe6-44c5bec896f4"},"outputs":[{"output_type":"stream","name":"stdout","text":["enormous car\n","enormous dog\n","enormous laptop\n","enormous mouse\n","smart car\n","smart dog\n","smart laptop\n","smart mouse\n","miraculous car\n","miraculous dog\n","miraculous laptop\n","miraculous mouse\n","destitute car\n","destitute dog\n","destitute laptop\n","destitute mouse\n","absurd car\n","absurd dog\n","absurd laptop\n","absurd mouse\n","fast car\n","fast dog\n","fast laptop\n","fast mouse\n"]}],"source":["noun= ['car','dog','laptop','mouse',]\n","adj=['enormous','smart','miraculous','destitute','absurd','fast']\n","for a in adj:\n","    for b in noun:\n","        print(f'{a} {b}')\n"]},{"cell_type":"markdown","metadata":{"id":"9F-380AJ1eU3"},"source":["###Example 2  (Shatriin nudiig 0eer duurgej hevledeg shit)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XScZMF9Dz7lI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713884369628,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1184d226-bac3-4c8d-80d7-74f7d9ceec53"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]\n"]}],"source":["board= []\n","for  r in range(8):\n","    board.append([])\n","    #print(board)\n","    for c in range(8):\n","        board[r].append(0)\n","print(board)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":419,"status":"ok","timestamp":1713884301548,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"52FapVNx0upy","outputId":"aecf1998-0d47-4c04-ae59-d0c134356a3a"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n","[0, 0, 0, 0, 0, 0, 0, 0]\n"]}],"source":["for rows in board:\n","    print(rows)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":396,"status":"ok","timestamp":1713884543684,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"n5CZq7461Wnq","outputId":"1235bc21-f8b5-4563-eecf-5c5ccf289369"},"outputs":[{"output_type":"stream","name":"stdout","text":["[['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae'], ['ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae', 'ae']]\n"]}],"source":["board2=[]\n","for i in range(8):\n","    board2.append(['ae']*8)\n","print(board2)\n","#for rows in board2:\n"," #   print(rows)\n"]},{"cell_type":"markdown","metadata":{"id":"neVopoQv4bpx"},"source":["###Example 3  "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10454,"status":"ok","timestamp":1711511533730,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"saoxhrdK36UX","outputId":"d88c4829-1a92-411b-9a0c-5eecc6e48594"},"outputs":[{"name":"stdout","output_type":"stream","text":["3\n","a\n","1\n","b\n","2\n","d\n","2\n","['d', 'd', 'd']\n","d\n","d\n","d\n"]}],"source":["### Huuhduudiin neriig duntei ni haraad, bagaasa 2 dh dung ni hevleh shit.(Tentsuu 2 bol onoobol nersiin daraalllaar)\n","\n","student={}\n","for _ in range(int(input())):\n","    name=input()\n","    score=float(input())     ##float bol int shig. Gehdee butarhai toog ilerhiilne.\n","    student[name]=score\n","scores=list(set(student.values()))\n","scores.sort()\n","k=scores[1]\n","lst=[]\n","for i in student.items():\n","    if score ==k:\n","        lst.append(name)\n","lst.sort()\n","for name in lst:\n","    print(name)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":159539,"status":"ok","timestamp":1713885311449,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"5UNzYYmZAFKE","outputId":"1f459ded-ee24-45d4-f2e1-d8aa08c41f2a"},"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","bold\n","14\n","bat\n","15\n","suren \n","9\n","bold\n"]}],"source":["student = {}\n","for _ in range(int(input())):\n","    name = input()\n","    score = float(input())\n","    student[name] = score\n","\n","scores = sorted(set(student.values()))\n","second_lowest_score = scores[1]\n","\n","names_with_second_lowest_score = []\n","\n","for name, score in student.items():\n","    if score == second_lowest_score:\n","        names_with_second_lowest_score.append(name)\n","\n","names_with_second_lowest_score.sort()\n","\n","for name in names_with_second_lowest_score:\n","    print(name)\n"]},{"cell_type":"markdown","metadata":{"id":"dVtKIWG34lPs"},"source":["###Lesson 15  (Intermediate (Davtalt,nuhtsult shits-g 1 mur code-r shiideh))"]},{"cell_type":"markdown","metadata":{"id":"Cl6i-xPh7szn"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":453,"status":"ok","timestamp":1710934383803,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"vSpjmNkE7tjw","outputId":"4eb9fd7e-6f37-47c4-a29e-2b6c230277fd"},"outputs":[{"name":"stdout","output_type":"stream","text":["a baga\n"]}],"source":["a=10\n","b=30\n","if a<b:\n","    print('a baga')\n","else:\n","    print('b baga')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":548,"status":"ok","timestamp":1710934426236,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"4mrgr_HA7tmk","outputId":"12faad02-49ad-4134-da02-936606ee2eb6"},"outputs":[{"name":"stdout","output_type":"stream","text":[" b baga\n"]}],"source":["a,b=10,5\n","print('a baga' if a<b else 'b baga')"]},{"cell_type":"code","source":[],"metadata":{"id":"jDMPNAdDtPxI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["3%5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xi9dAiKctPz7","executionInfo":{"status":"ok","timestamp":1713922211567,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"37d7283a-1be0-4fb3-83cd-7f1dce2604dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":432,"status":"ok","timestamp":1710934879116,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"KU5CHtSF5B4r","outputId":"a5f2c761-56a5-471a-91b8-2a69cac8c4ec"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'False case'"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["\"True case\" if True and False else \"False case\""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":517,"status":"ok","timestamp":1710934898802,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-SYBBQtB5CE-","outputId":"4e1fe262-7d93-478d-cd6e-9879f730b4c2"},"outputs":[{"data":{"text/plain":["[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["list(range(1,11))"]},{"cell_type":"markdown","metadata":{"id":"YY1E9fKZqt76"},"source":["###Example 2 (List comprehension)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":409,"status":"ok","timestamp":1710936295973,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"0idGzCZ5rRos","outputId":"4f3d0e37-dae4-4dbd-d3d8-b23c58d28df4"},"outputs":[{"data":{"text/plain":["[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["[i**2 for i in range(1,11)]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":602,"status":"ok","timestamp":1710936279875,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"16bPe9etrRxI","outputId":"85ad1c0e-1a94-4b3e-a3aa-49647c064c03"},"outputs":[{"data":{"text/plain":["[11, 22, 23, 33, 44, 46, 55, 66, 69, 77, 88, 92, 99]"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["[i for i in range(1,100) if i%11==0 or i%23==0 ]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":821,"status":"ok","timestamp":1710936569288,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"t3K8n2cMrRze","outputId":"04f37d6a-85a1-495a-f8ea-898775e78367"},"outputs":[{"data":{"text/plain":["[(1, 'odd'),\n"," (2, 'even'),\n"," (3, 'odd'),\n"," (4, 'even'),\n"," (5, 'odd'),\n"," (6, 'even'),\n"," (7, 'odd'),\n"," (8, 'even'),\n"," (9, 'odd'),\n"," (10, 'even')]"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["[(i, 'even') if i%2==0 else (i,'odd') for i in range(1,11)]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":428,"status":"ok","timestamp":1710936717684,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"258L3Um3vtyZ","outputId":"1d68a467-784e-4b48-a725-f55c1be00a03"},"outputs":[{"data":{"text/plain":["[12, 16, 20, 15, 20, 25, 18, 24, 30, 21, 28, 35, 24, 32, 40]"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["[x*y for x in range(4,9) for y in range(3,6)]"]},{"cell_type":"markdown","metadata":{"id":"8tItmfZ94o8K"},"source":["####Example 3  (List comprehensions)"]},{"cell_type":"markdown","metadata":{"id":"ese7uxSg0Ua5"},"source":["##Lesson 16  (Function)"]},{"cell_type":"markdown","metadata":{"id":"4D1DxkqF0Z7j"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vsLS-MOU6G1K"},"outputs":[],"source":["def sum_of_two(p1,p2):\n","    print('sum of {},{} is {}'.format(p1,p2,p1+p2))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":325,"status":"ok","timestamp":1711072701463,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"accbdn0B1RF8","outputId":"6a34ca90-022b-4434-f677-d44254007320"},"outputs":[{"name":"stdout","output_type":"stream","text":["sum of 10,21 is 31\n"]}],"source":["sum_of_two(10,21)"]},{"cell_type":"markdown","metadata":{"id":"AIqMF0B-4mlK"},"source":["###Example 2 (creating and some asshole functions)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3khBFB2S4TnA"},"outputs":[],"source":["def greetings():\n","    print('Hello')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711072757000,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"VcDsYUca4g1N","outputId":"f60ebad2-e8a5-40be-cdff-d5d6d552c8ac"},"outputs":[{"name":"stdout","output_type":"stream","text":["Hello\n"]}],"source":["greetings()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yvp-xO054g4Z"},"outputs":[],"source":["def hello(name):\n","    print(\"Hello {}!\".format(name))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1711072875691,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"sWqUtJ-84g6F","outputId":"ae620e5d-ea00-4cbd-cd6a-6730c7ca4355"},"outputs":[{"name":"stdout","output_type":"stream","text":["hello Nana!\n"]}],"source":["hello('Nana')"]},{"cell_type":"markdown","metadata":{"id":"zDhIr6he8uUr"},"source":["###Example 3 (Default parameter)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-7eTbH2V4g80"},"outputs":[],"source":["def country(c='Mongolia'):\n","    print('I am from {}'.format(c))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1713924292772,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"qmUW4T1J8p1I","outputId":"7aabec67-8aa3-4f60-cfd4-9bcbf9fb3a69"},"outputs":[{"output_type":"stream","name":"stdout","text":["I am from Mongolia\n","I am from Usa\n"]}],"source":["(country())\n","(country('Usa'))"]},{"cell_type":"markdown","metadata":{"id":"zXRLtWxR9am3"},"source":["###Example 4 (Sequence papameter)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZMIzKP6A8svc"},"outputs":[],"source":["def print_elements(s):\n","    for i in s:\n","        print(i)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":365,"status":"ok","timestamp":1711074225034,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"lRCNtoTq84an","outputId":"7a7c1454-592a-41de-da5d-7b2d2e028bbf"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n","2\n","3213\n","432\n","43\n"]}],"source":["print_elements([1,2,3213,432,43])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1711074236399,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"2OI_2ykW84cn","outputId":"9bcf4614-1aeb-43c9-9ea2-087445f94fec"},"outputs":[{"name":"stdout","output_type":"stream","text":["P\n","y\n","t\n","h\n","o\n","n\n"]}],"source":["print_elements(\"Python\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711074239379,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"6_I_7FXc84fZ","outputId":"11052af5-f249-485a-bc13-a1d6a21d0c5f"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n","2\n","3\n","4\n","5\n"]}],"source":["print_elements({1,2,2,2,3,1,4,2,2,4,5,4,2,2,2,3,3,3})"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":406,"status":"ok","timestamp":1711074271217,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"5rPlsadq99dB","outputId":"35f04438-5149-4aa3-9716-7f523ea19506"},"outputs":[{"name":"stdout","output_type":"stream","text":["d\n","a\n","c\n","aw\n"]}],"source":["print_elements({'d':2, 'a':3, 'c':5, 'aw':10})"]},{"cell_type":"markdown","metadata":{"id":"6-wcpDQ3-b62"},"source":["###Example 5 (Return)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NtXxzoou99fW"},"outputs":[],"source":["def my_square(a):\n","    return a**2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1711074410291,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"L30nzubY99hd","outputId":"f282b1c3-0d4f-4082-dd95-ec440d51760e"},"outputs":[{"name":"stdout","output_type":"stream","text":["4\n"]}],"source":["b= my_square(2)\n","print(b)"]},{"cell_type":"code","source":["for y in range(5):\n","    for x in range(10):\n","        print(\"*\" ,end=\"\")\n","    print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"leP9xTli3mEY","executionInfo":{"status":"ok","timestamp":1713925243329,"user_tz":-540,"elapsed":506,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"eeb683a7-8434-4e6d-c00d-d92d0daf4fb6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["**********\n","**********\n","**********\n","**********\n","**********\n"]}]},{"cell_type":"markdown","metadata":{"id":"tNaAsYHLByir"},"source":["###Example 6 (n-ees baga hamgiin ih anhnii toog oldog shit)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xxV-WX6H99kP"},"outputs":[],"source":["\n","def is_prime(n):\n","    if n%2==0 :\n","        return False\n","    for i in range(3,n//2+1):\n","        if n%i==0:\n","            return False\n","    return True"]},{"cell_type":"code","source":["is_prime(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6XPgC85a9FuG","executionInfo":{"status":"ok","timestamp":1713926076726,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"fb929fa3-2d7c-4544-bdc9-c76d3ba15592"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eekJNVa8AgJx"},"outputs":[],"source":["def find_prime(n):\n","    for i in range(n-1,1,-1):\n","        if is_prime(i):\n","            return i\n","    return \"Nothing\""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1711075114951,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"BkSmvPkzAgLj","outputId":"206e6dd5-5dc2-4457-e66e-e44854a93798"},"outputs":[{"data":{"text/plain":["97"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["find_prime(100)"]},{"cell_type":"markdown","metadata":{"id":"ZFgY_Dl0B6YE"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dKVu9cLVAgON"},"outputs":[],"source":["def is_prime(y):\n","    if y%2==0:\n","        return False\n","    for a in range(3,n//2+1):\n","        if y%a==0:\n","            return False\n","    else:\n","        return True\n","\n","def find_prime(n):\n","    for i in range(n-1,1,-1):\n","        if is_prime(i):\n","            return i\n","    return \"Nothing\""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1713926213185,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"emmh7o6ogRuN","outputId":"a28d2e34-1a19-4593-b181-974972b19aad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":84}],"source":["is_prime(4)"]},{"cell_type":"markdown","metadata":{"id":"a69b_Hk8Q0-v"},"source":["##Lesson 17(Recursion function)"]},{"cell_type":"markdown","metadata":{"id":"FJvyJd1_Q9aT"},"source":["###Example 1  (Toonii factorial bodoj ugdug shit)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":399,"status":"ok","timestamp":1711082861609,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ss59xm-zB7Kd","outputId":"29962547-0090-49f3-8099-992c030c4216"},"outputs":[{"name":"stdout","output_type":"stream","text":["factorial called with n= 5\n","factorial called with n= 4\n","factorial called with n= 3\n","factorial called with n= 2\n","factorial called with n= 1\n","Ending error met.\n","120\n"]}],"source":["def factorial(n):\n","    print('factorial called with n=', str(n))\n","    if n==1 or n==0:\n","        print(\"Ending error met.\")\n","        return 1\n","    else:\n","        return n*factorial(n-1)\n","print(factorial(5))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711512438019,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"lF-Di-F3Q0tR","outputId":"5586efec-151c-4f06-bac8-a0a531cd5f9d"},"outputs":[{"name":"stdout","output_type":"stream","text":["factorial called with n= 4\n","Current value of n is  3\n","Current value of n is  2\n","Current value of n is  1\n","Ending condition met\n","24\n"]}],"source":["def factorial(n):\n","    print(\"factorial called with n=\", str(n))\n","    result=1\n","    while n>1:\n","        result= result*n\n","        n=n-1\n","        print(\"Current value of n is \", str(n))\n","    print(\"Ending condition met\")\n","    return result\n","print(factorial(4))\n"]},{"cell_type":"markdown","metadata":{"id":"cKCgzTYOUsX0"},"source":["###Example 2 (factorial v2.0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":447,"status":"ok","timestamp":1711080451900,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"cBG9BVmUULSW","outputId":"8a9d038c-cfa3-45dc-db32-de3192916a7a"},"outputs":[{"name":"stdout","output_type":"stream","text":["5040\n"]}],"source":["def factorial(n):\n","    if n==1 or n==0:\n","        return 1\n","\n","    else:\n","        return n*factorial(n-1)\n","print(factorial(7))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"blkkx09iGxfV"},"outputs":[],"source":["def pal(s):\n","    if len(s)==1 :\n","        return True\n","    if s[0] == s[-1]:\n","        return True and pal(s[1:len(s)-1])\n","    else:\n","        return False\n"]},{"cell_type":"markdown","metadata":{"id":"OpJ7XVTta9cK"},"source":["###Example 3 (Palindrome)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":540,"status":"ok","timestamp":1711081946132,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-TTFkp7hUtUY","outputId":"2a3972c5-7068-4e7f-d641-3d321296b445"},"outputs":[{"name":"stdout","output_type":"stream","text":["Not palindrome\n","rAAS\n"]}],"source":["s= 'SAAr'\n","if s[::] == s[::-1]:\n","    print(\"Palindrome\")\n","else:\n","    print(\"Not palindrome\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"18arXd5IUtXI"},"outputs":[],"source":["def pal(s):\n","    if len(s)==1:\n","        return True\n","    if s[0] == s[-1]:\n","        return True and pal(s[1:len(s)-1])\n","    else:\n","        return False"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":393,"status":"ok","timestamp":1711512843226,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"GkwEn5SMcMK1","outputId":"21f7d4f2-20e1-4d1d-8cfb-969c9443cbc1"},"outputs":[{"data":{"text/plain":["False"]},"execution_count":85,"metadata":{},"output_type":"execute_result"}],"source":["pal('MAdwfqwwqAM')"]},{"cell_type":"markdown","metadata":{"id":"9avK0CFpca1P"},"source":["##Lesson 18 (Map and lambda function)"]},{"cell_type":"markdown","metadata":{"id":"DNjgwGFVcp-J"},"source":["###Example 1  (Introduction to lambda)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1711087059488,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"wdvwjpfvcPD3","outputId":"03bc0fc1-122d-4289-c1a5-b8de8a381189"},"outputs":[{"data":{"text/plain":["60"]},"execution_count":85,"metadata":{},"output_type":"execute_result"}],"source":["niilber=lambda a,b: a+b\n","niilber(53,7)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wj-lUiaKcpAy"},"outputs":[],"source":["def func_creator(n):\n","    return lambda a:a*n\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qi_ZdkLIvA0i"},"outputs":[],"source":["doubler=func_creator(2)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":317,"status":"ok","timestamp":1711087067157,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"mnKm68bBvA3Q","outputId":"ce2a770c-4d54-4821-975a-bf451183a958"},"outputs":[{"data":{"text/plain":["20"]},"execution_count":88,"metadata":{},"output_type":"execute_result"}],"source":["doubler(10)"]},{"cell_type":"code","source":[],"metadata":{"id":"CFvPePKoGupo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"XMbWVIlqLYFo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oY3kPq1mGush","executionInfo":{"status":"ok","timestamp":1713928948019,"user_tz":-540,"elapsed":411,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"35610bc8-9371-48c3-dfd9-42ddd8993e33"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('white', 'bmw5'),('white', 'sonata'),('white', 'malibu'),('white', 'sm6'),('silver', 'bmw5'),('silver', 'sonata'),('silver', 'malibu'),('silver', 'sm6'),('black', 'bmw5'),('black', 'sonata'),('black', 'malibu'),('black', 'sm6'),"]}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8O7FM8UpGuvW","executionInfo":{"status":"ok","timestamp":1713928723257,"user_tz":-540,"elapsed":460,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"fcc3499a-159b-48e8-fafa-ee91a3391612"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[8, 4, 8, 6, 4, 3, 7]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"h5YzxycwGuyL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6MkV6iBXcsNP"},"source":["###Example 2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711162567744,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ATTPh5dncse2","outputId":"86be52fa-cac0-4500-92e9-bd0e3d5acc0e"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Hello!'"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["def deaf(n):\n","    return lambda s:(s+'!')*n\n","low_deaf= deaf(1)\n","low_deaf(\"Hello\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":418,"status":"ok","timestamp":1711087459889,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"T5hbtKANcshm","outputId":"cf12aa15-30d0-4004-c980-188880498eb1"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Huuye sda!Huuye sda!'"]},"execution_count":91,"metadata":{},"output_type":"execute_result"}],"source":["mid_deaf=deaf(2)\n","mid_deaf('Huuye sda')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711162572410,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ygNvNvqjO19r","outputId":"598f9914-e197-4b71-e62f-bec6daac0dc1"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Za shaa2!Za shaa2!Za shaa2!Za shaa2!'"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["serious_deaf=deaf(4)\n","serious_deaf('Za shaa2')"]},{"cell_type":"markdown","metadata":{"id":"fD-SDGwnw7_g"},"source":["###Example 3 ( Some kinda Map function's shit)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C5WhPG2jwqdI"},"outputs":[],"source":["lst=(list(map(lambda x:x+1, [1,2,3,4,5,6])))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":325,"status":"ok","timestamp":1711089777521,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"KKsRP6mExHpH","outputId":"8ecc7abe-711e-456e-d346-ac2ad4d418ed"},"outputs":[{"data":{"text/plain":["[2, 3, 4, 5, 6, 7]"]},"execution_count":99,"metadata":{},"output_type":"execute_result"}],"source":["lst"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"owI68N2ixHr0"},"outputs":[],"source":["lst2= list((map(lambda x:x**2+x+1 , [1,2,3,4,5,6])))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1711089875397,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"JGKfDLxv5rjb","outputId":"ade3928a-0122-4cf7-c17f-40b949efa484"},"outputs":[{"data":{"text/plain":["[3, 7, 13, 21, 31, 43]"]},"execution_count":102,"metadata":{},"output_type":"execute_result"}],"source":["lst2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5531,"status":"ok","timestamp":1711162648473,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"0mxDKsDz53Xv","outputId":"b9a935fb-5bfa-469a-9e9d-43d28f0edfed"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 2 3 4 5 6\n"]}],"source":["user_input=list(map(int,input().split(\" \")))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711162653693,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"OcnlzosC6Cmv","outputId":"9f5101de-702f-474a-d6ff-f988c14d6c57"},"outputs":[{"data":{"text/plain":["[1, 2, 3, 4, 5, 6]"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["user_input"]},{"cell_type":"markdown","metadata":{"id":"S20sjKyn6Tzm"},"source":["##Lesson 19 (Filter)"]},{"cell_type":"markdown","metadata":{"id":"oXKUsRLs6T-G"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Zx1UPINQ6QsJ"},"outputs":[],"source":["from string import ascii_lowercase, ascii_uppercase\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1714621106669,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Khacu9jU6U2V","outputId":"7fc2ed66-955f-4ca1-d9e9-656d02ee5123"},"outputs":[{"output_type":"stream","name":"stdout","text":["abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ\n"]}],"source":["print(ascii_lowercase, ascii_uppercase)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qcoT1C6A6U-7"},"outputs":[],"source":["def solve(c):\n","    if c in ascii_lowercase or c in ascii_uppercase or c == ' ':\n","        return True\n","    else:\n","        return False"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":410,"status":"ok","timestamp":1714621208046,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ctxEXEaw0CYO","outputId":"ed8e21de-a3fb-4169-f5b2-7351c868fe61"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'afdaifoaifaifoaFFFQWFuguaigaaufid'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}],"source":["\"\".join(list(filter(solve, 'afdaifoaifaifoaFFFQWF312uguaigaaufid')))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":398,"status":"ok","timestamp":1711106931165,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"xIIjsm7o0Ca-","outputId":"9b0e10e8-993a-4939-93a2-6b0def2aa4f8"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'The notebook wep  sok'"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["\"\".join(list(filter(solve, \"The notebook wep #41 sok.\")))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8859,"status":"ok","timestamp":1711973648945,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"WlT1IQ2-3Zip","outputId":"c4894d6b-91f3-4b52-8260-6c7683a0d802"},"outputs":[{"output_type":"stream","name":"stdout","text":["Toonuudaa oruuldaa muu boov men1 3 4 2 3 4 5 6 7 7 8 9 9\n","[4, 2, 4, 6, 8]\n"]}],"source":["x=list(map(int, input('Toonuudaa oruuldaa muu boov men').split()))\n","\n","y=list(filter(lambda a: a%2==0, x))\n","print(y)"]},{"cell_type":"markdown","metadata":{"id":"9Av03JyL57UN"},"source":["##Lesson 20 (Reduce function)"]},{"cell_type":"markdown","metadata":{"id":"SzUz6AoV6B7h"},"source":["###Example 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1714622322250,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Jj4-5T0u6CSN","outputId":"2eab1f47-f663-4521-b3c5-1370e74101a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["15\n","VAKgERiR\n"]}],"source":["import functools\n","import random\n","import string\n","lst=[1,2,3,4,5]\n","print(functools.reduce(lambda a,b: a+b, lst))\n","def generate_random_word(lenght):\n","    letters=string.ascii_letters\n","    return ''.join(random.choice(letters)  for _ in range(lenght))\n","random_word=generate_random_word(8)\n","print(random_word)"]},{"cell_type":"markdown","metadata":{"id":"HtzN_5VCRfZb"},"source":["###Example 2 (Oruulsan utganii hamgiin ih baga toog oldog shit)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7448,"status":"ok","timestamp":1711163336406,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"OD8gItpu6CUJ","outputId":"b54d2e1e-fcc4-4a6f-e2e7-c041edc2cb8b"},"outputs":[{"name":"stdout","output_type":"stream","text":["Haraal idsen toonuudaa oruulna uu:12 312 12 35 4 2 5 7 -4\n","Hamgiin ih ni : 312\n","Hamgiin baga ni: -4\n"]}],"source":["lst2=list(map(int, input('Haraal idsen toonuudaa oruulna uu:').split()))\n","print('Hamgiin ih ni :' ,functools.reduce(lambda x,y: x if x>y  else y , lst2))\n","print('Hamgiin baga ni:',functools.reduce(lambda x,y: x if x<y  else y , lst2))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":418,"status":"ok","timestamp":1711975658471,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"awyMQyxj6CW7","outputId":"36d2688d-0e7e-439f-df63-80d9f1948cea"},"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","6\n","24\n","24\n"]}],"source":["def tool_reduce(a, b):\n","    res=b[0]\n","    for el in b[0:]:\n","        res=a(res,el)\n","        print(res)\n","    return res\n","f=lambda x,y: x*y\n","print(tool_reduce(f,[1,2,3,4]))\n","#print(tool_reduce(lambda x,y: x*y, [1,2,3,4]))\n","#Ingej hevelj baigaagas neeh yalgaa baihguil ym"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c5yCefXKKkeG"},"outputs":[],"source":["f=lambda x,y: x*y"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711163658198,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"qKDRyqMeKlB2","outputId":"eb608332-9b77-45c2-dac6-b4d5402bd1a7"},"outputs":[{"data":{"text/plain":["200"]},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":["tool_reduce(f,[1,10,4,5])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z0Z8IIrmKlMN"},"outputs":[],"source":["n=6"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":491,"status":"ok","timestamp":1711161775534,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"CEu8eyZUL_Qy","outputId":"bd866f5a-bdde-413d-8b44-b63e17d8c6a8"},"outputs":[{"data":{"text/plain":["720"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["tool_reduce(f, range(1,n+1))"]},{"cell_type":"markdown","metadata":{"id":"rX2OkYEbMKjF"},"source":["##Lesson 21 (Project- Too taadag programm bichih)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ykz5ettMMK2F"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qLuoe87aMK4B"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"thXdzd_8MK6k"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mAIQEN6kMXt1"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"oo2Af4U4MYEc"},"source":["##Lesson 22 (Statistics-- Sanamsargui too uusgej surtsgaay)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5DiYSqsLMYXI"},"outputs":[],"source":["import random\n","cnt= 0\n","for i in range(10000):\n","    if random.random() > 0.5:\n","        cnt +=1\n","print(cnt/10000)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":418,"status":"ok","timestamp":1714622797915,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ggLGq9JrMYaF","outputId":"09c6c527-6ce1-4478-90a6-22c958f52578"},"outputs":[{"output_type":"stream","name":"stdout","text":["4.163613317916085\n","2.8061562850370767\n","9\n","[2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","[6, 6, 7, 8, 10, 7, 3, 3, 3, 10, 6, 2, 4, 10, 4, 6, 5, 8, 5, 5, 9, 8, 7, 7, 4, 8, 2, 4, 10, 9, 2, 9, 3, 2, 5, 9]\n","[9, 5, 2, 3]\n"]}],"source":["import random\n","print(random.uniform(1,11)) ## ene zavsart bui random float toog shaana\n","print(random.expovariate(1/3))\n","##infinty hurtel garah bolomjtoi ch baga toonuud garh magdlal hamaagui undur.\n","## ene case-d bol dundjaar 3 garah ymnasa randomdoj haruulj bn\n","## tiimes 3aas ih ch garj bolno. Medeej neleen baga too ch garj bolno.\n","##1/3 ni :: every 3 unit-d 1 event happens gsnug.\n","\n","\n","print(random.randrange(3,18,3)) ## Ene bol ard taliin 3ni alham buyu 3,3aar nemgdeh gsn utga. #t huvaagdah toonuudiig olohdoo ingej shaj bolno\n","\n","deck= list(range(2,11))*4\n","print(deck)\n","random.shuffle(deck)\n","print(deck)\n","my_deck=[]\n","while True:\n","    my_deck.append(deck.pop())\n","    if sum(my_deck)>=19:\n","        break\n","print(my_deck)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a55O8_qMMYcJ"},"outputs":[],"source":["import random\n","lottery=['Ronaldo','Messi','Nana','Lana']\n","print(random.choice(lottery))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":352,"status":"ok","timestamp":1711976355111,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"fHP1A_D4MYeu","outputId":"a3f36ed4-fcd0-4aff-eb7f-1d7c0e646035"},"outputs":[{"output_type":"stream","name":"stdout","text":["['abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ']\n"]}],"source":["import random\n","from string import ascii_letters\n","x=[]\n","for i in ascii_letters:\n","    x.append(ascii_letters)\n","random.shuffle(x)\n","print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4046,"status":"ok","timestamp":1714624620442,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"TJvwJ1D8MuIf","outputId":"650d98ca-ae46-4605-95e6-102fa71c5ac7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enehuu programm ni randomoor uusgesen ugnuudes palindrome ug haidag shit yum\n","Heden ugen dotroos haih yumdbe:10000\n","Heden usegtei ug oruulmaaren:5\n","Tanii hussen 5 usegtei 10000 shirheg ugen dund palindrome too 19 shirheg baina\n","['bdfdb', 'upwpu', 'oxuxo', 'bgkgb', 'rhohr', 'vygyv', 'gsusg', 'foqof', 'oojoo', 'lvavl', 'ybrby', 'mhchm', 'xegex', 'llyll', 'rahar', 'xfpfx', 'wdedw', 'vrfrv', 'ocfco']\n"]}],"source":["import string\n","import random\n","import functools\n","print('Enehuu programm ni randomoor uusgesen ugnuudes palindrome ug haidag shit yum')\n","def generate_random_word(length):\n","    letters=string.ascii_lowercase\n","    return ''.join(random.choice(letters)  for _ in range(length))\n","s=[]\n","a=1\n","x=int(input('Heden ugen dotroos haih yumdbe:'))\n","n=int(input('Heden usegtei ug oruulmaaren:'))\n","while a<x:\n","    random_word=generate_random_word(n)\n","    s.append(random_word)\n","    a+=1\n","def pal(s):\n","    if len(s)<=1:\n","        return True\n","    if s[0] == s[-1]:\n","        return True and pal(s[1:-1])\n","    else:\n","        False\n","pisda_lalar=list(filter(lambda word: pal(word), s ))\n","print('Tanii hussen {} usegtei {} shirheg ugen dund palindrome too {} shirheg baina'.format(n,x,len(pisda_lalar)))\n","print(pisda_lalar)\n"]},{"cell_type":"markdown","metadata":{"id":"kOh10pksMmh-"},"source":["##Lesson 23 (Project-- Nuuts ug uusgej ugdug shit bichih)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2569,"status":"ok","timestamp":1711977046336,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Xazq5dN3Mm0d","outputId":"88fc27bf-223f-4dd2-b807-1422d310dd03"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tand heden orontoi nuuts ug heregtei we : 8\n"," =z907X@1\n"]}],"source":["import string\n","import random\n","def create_pwd(pass_len):\n","    res=[string.punctuation, string.ascii_letters, string.digits]\n","    ans= ' '\n","    for i in range(pass_len):\n","        ans+= random.choice(res[random.randint(0,2)])\n","\n","    return (ans)\n","\"\"\"print(string.digits)\n","print(string.punctuation)\n","print(string.ascii_letters)\n","print(string.ascii_lowercase)\n","print(string.ascii_uppercase)\"\"\"\n","n=int(input('Tand heden orontoi nuuts ug heregtei we : '))\n","print(create_pwd(n))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-L1AyR2EMm2m"},"outputs":[],"source":["import string\n","import random\n","\n","def create_pwd(pass_len):\n","    lst=[]\n","    for i in range(pass_len//2):\n","        lst.append(random.choice(string.ascii_letters))\n","        if i%2 == 0:\n","            lst.append(random.choice(string.digits))\n","        else:\n","            lst.append(random.choice(string.punctuation))\n","    return  ''. join(lst)\n","n=int(input('Heden orontoi nuuts ug heregtei we?'))\n","print(create_pwd(n))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SMFERbqJMnCA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1711977114590,"user_tz":-540,"elapsed":2003,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7ba2aa62-88a1-4da1-d9b7-c2862a527561"},"outputs":[{"output_type":"stream","name":"stdout","text":["Heden orontoi nuuts ug heregtei we?7\n","u+M3Vn@\n"]}],"source":["import string\n","import random\n","\n","def create_pwd(pass_len):\n","    lst=[]\n","    res=string.ascii_letters+string.digits+string.punctuation\n","    for i in range(pass_len):\n","        lst.append(random.choice(res))\n","    return  ''. join(lst)\n","\n","n=int(input('Heden orontoi nuuts ug heregtei we?'))\n","print(create_pwd(n))"]},{"cell_type":"markdown","metadata":{"id":"Wc50CA9VMvyw"},"source":["##Lesson 31 (Itertools)"]},{"cell_type":"markdown","metadata":{"id":"AcWgvWdXhgD7"},"source":["##Tugsgulgui shit"]},{"cell_type":"markdown","metadata":{"id":"5TnPqyzwbTIA"},"source":["###Example 1 (Count function..)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TKDy_d2VMwK9"},"outputs":[],"source":["import itertools\n","a=itertools.count(100,5)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":344,"status":"ok","timestamp":1711977448909,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"tLoqM0T9LB4b","outputId":"8bdf4559-df9e-47d5-c385-2058f99b2a62"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["155"]},"metadata":{},"execution_count":49}],"source":["next(a) ##Ene bol 100aas ehleed, unshuulah bolgond 5aar ihseed yavj baigaa"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":361,"status":"ok","timestamp":1711977455641,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"HDuTIyFcVgk2","outputId":"f8ba5d09-5abd-4ff6-b271-00b2fb37915f"},"outputs":[{"output_type":"stream","name":"stdout","text":["160\n","165\n","170\n","175\n","180\n","185\n","190\n","195\n","200\n","205\n"]}],"source":["n=10\n","while n:\n","    print(next(a))\n","    n-=1"]},{"cell_type":"markdown","metadata":{"id":"XkZlYUI3fwR2"},"source":["###Example2 (Cycle)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1711200593382,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"9YxlzwQtbFuE","outputId":"7a55c951-524c-4b58-9ae7-c3189f237d9d"},"outputs":[{"name":"stdout","output_type":"stream","text":["L\n"]}],"source":["c=itertools.cycle(\"LYU\") ##Ene haalt dotor buig l davtaad bna gesuug.\n","print(next(c))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":353,"status":"ok","timestamp":1711200595497,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Gm3HSKTlfxuf","outputId":"3cd79b4f-6f9b-4502-ac72-615ed16b4126"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Y'"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["next(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":386,"status":"ok","timestamp":1711200598129,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"bTq8a9xNfxwe","outputId":"0e0aba73-e92f-4cbe-ce80-c29ad7997bf7"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'U'"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["next(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":498,"status":"ok","timestamp":1711200603444,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"XkKh0deefxzM","outputId":"feedad88-736d-40ae-882d-645bb7d0e471"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'L'"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["next(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":388,"status":"ok","timestamp":1711200679830,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"B5dMww79gQg_","outputId":"385d720c-8475-4127-c0ed-e71fc181e72f"},"outputs":[{"name":"stdout","output_type":"stream","text":["1\n"]}],"source":["d=itertools.cycle([1,2,3])  ##Same here. Daraallinha daguu, duuschuul ahiad ehneesee etc\n","print(next(d))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":403,"status":"ok","timestamp":1711200689861,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"iWg1hSvOghg4","outputId":"b22fd4d0-e20a-4df6-cdad-76652ee726c8"},"outputs":[{"data":{"text/plain":["2"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["next(d)"]},{"cell_type":"markdown","metadata":{"id":"5cJ5rmxPgvFv"},"source":["###Example3  (repeat)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":515,"status":"ok","timestamp":1711200815825,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"EA2Ggmm2glmF","outputId":"42883631-6197-4246-e1b2-651648cedfc9"},"outputs":[{"name":"stdout","output_type":"stream","text":["5\n"]}],"source":["a=itertools.repeat(5,2)  ##5iig 2 udaa davtuulj baina gesn ug. 3 bolood irvel ajillahgui.\n","print(next(a))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":435,"status":"ok","timestamp":1711200818484,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"CV7AeNWjgzFh","outputId":"5333e465-aa19-486e-d124-45481c34bdbd"},"outputs":[{"data":{"text/plain":["5"]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["next(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lIKc864VhP2j"},"outputs":[],"source":["next(a)"]},{"cell_type":"markdown","metadata":{"id":"Vt9PbrVahRC6"},"source":["## Tugsgulug elementtei"]},{"cell_type":"markdown","metadata":{"id":"Fm2H5TpqhZYz"},"source":["###Example 1 (Accumulate)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":670,"status":"ok","timestamp":1711977739173,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"VmPn03V5hFpN","outputId":"472b12e6-5ff3-479c-f92f-6a9fc9b78c31"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 1, 2, 4, 7, 12, 20, 33]"]},"metadata":{},"execution_count":51}],"source":["l=list(itertools.accumulate([0,1,1,2,3,5,8,13])) ##Nemeed2 yavaad baina gsn ug.\n","l"]},{"cell_type":"markdown","metadata":{"id":"8vFig_BekV-u"},"source":["###Example 2 (Chain)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wl4ZfvFIh1dm"},"outputs":[],"source":["concat_list=itertools.chain([1,2,3] , ['A','B','C'] , ['a', 'b', 'c'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":323,"status":"ok","timestamp":1711201627684,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"14rDZdynjz0Q","outputId":"323e503c-d30a-47ad-dadd-a57a19d65bf4"},"outputs":[{"data":{"text/plain":["[1, 2, 3, 'A', 'B', 'C', 'a', 'b', 'c']"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["list(concat_list)  ##Ene heden listee holbood baina."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NfVENaY7kKq6"},"outputs":[],"source":["con_lst=itertools.chain.from_iterable([['Alice', 35], ['Bat', 33], ['Jhon',28],['Bat',40]])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":428,"status":"ok","timestamp":1714625640352,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"mEweHa1zlLje","outputId":"5729bc3f-f6a6-4147-9a4f-b7098b11ce02"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Alice', 35, 'Bat', 33, 'Jhon', 28, 'Bat', 40]"]},"metadata":{},"execution_count":19}],"source":["list(con_lst) ##Davhar2 bullshits baih uyd ih heregtei."]},{"cell_type":"markdown","metadata":{"id":"twMmZTZIooX5"},"source":["###Example 3  (Compress)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711599207338,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"nGotfsa4lLmL","outputId":"6256b04d-367a-4eea-c1ed-b67d3d527d37"},"outputs":[{"data":{"text/plain":["['P', 'D', 'O', 'E']"]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["list(itertools.compress('PODSIOE', [1,0,1,0,0,1,1,0,1]))\n","##Yum filter hiij avahad ih hereg boldog shit genee.."]},{"cell_type":"markdown","metadata":{"id":"LKtrU66GpJDS"},"source":["###Example 4 (Dropwhile)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":429,"status":"ok","timestamp":1714625747052,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"8XuNmDbBlh1I","outputId":"d5b4532e-8b54-415f-dd82-80d06eda9513"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[20, 1, 2, 3, 4, 50, 2, 4]"]},"metadata":{},"execution_count":22}],"source":["list(itertools.dropwhile(lambda x: x<20, [2,3,1,0,3,20,1,2,3,4,50,2,4]))\n","##20oos baga gsn uchir 20oos hoishih buh elementiig avj bn.\n","##Even though there is 50.. 20 ehleed taarsan bolohoor..\n"]},{"cell_type":"markdown","metadata":{"id":"6lSmImxEqBON"},"source":["###Example 5 (Filterfalse)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":486,"status":"ok","timestamp":1714625894765,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"pHHtf9Xalh86","outputId":"6f9307da-cdf5-411f-c897-0f0564f4a4c5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 3, 5, 7, 9]"]},"metadata":{},"execution_count":25}],"source":["list(itertools.filterfalse(lambda x: x%2==0, range(10)))\n","##ner shigee filter hiiged false-uudiig print hiine."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1714625903400,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"OkkAHe5yqFzV","outputId":"ab6b8519-18a1-48e0-84d9-3baf00fae419"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 2, 4, 6, 8]"]},"metadata":{},"execution_count":26}],"source":["list(filter(lambda x: x%2==0, range(10)))\n","##Filter hiigeed True-uudiig hevelj baina"]},{"cell_type":"markdown","metadata":{"id":"Eh9kB4lOqGRr"},"source":["##Lesson 32 (Combinatoric)"]},{"cell_type":"markdown","metadata":{"id":"MDivwa7FpX_w"},"source":["###Example 1 (Product)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1714626049633,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"PtyaJq05qGfK","outputId":"14139f75-bd6a-4772-bb7b-8acfcd4c893b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('1', '1'),\n"," ('1', '2'),\n"," ('1', '3'),\n"," ('1', '4'),\n"," ('2', '1'),\n"," ('2', '2'),\n"," ('2', '3'),\n"," ('2', '4'),\n"," ('3', '1'),\n"," ('3', '2'),\n"," ('3', '3'),\n"," ('3', '4'),\n"," ('4', '1'),\n"," ('4', '2'),\n"," ('4', '3'),\n"," ('4', '4')]"]},"metadata":{},"execution_count":29}],"source":["##End bol too davhardaad bolomjit buh 2 orontoi toog uusgeh geh met.\n","import itertools as it\n","list(it.product('1234', repeat=2))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1711287218840,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"rzu9BsaTpcW2","outputId":"072cb6d9-a7d4-43ea-fe20-763c4c14a83a"},"outputs":[{"data":{"text/plain":["256"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["len(list(it.product(\"ABCD\",repeat=4)))"]},{"cell_type":"markdown","metadata":{"id":"Ms2-qWaDpb-B"},"source":["###Example 2 (Permutations)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":516,"status":"ok","timestamp":1711289643041,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"xxVPoR6dqwMg","outputId":"2777db84-9122-4af8-dbcb-e880b776d797"},"outputs":[{"name":"stdout","output_type":"stream","text":["[('1', '2'), ('1', '3'), ('1', '4'), ('2', '1'), ('2', '3'), ('2', '4'), ('3', '1'), ('3', '2'), ('3', '4'), ('4', '1'), ('4', '2'), ('4', '3')]\n"]}],"source":["#ijil too davharduulahguigeer zohih bolomjiin too ntr\n","print(list(it.permutations('1234',2)))\n","#len(list(it.permutations('1234',2)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1eNxpDqAqwO4"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ysOUuww1pclh"},"source":["###Example 3 (Combinations)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1711287620363,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"1pOrwhpNpc2T","outputId":"d98aa4be-11e2-465c-b203-41c372fa6284"},"outputs":[{"data":{"text/plain":["[('red', 'black'),\n"," ('red', 'blue'),\n"," ('red', 'white'),\n"," ('red', 'orange'),\n"," ('black', 'blue'),\n"," ('black', 'white'),\n"," ('black', 'orange'),\n"," ('blue', 'white'),\n"," ('blue', 'orange'),\n"," ('white', 'orange')]"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["## Yuruusu ahij davharduulahguigeer 2 uur ungiin bumbugiig songoh bolomj\n","list(it.combinations(['red','black','blue','white','orange'],2))"]},{"cell_type":"markdown","metadata":{"id":"vcybQ6PdpdFw"},"source":["###Example 4 (combinations_with_replacement)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1711355232377,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ATsDVcGxpdad","outputId":"d3d42105-6914-4d15-865b-5cc4b1d63517"},"outputs":[{"name":"stdout","output_type":"stream","text":["mori mori\n","mori honi\n","mori yamaa\n","mori temee\n","honi honi\n","honi yamaa\n","honi temee\n","yamaa yamaa\n","yamaa temee\n","temee temee\n"]}],"source":["##Shagai hayahad buuh buh bolomjiin too.\n","import itertools\n","l=list(itertools.combinations_with_replacement(['mori','honi','yamaa','temee'],2))\n","for i in l:\n","    print(' '.join(i))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711287925728,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"n4PJeZsesqnS","outputId":"252372bf-cbf9-4e0c-f7bd-c5111b64797b"},"outputs":[{"data":{"text/plain":["35"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["len(l)"]},{"cell_type":"markdown","metadata":{"id":"vtb2o8kxYBlU"},"source":["##Hackerrank iin shits"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4867,"status":"ok","timestamp":1711289241920,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ZX9qQOfEtOxo","outputId":"c3997ede-7f2f-4252-c843-ae1ce0b41aa6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Ehnii listee oruul:1 2\n","2doh listee oruul:3 4\n","(1, 3) (1, 4) (2, 3) (2, 4)\n"]}],"source":["import itertools\n","x=list(map(int,input('Ehnii listee oruul:').split()))\n","y=list(map(int,input('2doh listee oruul:').split()))\n","\n","print(*itertools.product(x,y  ,repeat=1))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6045,"status":"ok","timestamp":1711601937244,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"1FNVzEdNwJ_O","outputId":"dc63fe29-e9d0-455b-83a9-549bb60f8375"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 2 \n","3 4\n","(1, 3) (1, 4) (2, 3) (2, 4)\n"]}],"source":["from itertools import product\n","x=(map(int,input().split()))\n","y=(map(int,input().split()))\n","\n","print(*product(x,y))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3511,"status":"ok","timestamp":1711602112815,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"5IopeCfnyLwQ","outputId":"09b778a2-cbda-4ca6-b49e-14c6b1b858aa"},"outputs":[{"name":"stdout","output_type":"stream","text":["HACK 2\n","AC\n","AH\n","AK\n","CA\n","CH\n","CK\n","HA\n","HC\n","HK\n","KA\n","KC\n","KH\n"]}],"source":["import itertools\n","a=list(input().split())\n","x=list(a[0])\n","y=(a[-1])\n","x.sort()\n","b=list(itertools.permutations(x,int(y)))\n","for c in b:\n","    print(''.join(c))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":628,"status":"ok","timestamp":1711291409582,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"KNmaewWJ5otI","outputId":"61cfa683-5fbd-44c8-e8b6-88cb27bc52a4"},"outputs":[{"name":"stdout","output_type":"stream","text":["[('A', 'C'), ('A', 'K'), ('C', 'K'), ('H', 'A'), ('H', 'C'), ('H', 'K')]\n"]}],"source":["a=list(it.combinations(['H','A','C','K',],2))\n","a.sort()\n","print(a)\n","#for b in a:\n","    #print(''.join(b))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9790,"status":"ok","timestamp":1711292992192,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Yu82x_fs5ov3","outputId":"60c46fed-dde3-41e6-8de6-3297f75d5ca9"},"outputs":[{"name":"stdout","output_type":"stream","text":["HACK 2\n","A\n","C\n","H\n","K\n","AC\n","AH\n","AK\n","CH\n","CK\n","HK\n"]}],"source":["from itertools import combinations\n","string,size=input().split()\n","size=int(size)\n","string=sorted(string)\n","for i in range(1, size+1):\n","    for a in combinations(string,i):\n","        print(''.join(a))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5566,"status":"ok","timestamp":1711355481355,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"oVMMlNlB-wkf","outputId":"07fc8a70-813d-4ea5-920e-7cd53794290b"},"outputs":[{"name":"stdout","output_type":"stream","text":["HACK 2\n","AA\n","AC\n","AH\n","AK\n","CC\n","CH\n","CK\n","HH\n","HK\n","KK\n"]}],"source":["import itertools\n","name,size=input().split()\n","name=sorted(name)\n","size=int(size)\n","a=list(itertools.combinations_with_replacement(name,size))\n","for i in a:\n","    print(''.join(i))\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0huF972X-yPj"},"outputs":[],"source":["#The year can be evenly divided by 4, is a leap year, unless:\n","#The year can be evenly divided by 100, it is NOT a leap year, unless:\n","#The year is also evenly divisible by 400. Then it is a leap year."]},{"cell_type":"markdown","metadata":{"id":"QfWUlC71-w5e"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4020,"status":"ok","timestamp":1711602758732,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"qt19PHex-xJI","outputId":"ce3dad24-37c9-4435-ae7d-d602122071b7"},"outputs":[{"name":"stdout","output_type":"stream","text":["2023\n","False\n"]}],"source":["def is_leap(year):\n","    #leap = False ##eniig yah gej bchsenee oilgohguien\n","    if (year%4==0 and year%100!=0) or year%400==0:\n","        return True\n","    else:\n","        return False\n","\n","\n","year = int(input())\n","print(is_leap(year))\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10437,"status":"ok","timestamp":1711357123139,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"zdFmPEqU-xWr","outputId":"08b6c3e0-3e30-4712-c157-ec5ae965d6b1"},"outputs":[{"name":"stdout","output_type":"stream","text":["this is mothrfucker\n","this-is-mothrfucker\n"]}],"source":["def split_and_join(line):\n","    return '-'.join(line.split())\n","\n","if __name__ == '__main__':\n","    line = input()\n","    result = split_and_join(line)\n","    print(result)"]},{"cell_type":"markdown","metadata":{"id":"DuAGBqTDX0t8"},"source":["##Lesson 33 (String)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711366298008,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"QmVK9M-mYJz_","outputId":"ef1021ef-ce8f-4c8c-ec7e-66df120be6cd"},"outputs":[{"name":"stdout","output_type":"stream","text":["abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\n"]}],"source":["from string import *\n","print(ascii_letters)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AWAtYZ4FYJ2_"},"outputs":[],"source":["ascii_uppercase"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":529,"status":"ok","timestamp":1711366326694,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"adCfs_1-YWfq","outputId":"16e1f7d2-64d6-4343-e303-cde40ea6be2f"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'0123456789'"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["digits"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711366334300,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"mxMP4LqfYWi8","outputId":"cc310bdc-409f-43c9-c0a7-d84bf1d9342e"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["ascii_uppercase"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711366341420,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"w8HFvc-WYWoO","outputId":"b008751b-20e7-46e1-e0bf-c9f69d83356e"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'abcdefghijklmnopqrstuvwxyz'"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["ascii_lowercase"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711366384953,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"EGDtlQJ2YJ6g","outputId":"9e55178a-f7eb-4fc0-9542-331cb9d47a58"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["punctuation\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711366544067,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"pzEduPBQYqq3","outputId":"2a9a1dad-fe8d-452d-9884-ad0eee8c0027"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["\"My name is Temuujin. I'm from Wakanda. My hobby is coding.\""]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["'My name is {}. I\\'m {}. My hobby is {}.'.format('Temuujin','from Wakanda','coding')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":431,"status":"ok","timestamp":1711978585681,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"PopD_K_MYrTh","outputId":"35c4afef-b498-4431-ab3f-d5551b9b0686"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'a b c'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":54}],"source":["'{} {} {}'.format(*\"abc\")## end * baihgui bol aldaa zaagaad baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711603200703,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"qQTi0dqhYrV5","outputId":"51363c04-0829-4027-ade5-b961d43c95bd"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'c b a'"]},"execution_count":61,"metadata":{},"output_type":"execute_result"}],"source":["'{2} {1} {0}'.format(*\"abc\")  ##indexeer ni uguud yavuulchij bas bolno."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1711366713992,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"D2LqoDobZplr","outputId":"df9a0adc-4cc8-416f-c658-0fa4696fe0c4"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'My favourite programming shit  is phyton.'"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["'My favourite programming shit is {plang}.'.format(plang='phyton')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1711603258618,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"31k2LJQGZprF","outputId":"908e9dc1-b227-4cf2-e0bc-1d7adfacd83a"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'(1+5j) huurmag toonii bodit heseg ni 1.0, huurmag heseg ni 5.0'"]},"execution_count":64,"metadata":{},"output_type":"execute_result"}],"source":["c=1+5j\n","'{0} huurmag toonii bodit heseg ni {0.real}, huurmag heseg ni {0.imag}'.format(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":404,"status":"ok","timestamp":1711367168318,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"RSUZFE9RZpzd","outputId":"34a66cd3-3a93-4c4a-f569-ef07997f85e6"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'X:1; Y:8'"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["co=(1,8)\n","'X:{0[0]}; Y:{0[1]}'.format(co)\n","##coordinatiin position olood bhshig l bnshd"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":466,"status":"ok","timestamp":1711367406906,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"8AroxOlxbWzt","outputId":"189589bf-26be-4cde-c1bb-03ba2ea367a8"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Zuun tiishee shahsan                    '"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["'{:<40}'.format('Zuun tiishee shahsan')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1711979311558,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"hSkEm3XlbW6O","outputId":"87509fd1-ae40-44d0-d44e-fe8dbe35ba83"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'                  Baruun tiishee shahsan'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":63}],"source":["'{:>40}'.format('Baruun tiishee shahsan')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":546,"status":"ok","timestamp":1711979212860,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"GJL59LhlYrZ1","outputId":"dfa77f39-5383-469f-d897-bb85e658db24"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'                Garchig                 '"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":61}],"source":["'{:^40}'.format('Garchig') ##Yag golluulaad shaachij baigaa.\n","##ghde ene oruulsan utganii talaar ni irdiin bn\n","## uurur helbel baruun ba zuun talaasa 20,20iin zaitai baigaa gesen ug."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":499,"status":"ok","timestamp":1711367646612,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"3FZhBha2crWc","outputId":"b105ab46-f002-443a-ed46-124e81fd4343"},"outputs":[{"name":"stdout","output_type":"stream","text":["**************************The most famous programming language is phyton.***************************\n","---------------------------The most famous programming languge is phyton.---------------------------\n","===========================The most famous programming languge is phyton.===========================\n"]}],"source":["print('{:*^100}'.format('The most famous programming language is phyton.'))\n","print('{:-^100}'.format('The most famous programming languge is phyton.'))\n","print('{:=^100}'.format('The most famous programming languge is phyton.'))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":344,"status":"ok","timestamp":1711979352675,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"IiERhi6UcrYb","outputId":"2005188b-69ef-47fd-b3b4-ffa18f53c411"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'+3.141592; -3.141592'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":66}],"source":["'{:+f}; {:+f}'.format(3.141592, -3.141592)  ##  (:+-) ene ni temdgiig todorhoilj uguud baigaa gesen ug"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":466,"status":"ok","timestamp":1711367807135,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"S100pLE1crbK","outputId":"a16cf5dc-edbd-44de-8b09-83ff7e1af3dc"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'3.141592; -3.141592'"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["'{:-f}; {:-f}'.format(3.141592, -3.141592) ##  : iin araas - orj irsen uchraas umnuh jishee shig + temdeg avaad baih shaardlaga baighui."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":412,"status":"ok","timestamp":1711368077636,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"upT-LwKZYrdk","outputId":"920a22bf-6509-47c6-b4a6-806fe75f10ef"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'10tiin toolliin system: 53; 8tiin toolliin system:65; 16tiin toolliin system:35; 2tiin toolliin system:110101'"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["'10tiin toolliin system: {0:d}; 8tiin toolliin system:{0:o}; 16tiin toolliin system:{0:x}; 2tiin toolliin system:{0:b}'.format(53)\n","##eniig ystoi tusuuluuguin bainaa. '' ene dotor buyu string helbertei bsn ch shuud bodood gargaad irj boldiin baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1711979496434,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"rKLEbHrFeVgt","outputId":"af2db725-dcfa-42b6-ea34-514e1c142bda"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1,038,099,000'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":71}],"source":["'{:,}'.format(1038099000) ##Yuruusuu l saihan 3,3n ornoor ni tusgaarlaad yvchij baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":425,"status":"ok","timestamp":1714627620404,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"3vGhWE5CeVjU","outputId":"0b1b7429-4fa5-4c5f-c407-ca88146eb624"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Accuracy:76.471%'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":30}],"source":["'Accuracy:{:.3%}'.format(26/34)\n","##python is so good fr. % temdeg baigaa bolhoor l percentage format ruu hurvuulj bicheed bgan bn."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1714646553279,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ijKhtuZqfx1w","outputId":"84d27d91-97af-445f-8bda-bc4ec4b91a8d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Phyton is the programming language.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}],"source":["a='phyton is the programming language.'\n","a.capitalize()\n","##Neeren l ehnii shitiig capitalize hiigeed ugch baina"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711368487458,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Ah-liiKDgV4G","outputId":"70568f20-ce3e-4d9c-aeb1-75fc9ab2fee8"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'vat cat wolf bear'"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["b='Vat Cat Wolf Bear'\n","b.casefold()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":406,"status":"ok","timestamp":1711368538242,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"CaCJ4s57fyAb","outputId":"394a352d-0956-4996-ca03-74c103572f27"},"outputs":[{"name":"stdout","output_type":"stream","text":["                                     QWEr dofkaoaf: fjkski yye                                      \n"]}],"source":["c='QWEr dofkaoaf: fjkski yye'\n","print(c.center(100))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":362,"status":"ok","timestamp":1711368579819,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"RuW37F0LeVmZ","outputId":"5d2f4694-3c93-425f-bbf0-e037ffd7a8d0"},"outputs":[{"data":{"text/plain":["3"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["c='QWEr dofkaoaf: fjkski yye'\n","c.count('f')\n","## end dundaas f usgiig ni toolj baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1711368743052,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"RFyaGejzg5bm","outputId":"9c7681c7-1d20-4d8f-abf5-558e400a28c6"},"outputs":[{"data":{"text/plain":["False"]},"execution_count":46,"metadata":{},"output_type":"execute_result"}],"source":["a.endswith('-')\n","##yamr temdegteer tugsuj buig ni check hiij baina.\n","#startswith gej bsa bdg"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":500,"status":"ok","timestamp":1714627805549,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"vnxGgPZTg5eU","outputId":"9b19cf9d-2879-45aa-a806-e8e43f639033"},"outputs":[{"output_type":"stream","name":"stdout","text":["Dog\tCat\tMouse\tTom\tJerry\n"]}],"source":["d='Dog\\tCat\\tMouse\\tTom\\tJerry'\n","print(d)\n","## ene \\t ni \\n tei tustei. Ene shit bol tab-iin zaitai bolgoj bn."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1714627817010,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Zpjc_WKWhw-7","outputId":"b44f6db9-ab11-4481-da0e-911e2e0917e1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Dog   Cat   Mouse Tom   Jerry'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":35}],"source":["d.expandtabs(3)\n","##zaig ni bas ingeed tohiruulaad ugch boldog."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1714646564057,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"JekMTbOghxBv","outputId":"dfc90932-45bd-4f6e-ddb5-2f4265fe8e17"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":7}],"source":["a.find('is') ##temdegtiin indexeer ni toolood  bairlaliig ni zaagaad ugch baina.\n","##Actually if there is 2 is, we can use rfind or lfind.Hamgiin ehend taarsang ni gargana."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711369055277,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"v8qfE_RbiP8N","outputId":"4a53e27e-3a14-40ff-b4c9-20e4c8cbc578"},"outputs":[{"data":{"text/plain":["True"]},"execution_count":54,"metadata":{},"output_type":"execute_result"}],"source":["w='123ewgqee142fefqgqgrbq'\n","w.isalnum()\n","## too bolon usgees burdsen uu gedgiig ni shalgaj ugch baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711369088409,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"2-p0aVy_ihds","outputId":"6e97e272-f174-41e8-f50d-08e542cf2088"},"outputs":[{"data":{"text/plain":["False"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["w.isdigit()\n","##checking wheter there is only numbers."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711369240710,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NvJ6LLgGihgZ","outputId":"7ad9edf4-5953-402a-f3d3-222df8927aa8"},"outputs":[{"data":{"text/plain":["True"]},"execution_count":60,"metadata":{},"output_type":"execute_result"}],"source":["z='The Heading Of The Newspaper'\n","z.istitle()\n","##garchig mun esehiig shalgaj baina. Garchig ni ehnii buh useg ni tom baih ystoi."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1711369406932,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"EvZxCbYbiP-9","outputId":"d4e4095d-0f84-41f4-9e57-7deaddf50930"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'tHE hEADING oF tHE nEWSPAPER'"]},"execution_count":61,"metadata":{},"output_type":"execute_result"}],"source":["z.swapcase()\n","##Tom jijig usguudiig ni soliod ugch baina."]},{"cell_type":"markdown","metadata":{"id":"9tgVhp1ekQ4p"},"source":["##Lesson 34 (Function arguments)"]},{"cell_type":"markdown","metadata":{"id":"jKyYt0p5kQ7Y"},"source":["###Example 1 (Simple argument)"]},{"cell_type":"markdown","metadata":{"id":"jsyfsHoIlSXa"},"source":["####haygaar ni handan element nemeh."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kFAuTz2vjr0f"},"outputs":[],"source":["def add_elements(l):\n","    l.append(5)\n","    print(\"l={}\".format(l))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"G91c3FJAjr3N"},"outputs":[],"source":["f=[1,3,4]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711980814169,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"uI9DE-PHeVpS","outputId":"d108b27b-d39a-4463-e612-783c67db5044"},"outputs":[{"output_type":"stream","name":"stdout","text":["l=[1, 3, 4, 5]\n"]}],"source":["add_elements(f)\n","##Python deer buh element ni object bdg bolhoor,haygaara hadgalagdaad2 yvchna."]},{"cell_type":"markdown","metadata":{"id":"hqj0kcS3lhIw"},"source":["#### Function dotor shineer object uusgeh."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LUHJAkBtkmZe"},"outputs":[],"source":["def replace(g):\n","    g=[10,20,30]\n","    print(\"g={}\".format(g))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1714646849088,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"z08c0Owylmmj","outputId":"d2239e93-bf32-4720-c6f3-0b1879257a15"},"outputs":[{"output_type":"stream","name":"stdout","text":["g=[10, 20, 30]\n"]}],"source":["replace(f)\n","# ene ntr odoo yun hudnii ym hiiged shaagada.\n","# ugasa l aimr obvious bzde.\n","f=[1,3,4]\n","def replace(g):\n","    g=[10,20,30]\n","    print(\"g={}\".format(g))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1714646849590,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-UXwaNXxkmcT","outputId":"df946452-df2b-4fdc-af47-a180c832661b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 3, 4]"]},"metadata":{},"execution_count":26}],"source":["f"]},{"cell_type":"markdown","metadata":{"id":"PyqWZIDJlnWk"},"source":["####Function ruu damjuulsan list dotorh utgiig darj bichih"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mkdMIT69lnnB"},"outputs":[],"source":["def replace_contents(g):\n","    g[0]=11\n","    g[1]=43\n","    g[2]=0\n","    print(\"g=\", g)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":440,"status":"ok","timestamp":1711980944950,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"WPRA8pTklnpF","outputId":"d0c50434-406c-4d0a-bffa-eedc2f1bb6f3"},"outputs":[{"output_type":"stream","name":"stdout","text":["g= [11, 43, 0, 5]\n"]}],"source":["replace_contents(f)\n","# ghdee end suuliin element ni heveere uldsen buig harj baina.\n","# uchir ni indexeer ni handaj change hiigeegui bolhor ter ym."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":420,"status":"ok","timestamp":1711980948216,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"SjPpH0ZGlnr3","outputId":"bfd100de-d282-4714-a3b0-b916000e61b0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[11, 43, 0, 5]"]},"metadata":{},"execution_count":92}],"source":["f"]},{"cell_type":"markdown","metadata":{"id":"CtRB0-vvkmoe"},"source":["###Example 2 (Defualt argument)"]},{"cell_type":"markdown","metadata":{"id":"50vSaFqHlyet"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MVyrNN_ylyzj"},"outputs":[],"source":["def border(msg,bord=\"-\"):\n","    line=bord*len(msg)\n","    print(line)\n","    print(msg)\n","    print(line)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1713925818814,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"6-4q5QcRnvHt","outputId":"4d9c0171-b4eb-4544-da51-9f23aef89191"},"outputs":[{"output_type":"stream","name":"stdout","text":["-----------------\n","Garchig ugch uzev\n","-----------------\n"]}],"source":["border(\"Garchig ugch uzev\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1713925819319,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"GGR_yDNAnvJ0","outputId":"77a98a23-3433-4c16-9d4d-bd8cd4b767a2"},"outputs":[{"output_type":"stream","name":"stdout","text":["------------------------------------\n","The most famous programming language\n","------------------------------------\n"]}],"source":["border(\"The most famous programming language\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1713925819812,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"TJr99nkcnvMn","outputId":"50e06117-45e2-4b6e-92eb-ef213ff3a77a"},"outputs":[{"output_type":"stream","name":"stdout","text":["++++++++++++++++++++++++++++++++++++\n","The most famous programming language\n","++++++++++++++++++++++++++++++++++++\n"]}],"source":["border(\"The most famous programming language\", \"+\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1713925820311,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-fPE6P16ly2D","outputId":"87763cc2-1adb-4fe5-9624-7318a19480e8"},"outputs":[{"output_type":"stream","name":"stdout","text":["====================================\n","The most famous programming language\n","====================================\n"]}],"source":["border(\"The most famous programming language\", \"=\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1713925820958,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"7colVqzDly46","outputId":"ac8c0605-ef3c-4610-eb81-d291d883076d"},"outputs":[{"output_type":"stream","name":"stdout","text":["************************************\n","The most famous programming language\n","************************************\n"]}],"source":["border(\"The most famous programming language\", bord=\"*\")"]},{"cell_type":"markdown","metadata":{"id":"ORBNH-jHlzOv"},"source":["####Defualt argument hezee uusdeg we"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711370872694,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"SXP0seb6lza1","outputId":"7490ce85-5249-468a-9f3e-95ac48e78f8b"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Mon Mar 25 12:47:52 2024'"]},"execution_count":85,"metadata":{},"output_type":"execute_result"}],"source":["import time\n","time.ctime()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zhAQk8cHlzdf"},"outputs":[],"source":["def show_defualt(arg=time.ctime()):\n","    print(arg)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711370879291,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"rPLF7yMepYQ-","outputId":"7ea1d25e-42b4-4616-b0d6-d669c0e17a29"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mon Mar 25 12:47:55 2024\n"]}],"source":["show_defualt()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":535,"status":"ok","timestamp":1711370884944,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"83Z2tcoTpYTW","outputId":"b674df34-9d52-4d7d-a54c-a2ec1d6b28c2"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mon Mar 25 12:47:55 2024\n"]}],"source":["show_defualt() ## deer def ntr geed duudaad ugtsun bolohoor uurchlugduhuu bolichij baigaa gsn ug."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711370887893,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"vTFhQOmcpYWL","outputId":"45d584a7-5ba7-4a0d-eacc-b93e6b2aec0a"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Mon Mar 25 12:48:07 2024'"]},"execution_count":89,"metadata":{},"output_type":"execute_result"}],"source":["time.ctime()"]},{"cell_type":"markdown","metadata":{"id":"fCa_V6awqDTq"},"source":["####Multable turliin objectiig argumentaar avahad yamr asuudal uuseh we"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5WDnczfalzgP"},"outputs":[],"source":["def add_phone(box=None):\n","    if box is None:\n","        box=[]\n","    box.append('phone')\n","    return box\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1713925459586,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"tYlo1aUAqJrv","outputId":"1d2c97b3-1375-4345-e1aa-5448ed9c9f5d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['phone']"]},"metadata":{},"execution_count":55}],"source":["add_phone()"]},{"cell_type":"markdown","metadata":{"id":"QM4wgOYNtY4m"},"source":["#### *args"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711371930764,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"2qEkjyj3tZP_","outputId":"46fdae2e-3007-4797-9725-c3ff1b1cedc2"},"outputs":[{"name":"stdout","output_type":"stream","text":["6\n"]}],"source":["def my_sum(my_integers):\n","    result=0\n","    for x in my_integers:\n","        result+=x\n","    return result\n","list_of_integers=[1,2,3]\n","print(my_sum(list_of_integers))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711372103415,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"JrhMJCyxqJ3M","outputId":"21e9ca88-7ca8-4965-d4cf-f7039be12c6d"},"outputs":[{"name":"stdout","output_type":"stream","text":["21\n"]}],"source":["def my_sum(*args):\n","    result=0\n","    for x in args:\n","        result +=x\n","    return result\n","print(my_sum(1,2,3,7,0,8))"]},{"cell_type":"markdown","metadata":{"id":"Sxw2WH4mupa8"},"source":["-args gedeg ni zugeer l damjuulj baigaa parametriin ner bolohoor uur yamar ch nertei bsn zugeer\n","- Gol ni unpacking operator(*) avch baigaa ni l chuhal.\n","-Ene ni tuple turliin parametr bolj orj irdeg tul parametriin utgiig solij ashiglaj chadahgui."]},{"cell_type":"markdown","metadata":{"id":"kUqZ8RcCuToc"},"source":["#### **kwargs"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":419,"status":"ok","timestamp":1711372554702,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"l-OpXRwyuT-e","outputId":"4bd1d438-dc30-4a9e-b30d-d8e01140fda8"},"outputs":[{"name":"stdout","output_type":"stream","text":["RealIsgreat!\n"]}],"source":["def concatenate(**kwargs):\n","    result=\"\"\n","    for arg in kwargs.values():\n","        result+= arg\n","    return result\n","print(concatenate(a=\"Real\", c=\"Is\", d=\"great\",e=\"!\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":453,"status":"ok","timestamp":1711372597721,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"UPLaxV4IvGJV","outputId":"56920e43-c082-4d96-fcc2-c2ad54add338"},"outputs":[{"name":"stdout","output_type":"stream","text":["acde\n"]}],"source":["def concatenate(**kwargs):\n","    result=\"\"\n","    for arg in kwargs:\n","        result+= arg\n","    return result\n","print(concatenate(a=\"Real\", c=\"Is\", d=\"great\",e=\"!\"))"]},{"cell_type":"markdown","metadata":{"id":"hZBiu1VNwb5F"},"source":["- a single asterisk(*) to unpack iterables\n","- two asteriks(**) to unpack dictionaries"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711372817573,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"faI7BSvcvGLa","outputId":"f92558cd-e887-4f8a-b45a-62fa00d555a8"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 2, 3, 4, 5, 6]\n"]}],"source":["my_first_list=[1,2,3]\n","my_second_list=[4,5,6]\n","my_merged_list=[*my_first_list, * my_second_list]\n","\n","print(my_merged_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":418,"status":"ok","timestamp":1711372925099,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"x8rbrOYWvGON","outputId":"361e0b8c-6349-450f-a90f-e36436c3e666"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'A': 1, 'B': 2, 'C': 3, 'D': 4}\n"]}],"source":["my_first_dict={\"A\":1, \"B\":2}\n","my_second_dict={\"C\":3,\"D\":4}\n","my_merged_dict={**my_first_dict, ** my_second_dict}\n","\n","print(my_merged_dict)"]},{"cell_type":"markdown","metadata":{"id":"M97kmFiux_hF"},"source":["##Lesson 35 (Code-iinoo ajillah hugatsaag function ashiglaj tootsoolj surah)"]},{"cell_type":"markdown","metadata":{"id":"VaFR5Uu7yU5_"},"source":["### Time Module"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SGEuYXl9x_3a"},"outputs":[],"source":["import time"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1878,"status":"ok","timestamp":1711373325857,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"tTebNCFrySEc","outputId":"be46f33d-a3b7-474e-afda-57265c174302"},"outputs":[{"name":"stdout","output_type":"stream","text":["1.4747207164764404\n"]}],"source":["start_time=time.time()\n","s=0\n","for i in range(1,10**7):\n","    s=s+i\n","end_time=time.time()\n","print(end_time-start_time)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":966,"status":"ok","timestamp":1711373382768,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"S6TMqH0NySGI","outputId":"7ab4eb07-1966-4789-e141-d77f64f06a18"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.6132838726043701\n"]}],"source":["start_time=time.time()\n","s=sum(i for i in range(1,10**7))\n","end_time=time.time()\n","print(end_time-start_time)\n","\n","## ene shig list comprehension ashiglaaad davtaltaa hiivel hamaagui hurdan."]},{"cell_type":"markdown","metadata":{"id":"jx1MGbMEyZcJ"},"source":["### Timeit module"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711373690325,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"JrzkDdFmyScs","outputId":"c35d9a72-9355-46ab-bd1d-15c378c511a2"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.3773682490000283\n"]}],"source":["import timeit\n","\n","setup_code= \"\"\"\n","name= \"RandomString\"\n","result_list=[]\n","\"\"\"\n","main_code=\"\"\"\n","for char in name:\n","    result_list.append(char)\n","\"\"\"\n","print(timeit.timeit(stmt=main_code,\n","                  setup=setup_code,\n","                  number=100000))\n","\n"]},{"cell_type":"markdown","metadata":{"id":"-OUjKlO-ycFK"},"source":["### Magic commands"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"elapsed":528,"status":"ok","timestamp":1711373741299,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NFjKz-u1ycdx","outputId":"fc1d6d70-594f-4a2a-9d07-ff4ae21f4f5f"},"outputs":[{"data":{"application/json":{"cell":{"!":"OSMagics","HTML":"Other","SVG":"Other","bash":"Other","bigquery":"Other","capture":"ExecutionMagics","debug":"ExecutionMagics","file":"Other","html":"DisplayMagics","javascript":"DisplayMagics","js":"DisplayMagics","latex":"DisplayMagics","markdown":"DisplayMagics","perl":"Other","prun":"ExecutionMagics","pypy":"Other","python":"Other","python2":"Other","python3":"Other","ruby":"Other","script":"ScriptMagics","sh":"Other","shell":"Other","svg":"DisplayMagics","sx":"OSMagics","system":"OSMagics","time":"ExecutionMagics","timeit":"ExecutionMagics","writefile":"OSMagics"},"line":{"alias":"OSMagics","alias_magic":"BasicMagics","autoawait":"AsyncMagics","autocall":"AutoMagics","automagic":"AutoMagics","autosave":"KernelMagics","bookmark":"OSMagics","cat":"Other","cd":"OSMagics","clear":"KernelMagics","colors":"BasicMagics","conda":"PackagingMagics","config":"ConfigMagics","connect_info":"KernelMagics","cp":"Other","debug":"ExecutionMagics","dhist":"OSMagics","dirs":"OSMagics","doctest_mode":"BasicMagics","ed":"Other","edit":"KernelMagics","env":"OSMagics","gui":"BasicMagics","hist":"Other","history":"HistoryMagics","killbgscripts":"ScriptMagics","ldir":"Other","less":"KernelMagics","lf":"Other","lk":"Other","ll":"Other","load":"CodeMagics","load_ext":"ExtensionMagics","loadpy":"CodeMagics","logoff":"LoggingMagics","logon":"LoggingMagics","logstart":"LoggingMagics","logstate":"LoggingMagics","logstop":"LoggingMagics","ls":"Other","lsmagic":"BasicMagics","lx":"Other","macro":"ExecutionMagics","magic":"BasicMagics","man":"KernelMagics","matplotlib":"PylabMagics","mkdir":"Other","more":"KernelMagics","mv":"Other","notebook":"BasicMagics","page":"BasicMagics","pastebin":"CodeMagics","pdb":"ExecutionMagics","pdef":"NamespaceMagics","pdoc":"NamespaceMagics","pfile":"NamespaceMagics","pinfo":"NamespaceMagics","pinfo2":"NamespaceMagics","pip":"Other","popd":"OSMagics","pprint":"BasicMagics","precision":"BasicMagics","prun":"ExecutionMagics","psearch":"NamespaceMagics","psource":"NamespaceMagics","pushd":"OSMagics","pwd":"OSMagics","pycat":"OSMagics","pylab":"PylabMagics","qtconsole":"KernelMagics","quickref":"BasicMagics","recall":"HistoryMagics","rehashx":"OSMagics","reload_ext":"ExtensionMagics","rep":"Other","rerun":"HistoryMagics","reset":"NamespaceMagics","reset_selective":"NamespaceMagics","rm":"Other","rmdir":"Other","run":"ExecutionMagics","save":"CodeMagics","sc":"OSMagics","set_env":"OSMagics","shell":"Other","store":"StoreMagics","sx":"OSMagics","system":"OSMagics","tb":"ExecutionMagics","tensorflow_version":"Other","time":"ExecutionMagics","timeit":"ExecutionMagics","unalias":"OSMagics","unload_ext":"ExtensionMagics","who":"NamespaceMagics","who_ls":"NamespaceMagics","whos":"NamespaceMagics","xdel":"NamespaceMagics","xmode":"BasicMagics"}},"text/plain":["Available line magics:\n","%alias  %alias_magic  %autoawait  %autocall  %automagic  %autosave  %bookmark  %cat  %cd  %clear  %colors  %conda  %config  %connect_info  %cp  %debug  %dhist  %dirs  %doctest_mode  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %lf  %lk  %ll  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %lx  %macro  %magic  %man  %matplotlib  %mkdir  %more  %mv  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %pip  %popd  %pprint  %precision  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %rep  %rerun  %reset  %reset_selective  %rm  %rmdir  %run  %save  %sc  %set_env  %shell  %store  %sx  %system  %tb  %tensorflow_version  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode\n","\n","Available cell magics:\n","%%!  %%HTML  %%SVG  %%bash  %%bigquery  %%capture  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%markdown  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%shell  %%svg  %%sx  %%system  %%time  %%timeit  %%writefile\n","\n","Automagic is ON, % prefix IS NOT needed for line magics."]},"execution_count":115,"metadata":{},"output_type":"execute_result"}],"source":["%lsmagic"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PDMRgAntycgi"},"outputs":[],"source":["import random"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4411,"status":"ok","timestamp":1711373884376,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"_nvTydbpyczH","outputId":"173598c5-cf98-4885-9452-75bf85392577"},"outputs":[{"name":"stdout","output_type":"stream","text":["1.3 ms ± 14.8 µs per loop (mean ± std. dev. of 3 runs, 1000 loops each)\n"]}],"source":["%%timeit -r3 -n1000\n","lst=[]\n","for i in range(1000):\n","    lst.append((random.randint(1,1000)**2+10)/111)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6130,"status":"ok","timestamp":1711373987485,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"GpoovcXSx_6P","outputId":"56d58cdb-c5d0-47b0-a673-7e48e9a47ac6"},"outputs":[{"name":"stdout","output_type":"stream","text":["1.9 ms ± 322 µs per loop (mean ± std. dev. of 3 runs, 1000 loops each)\n"]}],"source":["%timeit -r3 -n1000 rand_nums=[(random.randint(1,1000)**2+10)/111 for _ in range(1000)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_7vrAwmf1T-J"},"outputs":[],"source":["import numpy as np"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1711374122859,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"sQOTuZkG1UAc","outputId":"83a734b0-7999-437f-a7ae-cb267d212542"},"outputs":[{"name":"stdout","output_type":"stream","text":["57.5 µs ± 15.1 µs per loop (mean ± std. dev. of 3 runs, 1000 loops each)\n"]}],"source":["%timeit -r3 -n1000 rand_nums=(np.random.randint(1,1000,1000)**2+10)/111\n","## Ene bur umnuh hedteigee haritsuulahad soliotoi hurdan baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2975,"status":"ok","timestamp":1711374177034,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"LO_nXVEO1ukk","outputId":"2465b24c-3009-4db1-ed6d-27357041544d"},"outputs":[{"name":"stdout","output_type":"stream","text":["3.54 µs ± 783 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n","5.4357805700055906e-06\n","3.0464942199978394e-06\n"]}],"source":["times=%timeit -o rand_nums=np.random.randint(1000)\n","print(times.worst)\n","print(times.best)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711374199658,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"WThpBd7V1utU","outputId":"4f3d28dd-87f8-4e90-acad-f370b0637ef5"},"outputs":[{"name":"stdout","output_type":"stream","text":["['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_precision', '_repr_pretty_', 'all_runs', 'average', 'best', 'compile_time', 'loops', 'repeat', 'stdev', 'timings', 'worst']\n"]}],"source":["print(dir(times))"]},{"cell_type":"markdown","metadata":{"id":"AlqNtldz2i_5"},"source":["##Lesson 38 (Error functiontai ajillah)"]},{"cell_type":"markdown","metadata":{"id":"_xRfctpY2jKL"},"source":["###Example 1 (Exceptional Handling)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"g37PIpdn2jZr"},"outputs":[],"source":["digit_name={\n","    'zero':0,\n","    'one':1,\n","    'two':2,\n","    'three':3,\n","    'four':4,\n","    'five':5,\n","    'six':6,\n","    'seven':7,\n","    'eight':8,\n","    'nine':9\n","}"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1714649428073,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"WKRA-MtM2jcE","outputId":"9f0a705f-e9ed-47f9-c32b-a0639355e06c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Amjiltgui.Dugaariin nershil baihgui baina.\n"]},{"output_type":"execute_result","data":{"text/plain":["-1"]},"metadata":{},"execution_count":32}],"source":["digit_name={\n","    'zero':0,\n","    'one':1,\n","    'two':2,\n","    'three':3,\n","    'four':4,\n","    'five':5,\n","    'six':6,\n","    'seven':7,\n","    'eight':8,\n","    'nine':9\n","}\n","\n","def convert(s):\n","    ##temdegten tsuvaag buhel toon turul ruu shiljuuleh##\n","    try:\n","        number=''\n","        for i in s.split():\n","            number+= str(digit_name[i])\n","        x=int(number)\n","        print(\"Amjilttai hurvuulelt hiigdlee.x={}\".format(x))\n","    except KeyError:\n","        print(\"Amjiltgui.Dugaariin nershil baihgui baina.\")\n","        x=-1\n","    except TypeError:\n","        print(\"Amjiltgui. Ugugdliin turul ni buruu baina.\")\n","        x=-1\n","    return x\n","\n","convert('132wef')"]},{"cell_type":"code","source":["def convert(s):\n","    try:\n","        number=\"\"\n","        for i in s.split():\n","            number+=str(digit_name[i])\n","        x=int(number)\n","        print(x)\n","\n","\n","    except KeyError:\n","        print('Nee yarn novhs')\n","        x=-1\n","    except TypeError:\n","        print('za zaildaa')\n","    return x\n","convert('nine sda ')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LLxzWZqGEkAr","executionInfo":{"status":"ok","timestamp":1714649785924,"user_tz":-540,"elapsed":337,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9a9051f5-a982-441e-af80-c2491249be29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nee yarn novhs\n"]},{"output_type":"execute_result","data":{"text/plain":["-1"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TWkzSbO32a93"},"outputs":[],"source":["def convert(s):\n","    \"\"\"Temdegten tsuvaag buhel toon turul ruu shiljuuleh\"\"\"\n","    try:\n","        number=''\n","        for key in s.split():\n","            number+= digit_name[key]\n","        return int(number)\n","    except (KeyError, ValueError,TypeError):\n","        return -1\n","    return number"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1714649739423,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"GOkxNfAq2bA1","outputId":"6a00a991-a595-46ed-9be8-c186a70b04a0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1"]},"metadata":{},"execution_count":42}],"source":["convert('seven nine')"]},{"cell_type":"markdown","metadata":{"id":"YEgH3Cz-6x_j"},"source":["\n","###Example 2 (Raise a error)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"executionInfo":{"elapsed":611,"status":"error","timestamp":1711544935965,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"9VY5AXCZ2jez","outputId":"947db61a-df78-45b2-aedd-dc314a328ce9"},"outputs":[{"ename":"Exception","evalue":"Orlogiin talbar deer zarlagiin guilgee bichigdeh oroldlogo hiigdlee.","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mException\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-65-f2e549713a9f>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mincome\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mincome\u001b[0m\u001b[0;34m<\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Orlogiin talbar deer zarlagiin guilgee bichigdeh oroldlogo hiigdlee.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mException\u001b[0m: Orlogiin talbar deer zarlagiin guilgee bichigdeh oroldlogo hiigdlee."]}],"source":["income=-100\n","if income<0:\n","    raise Exception('Orlogiin talbar deer zarlagiin guilgee bichigdeh oroldlogo hiigdlee.')\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"executionInfo":{"elapsed":325,"status":"error","timestamp":1714649906883,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-09dxzORAtN4","outputId":"aac8cd58-403f-4149-c8a4-4bc65b965c0e"},"outputs":[{"output_type":"error","ename":"TypeError","evalue":"Zuvhun eyreg utga avah ystoi shdee.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-46-b43dece49625>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvar\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Zuvhun eyreg utga avah ystoi shdee.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m## Ene deer sain harah yum bol code-n bicsen aldaanii murtiig butsaaj baina.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: Zuvhun eyreg utga avah ystoi shdee."]}],"source":["var= \"Python\"\n","\n","if not type(var) is int:\n","    raise TypeError(\"Zuvhun eyreg utga avah ystoi shdee.\")\n","\n","## Ene deer sain harah yum bol code-n bicsen aldaanii murtiig butsaaj baina."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"executionInfo":{"elapsed":4,"status":"error","timestamp":1714649858706,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"HPNCPYPW1eKE","outputId":"6bbde396-33e3-463a-fb55-b1443f26ec96"},"outputs":[{"output_type":"error","ename":"ZeroDivisionError","evalue":"division by zero","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-44-9e1622b385b6>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;36m1\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mZeroDivisionError\u001b[0m: division by zero"]}],"source":["1/0"]},{"cell_type":"markdown","metadata":{"id":"4RCZ_ndy1eei"},"source":["##Lesson 39 (Regex)"]},{"cell_type":"markdown","metadata":{"id":"7ZQQucQ0yjqq"},"source":["Hereglee:\n","\n","1.Orolt batalgaajuulah\n","\n","2.Web-ees data olborloh\n","\n","3.Data tseverleh, yanzlah\n","\n","4.Text-tei ajillah"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qSw7RpgH1h4i"},"outputs":[],"source":["import re\n","pattern=re.compile(r\"\")"]},{"cell_type":"markdown","metadata":{"id":"rN9ck2PM5JGj"},"source":["###Example1 (Match)"]},{"cell_type":"markdown","metadata":{"id":"Ix8YkIxXzsnn"},"source":["Special Sequence:\n","\n",".   - This element matches any character except \\n\n","\n","\\d  - This matches any digit [0-9]\n","\n","\\D  - This matches non-digit characters [^0-9]\n","\n","\\s  - This matches whitespace character [\\t\\n\\r\\f\\v]\n","\n","\\S  - This matches non-whitespace character [^\\t\\n\\r\\f\\v]\n","\n","\\w  - This matches alphanumeric character [a-zA-Z0-9_]\n","\n","\\W  - This matches any non-alphanumeric character [^a-zA-Z0-0]\n"]},{"cell_type":"markdown","source":["Here are some key concepts related to regular expressions:\n","\n","Patterns: Regular expressions consist of patterns, which are sequences of characters that define a search pattern. These patterns can include literal characters, metacharacters, and quantifiers.\n","\n","Metacharacters: Metacharacters are special characters with special meanings in regular expressions. Some common metacharacters include:\n","\n",". (dot): Matches any single character except newline.\n","^: Matches the start of the string.\n","$: Matches the end of the string.\n","*: Matches zero or more occurrences of the preceding character.\n","+: Matches one or more occurrences of the preceding character.\n","?: Matches zero or one occurrence of the preceding character.\n","[ ]: Matches any single character within the brackets.\n","|: Acts as an OR operator, matching either the pattern before or after the pipe.\n","Quantifiers: Quantifiers specify how many occurrences of the preceding character or group are required or allowed. Some common quantifiers include:\n","\n","*: Zero or more occurrences.\n","+: One or more occurrences.\n","?: Zero or one occurrence.\n","{n}: Exactly n occurrences.\n","{n,}: At least n occurrences.\n","{n,m}: Between n and m occurrences.\n","Groups: Groups in regular expressions are enclosed within parentheses ( and ). They are used to capture and manipulate substrings of text. Groups can be referenced by index or name.\n","\n","Flags: Regular expressions in Python support various flags that modify the behavior of the pattern matching. Some common flags include:\n","\n","re.IGNORECASE (or re.I): Case-insensitive matching.\n","re.MULTILINE (or re.M): Allows ^ and $ to match the start and end of each line, not just the whole string.\n","re.DOTALL (or re.S): Allows . to match newline characters.\n","re.VERBOSE (or re.X): Allows you to write regular expressions more readable by ignoring whitespace and comments.\n","In Python, regular expressions are commonly used with the re module, which provides functions for working with regular expressions. Some of the most commonly used functions include re.search(), re.match(), re.findall(), re.sub(), and re.split().\n","\n"],"metadata":{"id":"ZKj0Ai3Xrrs1"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":403,"status":"ok","timestamp":1711632991693,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"KILWWft61iAJ","outputId":"79980d94-c65e-497b-fa32-41abc6fcadea"},"outputs":[{"name":"stdout","output_type":"stream","text":["r\n"]}],"source":["import re\n","\n","pattern=re.compile(r\"\\w\")\n","\n","string=\"regex is awesome!\"\n","result= pattern.match(string)\n","print(result.group())\n"," ##string-iin ehnii usgiig taniad hevelj baina.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":388,"status":"ok","timestamp":1711625937458,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"LZq3ZU7aZGML","outputId":"89836d8d-3357-4635-8852-d1d2c6918128"},"outputs":[{"name":"stdout","output_type":"stream","text":["regex\n"]}],"source":["pattern=re.compile(r\"\\w+\")\n","result=pattern.match(string)\n","print(result.group())"]},{"cell_type":"markdown","metadata":{"id":"ykHmNYOC2-NF"},"source":["Quantifiers:\n","+     -one or more--\\w+--ABCDEF097\n","{2}   -wxactly two times--\\d{2}--01\n","{1,}  -one or more times--\\w{1}--smiling\n","{2,4} -2,3or 4times--\\w{2,4}-- 1234\n","*     -0 or more times--A*B-- AAAAB\n","?     -once or none(lazy)--\\d+?--1 in 12345"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1711626789926,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"KWqB5YSR2fHg","outputId":"8935bb15-e2c8-4845-cfda-3f618382cd7c"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'007'"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["import re\n","\n","def regex(string):\n","    \"\"\"This function returns at least one matching digit.\"\"\"\n","    pattern=re.compile(r\"\\d{1,}\")\n","    result=pattern.match(string)\n","    if result:\n","        return result.group()\n","    return None\n","    #Call our function, passing in our string\n","regex(\"007 James Bond\")\n"]},{"cell_type":"markdown","metadata":{"id":"DO1m-n5Q5NG_"},"source":["###Example2 (^and $)"]},{"cell_type":"markdown","metadata":{"id":"wv-nAmdz5SMm"},"source":["^ and $ are boundaries or anchors. ^ marks the start, while $ marks the end of a regular expression.\n","\n","> Add blockquote\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":606,"status":"ok","timestamp":1711633159317,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Vxrt8oVB4Os_","outputId":"b10b4de9-91c2-4894-84a3-888fdd8495c3"},"outputs":[{"name":"stdout","output_type":"stream","text":["None\n"]}],"source":["line=\"dance more\"\n","result=re.match(r\"[^d+]\",line)\n","print(result)"]},{"cell_type":"markdown","metadata":{"id":"VIhUuLyX6ECl"},"source":["###Example3 (Search)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":388,"status":"ok","timestamp":1711633206222,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"G1LMT49Z4Ovt","outputId":"257577ff-8e59-4784-ac2a-e0d1aebd3fc8"},"outputs":[{"name":"stdout","output_type":"stream","text":["dreamer\n"]}],"source":["import re\n","string=\"\\n dreamer\"\n","result=re.search(r\"\\w+\",string, re.MULTILINE)\n","print(result.group())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711626943420,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"1cIcHWBb2fKM","outputId":"fb8bc8a5-3517-4cce-cfab-475cc477c5dc"},"outputs":[{"name":"stdout","output_type":"stream","text":["<html>\n"]}],"source":["pattern=re.compile(r\"^<html>\")\n","result=pattern.search(\"<html><\\html>\")\n","print(result.group())"]},{"cell_type":"markdown","metadata":{"id":"mYXHl9576pgh"},"source":["###Example4 (Split)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711627312041,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"kjXweUdEkJ8n","outputId":"c6f2880c-597b-414d-a622-bc387380ddbf"},"outputs":[{"name":"stdout","output_type":"stream","text":["['Jhon Doe', 'Jane Doe', '', 'Jin Du', '', 'Chin Doe']\n"]}],"source":["text=\"\"\"Jhon Doe\n","Jane Doe\n","\n","Jin Du\n","\n","Chin Doe\"\"\"\n","results=re.split(r\"\\n\",text)\n","print(results)\n","##Iim uyd regex-eer split hiisen ni hamaagui deer. shuud split hiivel zavaarsn ym bolno."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":459,"status":"ok","timestamp":1711627331823,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"XtILy3qa6ssY","outputId":"735ee1ab-5a9a-4d22-c5be-effe40b7ac02"},"outputs":[{"data":{"text/plain":["['Jhon', 'Doe', 'Jane', 'Doe', 'Jin', 'Du', 'Chin', 'Doe']"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["text.split()"]},{"cell_type":"markdown","metadata":{"id":"e3sRATFuxWIC"},"source":["##Lesson40 (Float turliin code tanidag regex bichih)"]},{"cell_type":"markdown","metadata":{"id":"fbBsOK5PPWyP"},"source":["###Task1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gWhEny8i8XXj"},"outputs":[],"source":["import re"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wL_oKjUW8XZ2"},"outputs":[],"source":["pattern=re.compile(r\"^[-+.]\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RoSWWS818Xcq"},"outputs":[],"source":["pattern.match(\"4.50\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rg5Vopum8Xe3"},"outputs":[],"source":["test_lst=[\"+4.50\",\"-1.0\",\".5\",\"-.7\",\"+4\",\"-+4.5\"]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1711632352921,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"R4sttYU1OhBb","outputId":"762e2e7c-ea59-4998-c517-43f39daec8a4"},"outputs":[{"name":"stdout","output_type":"stream","text":["+4.50 is True.\n","-1.0 is True.\n",".5 is True.\n","-.7 is True.\n","+4 is True.\n","-+4.5 is True.\n"]}],"source":["for el in test_lst:\n","    print(\"{} is {}.\".format(el , bool(pattern.match(el))))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zC0p-mFBOhEc"},"outputs":[],"source":["pattern=re.compile(r\"^[-+.]?\")"]},{"cell_type":"markdown","metadata":{"id":"yZ_d_jUEPSvx"},"source":["###Task2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OHsipgZx8XhR"},"outputs":[],"source":["pattern=re.compile(r\"^[-+.]?\\d+$\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":381,"status":"ok","timestamp":1711633739684,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"7zBngomqPZF5","outputId":"c4970a29-d0fb-4e9d-f7d7-25ca328369ec"},"outputs":[{"name":"stdout","output_type":"stream","text":["12. is False.\n","12.0 is False.\n"]}],"source":["for el in [\"12.\", \"12.0\"]:\n","    print(\"{} is {}.\".format(el , bool(pattern.match(el))))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TZXhbv-bPZLB"},"outputs":[],"source":["pattern=re.compile(r\"^[-+]?\\d+\\.\\d+$\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":477,"status":"ok","timestamp":1711633899348,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"WJz96qwKPZPp","outputId":"a8af5e58-0e9d-4be9-dc9c-42a6e856f8f0"},"outputs":[{"name":"stdout","output_type":"stream","text":["12 is False.\n","12.0 is True.\n"]}],"source":["for el in [\"12\",\"12.0\"]:\n","    print(\"{} is {}.\".format(el, bool(pattern.match(el))))"]},{"cell_type":"markdown","metadata":{"id":"WgRstd0gVMVM"},"source":["###Example3 (Final shit)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"G9AX0YYZVRF6"},"outputs":[],"source":["pattern=re.compile(r\"^[-+]?\\d*\\.d+$\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":475,"status":"ok","timestamp":1711634129355,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"AFIujqv6VRJP","outputId":"4b7c048e-a0b0-4c9d-c75f-e28bd6bacceb"},"outputs":[{"name":"stdout","output_type":"stream","text":["+4.50 is False.\n","-1.0 is False.\n",".5 is False.\n","-.7 is False.\n","+4 is False.\n","-+4.5 is False.\n"]}],"source":["for el in test_lst:\n","    print(\"{} is {}.\".format(el ,bool(pattern.match(el))))"]},{"cell_type":"markdown","metadata":{"id":"CF8V5D5JWJOA"},"source":["##Lesson 41 (Regex's functions)"]},{"cell_type":"markdown","metadata":{"id":"p-yAxv5_Y_xL"},"source":["###group()\n","This expression returns one or more subgroups of the match."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Xf9N39iY8zd"},"outputs":[],"source":["import re\n","m=re.match(r\"(\\w+)@(\\w+)\\.(\\w+)\" , 'username@gmail.com')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1711635266163,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"NyfnaIlqWRQn","outputId":"7657d458-f1ab-4765-8a90-51dc51e6b1dd"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'username@gmail.com'"]},"execution_count":51,"metadata":{},"output_type":"execute_result"}],"source":["m.group()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":507,"status":"ok","timestamp":1711635302716,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"BDDXyYDUaUdp","outputId":"c515b630-df11-4e81-db04-0f6783fc1bf4"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'username'"]},"execution_count":52,"metadata":{},"output_type":"execute_result"}],"source":["m.group(1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":404,"status":"ok","timestamp":1711635305082,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"DhZruMilaUgk","outputId":"8e29b24f-aae9-484d-9a18-7758a8895d66"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'gmail'"]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["m.group(2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":332,"status":"ok","timestamp":1711635307762,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"OatvmOipaUjd","outputId":"755b2e85-30eb-4c69-8301-06258f5a81f5"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'com'"]},"execution_count":54,"metadata":{},"output_type":"execute_result"}],"source":["m.group(3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":678,"status":"ok","timestamp":1711635338571,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"Bj-CmSMFWRS7","outputId":"71514ad4-cb1f-4985-9bcd-c95486f86d66"},"outputs":[{"data":{"text/plain":["('username', 'gmail', 'com')"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["m.group(1,2,3)"]},{"cell_type":"markdown","metadata":{"id":"IHbDqiaGZC_Y"},"source":["###groups()\n","This expression returns a tuple containing all the subgroups of the match."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":438,"status":"ok","timestamp":1711635436460,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"EquqHa3nZEbw","outputId":"384a43c1-a329-4efa-cd97-1ec60b7c6e4c"},"outputs":[{"data":{"text/plain":["('username', 'gmail', 'com')"]},"execution_count":56,"metadata":{},"output_type":"execute_result"}],"source":["m.groups()"]},{"cell_type":"markdown","metadata":{"id":"vj6ytPRzZFQM"},"source":["###start()\n","Return the startinf position of the match"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711635484692,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"H7qDAghTZHQc","outputId":"b2e38627-6d6a-4c93-f653-11479b0e1085"},"outputs":[{"data":{"text/plain":["0"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["m.start()"]},{"cell_type":"markdown","metadata":{"id":"R1YIwFR3bTMK"},"source":["###end()\n","Return the ending position of the match"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":423,"status":"ok","timestamp":1711635579463,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"_uLVZDhwbjIx","outputId":"eb41c555-fd1f-4a30-c6a2-b0c4013d83b3"},"outputs":[{"data":{"text/plain":["18"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["m.end()"]},{"cell_type":"markdown","metadata":{"id":"Dc7RQbD6ZJhH"},"source":["###span()\n","return a tuple containing the (start, end) positions of the match"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":451,"status":"ok","timestamp":1711635638818,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"-j8GsoxJZMC4","outputId":"2bb462dc-3b58-4e7a-ac1b-a0562e2c4db7"},"outputs":[{"data":{"text/plain":["(0, 18)"]},"execution_count":59,"metadata":{},"output_type":"execute_result"}],"source":["m.span()"]},{"cell_type":"markdown","metadata":{"id":"2ZpoUlUGZMT5"},"source":["###match()\n","Determine if the RE matches at the beginning of the string."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1711635906069,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"TO-KVtI6ZOCB","outputId":"e7eeff71-1454-4243-851e-dd292e974ef6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Match found:  \n"]}],"source":["p=re.compile(r\"\\s+\")\n","m=p.match(' string goes here') ## ene shit urd taldaa zaitai bolhoor match found boljin. Baigaagu bol match not found.)\n","if m:\n","    print('Match found:', m.group())\n","else:\n","    print('No match')\n","##Actually hooson zaig hevelj baigaa. Hooson zai bolhoor haragdku ni obvious bizde?"]},{"cell_type":"markdown","metadata":{"id":"uf-LyQNOZOUS"},"source":["###search()\n","Scan through a string, looking for any location where this RE matches."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":961,"status":"ok","timestamp":1711636384118,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"mKeCpy3BZQaG","outputId":"e0c9ceb5-e428-437b-81c7-c79777357765"},"outputs":[{"data":{"text/plain":["re.MULTILINE"]},"execution_count":65,"metadata":{},"output_type":"execute_result"}],"source":["re.M"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1711636384118,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"rr9c7d80ZQcx","outputId":"c7f8456b-cab5-4deb-be19-9abea892a898"},"outputs":[{"data":{"text/plain":["re.IGNORECASE"]},"execution_count":66,"metadata":{},"output_type":"execute_result"}],"source":["re.I"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1711636384118,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"I3GRzUJLZQg6","outputId":"7b0ae77b-b1da-4e6c-cf46-42c50365b5a2"},"outputs":[{"name":"stdout","output_type":"stream","text":["No match!!\n","search--> searchObj.group() dogs\n"]}],"source":["line=\"Cats are smarter than dogs\";\n","matchObj= re.match(r'dogs',line,re.M|re.I)\n","if matchObj:\n","    print(\"match-->matchObj.group():\", matchObj.group())\n","else:\n","    print('No match!!')\n","\n","searchObj= re.search(r'dogs', line, re.M|re.I)\n","if searchObj:\n","    print(\"search--> searchObj.group()\", searchObj.group())\n","else:\n","    print(\"Nothing found\")"]},{"cell_type":"markdown","metadata":{"id":"_fcVxP2lZQrB"},"source":["###findall()\n","The expression re.findall() returns all the non-overlapping matches of patterns in as string as a list of strings."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":336,"status":"ok","timestamp":1711637443768,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"L5GSwspeZSuO","outputId":"d4ca2806-f997-4a5e-e6c4-3019cfe5981f"},"outputs":[{"name":"stdout","output_type":"stream","text":["['h', 't', 't', 'p', 's', 'c', 'o', 'l', 'a', 'b', 'r', 'e', 's', 'e', 'a', 'r', 'c', 'h', 'g', 'o', 'o', 'g', 'l', 'e', 'c', 'o', 'm']\n"]}],"source":["print(re.findall(r'\\w','https://colab.research.google.com/'))"]},{"cell_type":"markdown","metadata":{"id":"tlgG_FO9ZS9f"},"source":["###sub()\n","The re.sub() tool (sub stands for substitution) evaluates a pattern and, for each valid match, it calls a method(or lambda).\n","\n","The method is called for all matches and can be used to modify strings in different ways.\n","\n","The re.sub() method returns the modified string as an output."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":549,"status":"ok","timestamp":1711637984952,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"PAsZZwigjuc4","outputId":"d5377ce3-ae77-43ba-95d6-39bd825756fe"},"outputs":[{"name":"stdout","output_type":"stream","text":["1 4 9 16 25 36 49 64 81\n"]}],"source":["#Squaring numbers\n","def square(match):\n","    number=int(match.group())\n","    return str(number**2)\n","print(re.sub(r\"\\d+\", square ,\"1 2 3 4 5 6 7 8 9\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711638269010,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"2aAp3zsqZUe4","outputId":"18d29395-c563-43a6-f0ce-71249d9adf5f"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","<head>\n","<title>HTML</title>\n","</head>\n","<object type=\"application/x-flash\"\n","    data=\"your-file.swf\"\n","    width=\"0\" height=\"0\">\n","    \n","    <param name=\"quality\" value=\"high\"/>\n","</object>\n","\n"]}],"source":["html=\"\"\"\n","<head>\n","<title>HTML</title>\n","</head>\n","<object type=\"application/x-flash\"\n","    data=\"your-file.swf\"\n","    width=\"0\" height=\"0\">\n","    <!--<param name=\"movie\" value=\"your-file.swf\" /> -->\n","    <param name=\"quality\" value=\"high\"/>\n","</object>\n","\"\"\"\n","print(re.sub(\"(<!--.*?-->)\", \"\", html))\n","#remove comment. 8r mur buyu comment baisan heseg ni baihgui bolj buig harj baina.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MG0y736OZUiG"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"AVi7ZBUumVFP"},"source":["##Lesson 42 (HTML Parser undsen oilgolt)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":465,"status":"ok","timestamp":1711681831255,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"HQ4tTUioHOxM","outputId":"2b4630de-8a16-43e4-fc84-f27637602264"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found a start tag: html\n","Found a start tag: head\n","Found a start tag: title\n","Found a start tag: body\n","Found a start tag: hl\n","Found a start tag: br\n","Found a start tag: body\n"]}],"source":["from html.parser import HTMLParser\n","#create a subclass and override the handler methods\n","class MyHTMLParser(HTMLParser):\n","    def handle_starttag(self,tag,attrs):\n","        print(\"Found a start tag:\" , tag)\n","    def hand_endtag(self,tag):\n","        print(\"Found an end tag:\" , tag)\n","\n","    def hand_startendtag(self,tag,attrs):\n","        print(\"Found an empty tag:\" ,tag)\n","##Instantiate the parser and fed it some HTML\n","parser=MyHTMLParser()\n","parser.feed(\"<html><head><title>HTML Parser - I </title></head>\"\n","            +\"<body><hl>HackerRank</h1><br/><body></html>\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":420,"status":"ok","timestamp":1711682702616,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"RiC6aP-RHOzc","outputId":"d4953883-cd74-4d51-f621-ab1449cef206"},"outputs":[{"name":"stdout","output_type":"stream","text":["Start:html\n","Start:head\n","Start:title\n","End :title\n","End :head\n","Start:body\n","-> data-modal-target > None\n","-> class > 1\n","Start:hl\n","End :h1\n","Empty :br\n","End :body\n","End :nthml\n"]}],"source":["from html.parser import HTMLParser\n","N=2\n","html=\"<html><head><title>HTML Parser - I</title></head><body data-modal-target class='1'><hl>HAckerRank</h1><br/></body></nthml>\"\n","class MyHTMLParser(HTMLParser):\n","    def handle_starttag(self, tag: str, attrs):\n","        print(\"Start:{}\".format(tag))\n","        if(len(attrs)):\n","            for a,b in attrs:\n","                print(\"-> {} > {}\".format(a,b))\n","    def handle_endtag(self, tag):\n","        print(\"End :{}\".format(tag))\n","    def handle_startendtag(self, tag,attrs):\n","        print(\"Empty :{}\".format(tag))\n","        if(len(attrs)):\n","            for a,b in attrs:\n","                print(\"->{} > {}\".format(a,b))\n","parser=MyHTMLParser()\n","parser.feed(html)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jq2XlkSXHO1y"},"outputs":[],"source":["from html.parser import HTMLParser\n","\n","# Number of lines of HTML input\n","N = int(input())\n","\n","# Initialize an empty string to store the HTML content\n","html = ''\n","\n","# Take input line by line and concatenate it to the HTML string\n","for _ in range(N):\n","    html += input()\n","\n","# Define a custom HTML parser class\n","class MyHTMLParser(HTMLParser):\n","    def handle_starttag(self, tag, attrs):\n","        print(\"Start :\", tag)\n","        for attr in attrs:\n","            print(\"->\", attr[0], \">\", attr[1])\n","\n","    def handle_endtag(self, tag):\n","        print(\"End   :\", tag)\n","\n","    def handle_startendtag(self, tag, attrs):\n","        print(\"Empty :\", tag)\n","        for attr in attrs:\n","            print(\"->\", attr[0], \">\", attr[1])\n","\n","# Create an instance of the parser\n","parser = MyHTMLParser()\n","\n","# Feed the HTML content to the parser\n","parser.feed(html)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IVoUWbldHO4u"},"outputs":[],"source":["from html.parser import HTMLParser\n","N=int(input())\n","html=''\n","for _ in range(N):\n","    html+=input()\n","class MyHTMLParser(HTMLParser):\n","    def handle_starttag(self, tag, attrs):\n","        print(\"Start : {}\".format(tag))\n","        if(len(attrs)):\n","            for a,b in attrs:\n","                print(\"-> {} > {}\".format(a,b))\n","    def handle_endtag(self, tag):\n","        print(\"End  : {}\".format(tag))\n","    def handle_startendtag(self, tag,attrs):\n","        print(\"Empty : {}\".format(tag))\n","        if(len(attrs)):\n","            for a,b in attrs:\n","                print(\"-> {} > {}\".format(a,b))\n","parser=MyHTMLParser()\n","parser.feed(html)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6BRaQXYrDRSB"},"outputs":[],"source":["from hmtl.parser import HTMLParser\n","class MyTemuujin(HTMLParser):\n","    def handle_starttag(self, tag, attrs):\n","        print(tag)\n","        for name,value in attrs:\n","            print(\"->{} > {}\".format(name,value))\n","lines=''\n","for _ in range(int(input())):\n","    lines+=input()\n","myparser=MyTemuujin()\n","myparser.feedlines"]},{"cell_type":"markdown","metadata":{"id":"XIGtRsnYU9Bu"},"source":["##Lesson 43 (Email Validation)"]},{"cell_type":"markdown","metadata":{"id":"5OIi1EkiGbLS"},"source":["Ehleed faker function-g suulgah import hiih"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RjetvabqU9Sa"},"outputs":[],"source":["from faker import Faker\n","\n","email_generator= Faker()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sfQoDJ2PVFSr"},"outputs":[],"source":["emails=[]\n","\n","for i in range(100):\n","    emails.append(email_generator.email())\n","emails.insert(2,\"fdsdsfsd@\")\n","emails.insert(5,\"@@@\")\n","emails.insert(7,'{gargra}')\n","emails.insert(9,\"Medkue sda\")\n","emails.insert(11,'aibisda yavj boovoo saa@ fagiuaogga5632re')"]},{"cell_type":"markdown","metadata":{"id":"VyPExJpkGjjK"},"source":["###Endees ehleed email tanih regex-ee bichtsgeey."]},{"cell_type":"markdown","metadata":{"id":"1TCtGsE-Go_9"},"source":["@-aas uragsh hesgiig tanih regex"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t-7m4n-oEuhi"},"outputs":[],"source":["import re"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RoQOQk7sGg2z"},"outputs":[],"source":["pattern=re.compile(r\"[a-zA-z0-9_.+-]+\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":453,"status":"ok","timestamp":1711697450518,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"zQgrqiolU9U4","outputId":"84c9dd66-a17e-4b2b-8841-5e9b91001962"},"outputs":[{"name":"stdout","output_type":"stream","text":["wigginsrobert@example.net is Valid email\n","grayamanda@example.com is Valid email\n","fdsdsfsd@ is Valid email\n","hrichards@example.net is Valid email\n","paullowe@example.net is Valid email\n","@@@ is Invalid email\n","patrickmarks@example.com is Valid email\n","{gargra} is Invalid email\n","kennedyamanda@example.net is Valid email\n","Medkue sda is Valid email\n","jaclyn96@example.org is Valid email\n","aibisda yavj boovoo saa@ fagiuaogga5632re is Valid email\n","patricia87@example.net is Valid email\n","joseluna@example.net is Valid email\n","jennifermiller@example.net is Valid email\n","williammendez@example.com is Valid email\n","suzanne52@example.net is Valid email\n","erin80@example.net is Valid email\n","renee01@example.org is Valid email\n","nsmith@example.net is Valid email\n","fchase@example.com is Valid email\n","thomastate@example.net is Valid email\n","rachelburgess@example.org is Valid email\n","simmonsedwin@example.com is Valid email\n","vhayes@example.com is Valid email\n","simmonsjay@example.org is Valid email\n","tgregory@example.net is Valid email\n","unoble@example.org is Valid email\n","schmittseth@example.org is Valid email\n","zachary87@example.org is Valid email\n","elizabeth03@example.org is Valid email\n","erin81@example.net is Valid email\n","meredith84@example.org is Valid email\n","csanchez@example.net is Valid email\n","howardjoanna@example.net is Valid email\n","tyler86@example.com is Valid email\n","qwall@example.com is Valid email\n","zsmith@example.org is Valid email\n","zamorascott@example.net is Valid email\n","edwardhughes@example.com is Valid email\n","tracey90@example.com is Valid email\n","kennethward@example.net is Valid email\n","manuelduffy@example.com is Valid email\n","oscar52@example.org is Valid email\n","kellylowe@example.org is Valid email\n","amiller@example.net is Valid email\n","crystal54@example.com is Valid email\n","mobrien@example.org is Valid email\n","smithjeffrey@example.org is Valid email\n","christopherfarmer@example.net is Valid email\n","ihorn@example.com is Valid email\n","johncase@example.com is Valid email\n","williamschristopher@example.com is Valid email\n","jessica79@example.com is Valid email\n","charlesvazquez@example.net is Valid email\n","dillonjohnson@example.com is Valid email\n","atran@example.com is Valid email\n","carlrice@example.org is Valid email\n","caroline99@example.net is Valid email\n","opeters@example.org is Valid email\n","baldwingregory@example.org is Valid email\n","mitchellkrystal@example.net is Valid email\n","yeseniahubbard@example.com is Valid email\n","markwilliams@example.com is Valid email\n","danielstephens@example.com is Valid email\n","hjordan@example.net is Valid email\n","sean13@example.com is Valid email\n","debra94@example.net is Valid email\n","shannoncontreras@example.net is Valid email\n","riosjennifer@example.net is Valid email\n","pellis@example.org is Valid email\n","blackwellmichael@example.org is Valid email\n","ianmcneil@example.org is Valid email\n","michael24@example.org is Valid email\n","susancampbell@example.org is Valid email\n","dhayes@example.net is Valid email\n","charlesglass@example.net is Valid email\n","jessicalopez@example.org is Valid email\n","martinwatts@example.net is Valid email\n","jmarshall@example.net is Valid email\n","youngkelly@example.org is Valid email\n","lori62@example.net is Valid email\n","reyesapril@example.net is Valid email\n","qbaker@example.org is Valid email\n","michaelwhite@example.org is Valid email\n","mhill@example.com is Valid email\n","smalone@example.org is Valid email\n","harperwendy@example.net is Valid email\n","chebert@example.com is Valid email\n","sblack@example.com is Valid email\n","rachel79@example.org is Valid email\n","gbrown@example.net is Valid email\n","elizabeth38@example.com is Valid email\n","ggallagher@example.net is Valid email\n","ysimon@example.org is Valid email\n","zsmith@example.org is Valid email\n","kathleenshepard@example.com is Valid email\n","martinezwilliam@example.org is Valid email\n","taylor60@example.net is Valid email\n","cthomas@example.org is Valid email\n","emilymartin@example.com is Valid email\n","tscott@example.org is Valid email\n","grodriguez@example.com is Valid email\n","clarkkayla@example.org is Valid email\n","shelby55@example.org is Valid email\n"]}],"source":["for el in emails:\n","    print(\"{} is {} email\".format(el, \"Valid\" if bool(pattern.match(el)) else \"Invalid\"))"]},{"cell_type":"markdown","metadata":{"id":"KiSr-8OFHvx-"},"source":["Dundah hesgiig tanidag regex bichih"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":654,"status":"ok","timestamp":1711698085385,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"YLgt5hudU9Xy","outputId":"c5da13b5-a4d5-431b-c2a3-bc4942a87d8c"},"outputs":[{"name":"stdout","output_type":"stream","text":["wigginsrobert@example.net is valid.\n","grayamanda@example.com is valid.\n","fdsdsfsd@ is Invalid.\n","hrichards@example.net is valid.\n","paullowe@example.net is valid.\n","@@@ is Invalid.\n","patrickmarks@example.com is valid.\n","{gargra} is Invalid.\n","kennedyamanda@example.net is valid.\n","Medkue sda is Invalid.\n","jaclyn96@example.org is Invalid.\n","aibisda yavj boovoo saa@ fagiuaogga5632re is Invalid.\n","patricia87@example.net is Invalid.\n","joseluna@example.net is valid.\n","jennifermiller@example.net is valid.\n","williammendez@example.com is valid.\n","suzanne52@example.net is Invalid.\n","erin80@example.net is Invalid.\n","renee01@example.org is Invalid.\n","nsmith@example.net is valid.\n","fchase@example.com is valid.\n","thomastate@example.net is valid.\n","rachelburgess@example.org is valid.\n","simmonsedwin@example.com is valid.\n","vhayes@example.com is valid.\n","simmonsjay@example.org is valid.\n","tgregory@example.net is valid.\n","unoble@example.org is valid.\n","schmittseth@example.org is valid.\n","zachary87@example.org is Invalid.\n","elizabeth03@example.org is Invalid.\n","erin81@example.net is Invalid.\n","meredith84@example.org is Invalid.\n","csanchez@example.net is valid.\n","howardjoanna@example.net is valid.\n","tyler86@example.com is Invalid.\n","qwall@example.com is valid.\n","zsmith@example.org is valid.\n","zamorascott@example.net is valid.\n","edwardhughes@example.com is valid.\n","tracey90@example.com is Invalid.\n","kennethward@example.net is valid.\n","manuelduffy@example.com is valid.\n","oscar52@example.org is Invalid.\n","kellylowe@example.org is valid.\n","amiller@example.net is valid.\n","crystal54@example.com is Invalid.\n","mobrien@example.org is valid.\n","smithjeffrey@example.org is valid.\n","christopherfarmer@example.net is valid.\n","ihorn@example.com is valid.\n","johncase@example.com is valid.\n","williamschristopher@example.com is valid.\n","jessica79@example.com is Invalid.\n","charlesvazquez@example.net is valid.\n","dillonjohnson@example.com is valid.\n","atran@example.com is valid.\n","carlrice@example.org is valid.\n","caroline99@example.net is Invalid.\n","opeters@example.org is valid.\n","baldwingregory@example.org is valid.\n","mitchellkrystal@example.net is valid.\n","yeseniahubbard@example.com is valid.\n","markwilliams@example.com is valid.\n","danielstephens@example.com is valid.\n","hjordan@example.net is valid.\n","sean13@example.com is Invalid.\n","debra94@example.net is Invalid.\n","shannoncontreras@example.net is valid.\n","riosjennifer@example.net is valid.\n","pellis@example.org is valid.\n","blackwellmichael@example.org is valid.\n","ianmcneil@example.org is valid.\n","michael24@example.org is Invalid.\n","susancampbell@example.org is valid.\n","dhayes@example.net is valid.\n","charlesglass@example.net is valid.\n","jessicalopez@example.org is valid.\n","martinwatts@example.net is valid.\n","jmarshall@example.net is valid.\n","youngkelly@example.org is valid.\n","lori62@example.net is Invalid.\n","reyesapril@example.net is valid.\n","qbaker@example.org is valid.\n","michaelwhite@example.org is valid.\n","mhill@example.com is valid.\n","smalone@example.org is valid.\n","harperwendy@example.net is valid.\n","chebert@example.com is valid.\n","sblack@example.com is valid.\n","rachel79@example.org is Invalid.\n","gbrown@example.net is valid.\n","elizabeth38@example.com is Invalid.\n","ggallagher@example.net is valid.\n","ysimon@example.org is valid.\n","zsmith@example.org is valid.\n","kathleenshepard@example.com is valid.\n","martinezwilliam@example.org is valid.\n","taylor60@example.net is Invalid.\n","cthomas@example.org is valid.\n","emilymartin@example.com is valid.\n","tscott@example.org is valid.\n","grodriguez@example.com is valid.\n","clarkkayla@example.org is valid.\n","shelby55@example.org is Invalid.\n"]}],"source":["pattern=re.compile(r\"[a-zA-z0-0_.+-]+@[a-zA-z0-9-]+\\.\")\n","for el in emails:\n","    print(\"{} is {}.\".format(el , \"valid\" if bool(pattern.match(el)) else \"Invalid\"))"]},{"cell_type":"markdown","metadata":{"id":"JKkPYvJJIllG"},"source":["Buten tanidag regex bichih."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":443,"status":"ok","timestamp":1711698262782,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"1D28Kt0pHvCL","outputId":"baff1173-1a87-4728-c2b0-e62b2e686082"},"outputs":[{"name":"stdout","output_type":"stream","text":["wigginsrobert@example.net is Valid.\n","grayamanda@example.com is Valid.\n","fdsdsfsd@ is Invalid.\n","hrichards@example.net is Valid.\n","paullowe@example.net is Valid.\n","@@@ is Invalid.\n","patrickmarks@example.com is Valid.\n","{gargra} is Invalid.\n","kennedyamanda@example.net is Valid.\n","Medkue sda is Invalid.\n","jaclyn96@example.org is Valid.\n","aibisda yavj boovoo saa@ fagiuaogga5632re is Invalid.\n","patricia87@example.net is Valid.\n","joseluna@example.net is Valid.\n","jennifermiller@example.net is Valid.\n","williammendez@example.com is Valid.\n","suzanne52@example.net is Valid.\n","erin80@example.net is Valid.\n","renee01@example.org is Valid.\n","nsmith@example.net is Valid.\n","fchase@example.com is Valid.\n","thomastate@example.net is Valid.\n","rachelburgess@example.org is Valid.\n","simmonsedwin@example.com is Valid.\n","vhayes@example.com is Valid.\n","simmonsjay@example.org is Valid.\n","tgregory@example.net is Valid.\n","unoble@example.org is Valid.\n","schmittseth@example.org is Valid.\n","zachary87@example.org is Valid.\n","elizabeth03@example.org is Valid.\n","erin81@example.net is Valid.\n","meredith84@example.org is Valid.\n","csanchez@example.net is Valid.\n","howardjoanna@example.net is Valid.\n","tyler86@example.com is Valid.\n","qwall@example.com is Valid.\n","zsmith@example.org is Valid.\n","zamorascott@example.net is Valid.\n","edwardhughes@example.com is Valid.\n","tracey90@example.com is Valid.\n","kennethward@example.net is Valid.\n","manuelduffy@example.com is Valid.\n","oscar52@example.org is Valid.\n","kellylowe@example.org is Valid.\n","amiller@example.net is Valid.\n","crystal54@example.com is Valid.\n","mobrien@example.org is Valid.\n","smithjeffrey@example.org is Valid.\n","christopherfarmer@example.net is Valid.\n","ihorn@example.com is Valid.\n","johncase@example.com is Valid.\n","williamschristopher@example.com is Valid.\n","jessica79@example.com is Valid.\n","charlesvazquez@example.net is Valid.\n","dillonjohnson@example.com is Valid.\n","atran@example.com is Valid.\n","carlrice@example.org is Valid.\n","caroline99@example.net is Valid.\n","opeters@example.org is Valid.\n","baldwingregory@example.org is Valid.\n","mitchellkrystal@example.net is Valid.\n","yeseniahubbard@example.com is Valid.\n","markwilliams@example.com is Valid.\n","danielstephens@example.com is Valid.\n","hjordan@example.net is Valid.\n","sean13@example.com is Valid.\n","debra94@example.net is Valid.\n","shannoncontreras@example.net is Valid.\n","riosjennifer@example.net is Valid.\n","pellis@example.org is Valid.\n","blackwellmichael@example.org is Valid.\n","ianmcneil@example.org is Valid.\n","michael24@example.org is Valid.\n","susancampbell@example.org is Valid.\n","dhayes@example.net is Valid.\n","charlesglass@example.net is Valid.\n","jessicalopez@example.org is Valid.\n","martinwatts@example.net is Valid.\n","jmarshall@example.net is Valid.\n","youngkelly@example.org is Valid.\n","lori62@example.net is Valid.\n","reyesapril@example.net is Valid.\n","qbaker@example.org is Valid.\n","michaelwhite@example.org is Valid.\n","mhill@example.com is Valid.\n","smalone@example.org is Valid.\n","harperwendy@example.net is Valid.\n","chebert@example.com is Valid.\n","sblack@example.com is Valid.\n","rachel79@example.org is Valid.\n","gbrown@example.net is Valid.\n","elizabeth38@example.com is Valid.\n","ggallagher@example.net is Valid.\n","ysimon@example.org is Valid.\n","zsmith@example.org is Valid.\n","kathleenshepard@example.com is Valid.\n","martinezwilliam@example.org is Valid.\n","taylor60@example.net is Valid.\n","cthomas@example.org is Valid.\n","emilymartin@example.com is Valid.\n","tscott@example.org is Valid.\n","grodriguez@example.com is Valid.\n","clarkkayla@example.org is Valid.\n","shelby55@example.org is Valid.\n"]}],"source":["import re\n","pattern=re.compile(r\"(^[a-zA-z0-9_.+-]+@[a-zA-z0-9-]+\\.[a-zA-z0-9-.]+$)\")\n","for el in emails:\n","    print(\"{} is {}.\".format( el , \"Valid\" if bool(pattern.match(el))   else \"Invalid\"))"]},{"cell_type":"markdown","metadata":{"id":"UNidAisFK1sY"},"source":["##Lesson-45 (Cardiin nuuts ug tanidag shit bichih)"]},{"cell_type":"markdown","metadata":{"id":"a0nwuYpZ6BzH"},"source":["edgeer shits ni zaaval 456-iin l ali negeer ni ehleh yostoi."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mGw7oFuhIm7k"},"outputs":[],"source":["import re\n","pattern=re.compile(r\"^[456]+\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":518,"status":"ok","timestamp":1711710582419,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"MvOawJi9K8pT","outputId":"c80032b7-3bc0-466f-a33e-dd3549a6c516"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(2, 3), match='4'>\n"]}],"source":["print(pattern.search('234 531 513 513'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1711710661674,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"dXMbOH4JK9hz","outputId":"854ddbeb-a63a-407e-c2d6-14b4a613c10e"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(0, 1), match='5'>\n"]}],"source":["print(pattern.search('5151 512 521'))"]},{"cell_type":"markdown","metadata":{"id":"OBTjerIc6Itg"},"source":["Yag l 16 orontoi baih heregtei."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v0CQ3XfsIm-2"},"outputs":[],"source":["pattern=re.compile(r\"^[456][a-zA-z0-9]{1,15}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1711710886755,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"br9u-qnY5_eK","outputId":"110deb8a-bd73-491b-d09d-54af408f26d3"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(0, 5), match='41321'>\n"]}],"source":["print(pattern.search('41321 5153 51 21'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":385,"status":"ok","timestamp":1711710893102,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"ZoDElv8E5_gc","outputId":"f74cf7fc-652c-46ea-eacd-d3de81e52a7b"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(0, 4), match='5122'>\n"]}],"source":["print(pattern.search('5122-2368-7954-3214'))"]},{"cell_type":"markdown","metadata":{"id":"xzjmnr-37LDe"},"source":["Zuvhun toonoos burdene."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":506,"status":"ok","timestamp":1711711033362,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"vEHE0tfQ7KW3","outputId":"5c978e85-c349-4ee6-94de-edfe876e932d"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(0, 4), match='5122'>\n"]}],"source":["pattern=re.compile(r\"^[456]\\d{1,15}\")\n","print(pattern.search('5122-2368-7954-3214'))"]},{"cell_type":"markdown","metadata":{"id":"xgpVJ-4T7aqB"},"source":["4,4uuruu bulegleed, (-) ene temdegeer holbogdson baij bolno."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1711711271694,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"FMwjx2Ut7bFF","outputId":"4ad4699e-ae4d-4e05-a1d8-8e0f1907d59f"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(0, 19), match='5122-2368-7954-3214'>\n"]}],"source":["pattern=re.compile(r\"^[456]\\d{3}-\\d{4}-\\d{4}-\\d{4}\")\n","print(pattern.search('5122-2368-7954-3214'))"]},{"cell_type":"markdown","metadata":{"id":"NX1aVtUl788T"},"source":["4 bolon tuunees deesh ijilhen too daraallan orj bolohgui."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":349,"status":"ok","timestamp":1711711425446,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"i7lUijcT73TA","outputId":"366e597f-a462-4a69-8729-c6c1bb4119b6"},"outputs":[{"name":"stdout","output_type":"stream","text":["<re.Match object; span=(0, 5), match='44444'>\n","None\n"]}],"source":["pattern=re.compile(r\"(\\d)\\1{3,}\")\n","print(pattern.search(\"44444\"))\n","print(pattern.search('444333555'))"]},{"cell_type":"markdown","metadata":{"id":"nUzh-Q5W7bUN"},"source":["Etssiin baidlaar bichey."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6753,"status":"ok","timestamp":1711712194483,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"6DoTkaSl7be8","outputId":"c0134aec-398c-421f-b617-1d0098e78789"},"outputs":[{"name":"stdout","output_type":"stream","text":["2\n","5122-2368-7954-3214\n","Valid\n","142\n","Invalid\n"]}],"source":["import re\n","n=int(input())\n","\n","for _ in range(n):\n","    s=input()\n","    pattern=re.compile(r\"^[456]\\d{3}-?[0-9]{4}-?[0-9]{4}-?[0-9]{4}$\")\n","    pre_match=pattern.search(s)\n","    if pre_match:\n","        processed_string= \"\".join(pre_match.group(0).replace('-',''))\n","        final_match=re.search(r\"(\\d)\\1{3,}\", processed_string)\n","        print(\"Invalid\" if final_match else \"Valid\")\n","    else:\n","        print(\"Invalid\")\n"]},{"cell_type":"markdown","metadata":{"id":"bIaDbuF1K-QF"},"source":["#Lesson 45.69 (Hackerrank-dav)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3vh4tzs2NfLV"},"outputs":[],"source":["n = int(input())\n","s = set(map(int, input().split()))\n","heden_udaah_too = int(input())\n","\n","for _ in range(heden_udaah_too):\n","    operation, length = input().split()\n","    other_set = set(map(int, input().split()))\n","    if operation == \"intersection_update\":\n","        s.intersection_update(other_set)\n","    elif operation == \"update\":\n","        s.update(other_set)\n","    elif operation == \"symmetric_difference_update\":\n","        s.symmetric_difference_update(other_set)\n","    elif operation == \"difference_update\":\n","        s.difference_update(other_set)\n","\n","print(sum(s))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"okpK0sMZYBWA"},"outputs":[],"source":["n = int(input())\n","s = set(map(int, input().split()))\n","N = int(input())\n","\n","for _ in range(N):\n","    command = input().split()\n","    if command[0] == 'pop':\n","        s.pop()\n","    elif command[0] == 'remove':\n","        s.remove(int(command[1]))\n","    elif command[0] == 'discard':\n","        s.discard(int(command[1]))\n","\n","print(sum(s))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WXlKRCtnaTnu"},"outputs":[],"source":["# Function to check if set A is a subset of set B\n","def is_subset(A, B):\n","    return all(elem in B for elem in A)\n","\n","# Input number of test cases\n","t = int(input().strip())\n","\n","# Iterate through each test case\n","for _ in range(t):\n","    # Input size of sets and the sets themselves\n","    m = int(input().strip())\n","    set_A = set(map(int, input().split()))\n","    n = int(input().strip())\n","    set_B = set(map(int, input().split()))\n","\n","    # Check if set A is a subset of set B\n","    if is_subset(set_A, set_B):\n","        print(\"True\")\n","    else:\n","        print(\"False\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I1liF5cbdvVG"},"outputs":[],"source":["def mutate_string(string, position, character):\n","    # Convert the string into a list since strings are immutable in Python\n","    string_list = list(string)\n","\n","    # Replace the character at the given position\n","    string_list[position] = character\n","\n","    # Convert the list back to a string and return\n","    return ''.join(string_list)\n","\n","# Sample Input\n","s = \"abracadabra\"\n","position = 5\n","character = \"k\"\n","\n","# Calling the function and printing the result\n","print(mutate_string(s, position, character))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":416,"status":"ok","timestamp":1711720485877,"user":{"displayName":"temka-sama","userId":"13085788523966765980"},"user_tz":-540},"id":"FkW1fpcue6Qz","outputId":"a302a02e-3f7a-479b-a120-f7b1b5e997a7"},"outputs":[{"name":"stdout","output_type":"stream","text":["['a', 'b', 'r', 'a', 'c', 'k', 'd', 'a', 'b', 'r', 'a']\n"]}],"source":["s = \"abracadabra\"\n","string_list = list(s)\n","string_list[5]='k'\n","print(string_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"khICmGkYfKsj","outputId":"9b19d0bf-b8a8-4413-80fc-f915bda3fdf6","executionInfo":{"status":"ok","timestamp":1711852598019,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["['a', 'b', 'r', 'a', 'c', 'k', 'd', 'a', 'b', 'r', 'a']\n"]}],"source":["s = \"abracadabra\"\n","string_list = list(s)\n","string_list[5]='k'\n","print(string_list)"]},{"cell_type":"markdown","source":["#Lesson 53 (OOP-Class)"],"metadata":{"id":"nacDJU7WziGu"}},{"cell_type":"markdown","source":["- Class ni objectiin butets bolon shinj chanariig todorhoilj ugdug.\n","- Shine object uusgehdee template baidlaar ashigladag.\n","- Objectiin initial state, attribute, methods-uudiig class-aar zohitsuulj todorhoilj boldog.\n","\n"],"metadata":{"id":"hAmszjoXcNKX"}},{"cell_type":"code","source":["class Vehicle():\n","    pass"],"metadata":{"id":"RbpY2z3dXpHv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Vehicle()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBzGlmCTcAHi","executionInfo":{"status":"ok","timestamp":1711954501924,"user_tz":-540,"elapsed":438,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"07621d52-ff6c-48b4-b5f8-c9f9bc6397d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<__main__.Vehicle at 0x7f64e7a8db10>"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["p=Vehicle()"],"metadata":{"id":"h195tMyjcA2_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["type(p)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U7Bjcbmrcvmr","executionInfo":{"status":"ok","timestamp":1711954671039,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"23047139-f7ac-4047-9988-9e08909e0316"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["__main__.Vehicle"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["p"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jKIuGvSDcvp4","executionInfo":{"status":"ok","timestamp":1711954680028,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"baf90b5b-3322-4454-90b3-850e3266690e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<__main__.Vehicle at 0x7f64e7a8ffd0>"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### Instance methods"],"metadata":{"id":"9U1NCFXXmCh3"}},{"cell_type":"code","source":["class Vehicle:\n","    def model(self):\n","        return \"Benz\"\n","##class-d baigaa buh function zaaval ()dotor self avch yavna.\n","##Tegeed bas model ni jishee ni method gsn ug."],"metadata":{"id":"x03gNQLIcA5_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c=Vehicle()\n","# c ni bol odoo instance"],"metadata":{"id":"9LoJqQxtmFP6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c.model()\n","##ene model geed baigaa shig"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"jCnLIDf1mNpP","executionInfo":{"status":"ok","timestamp":1711957325368,"user_tz":-540,"elapsed":422,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b5dad4ec-d40c-40ac-c9d7-1af3d85d41d1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Benz'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["### ' __init__ '"],"metadata":{"id":"dXlqbAY5m9SW"}},{"cell_type":"code","source":["class Bicycle():\n","    def __init__ (self, category):\n","        self._category=category\n","\n","    def category(self):\n","        return self._category\n","    ##ymar neg class, instance uuseh uyd shuud attribute(end bol jishee ni category) oruulad uguhud ashiglah ed\n"],"metadata":{"id":"PSnjghpsmFSw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b= Bicycle(\"Mountain bike\")"],"metadata":{"id":"doyY_AmMns9v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b.category()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"RzDDihhZntAH","executionInfo":{"status":"ok","timestamp":1711993442031,"user_tz":-540,"elapsed":5,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5f41439f-4479-4990-c83c-f5ea6a460bf5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Mountain bike'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["class Bicycle():\n","    def __init__(self, category):\n","        if category.isdigit():\n","            raise ValueError(\"Invalid bicycle type!\")\n","        self._category = category\n","\n","    def category(self):\n","        return self._category"],"metadata":{"id":"DswGy-Hpo3CN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c=Bicycle('213')"],"metadata":{"id":"vWQQL4cDo4L3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Bicycle():\n","\n","    def __init__(self , category, model):\n","        if category.isdigit():\n","            raise ValueError(\"Invalid Bicycle type!\")\n","        self._category = category\n","        self._model = model\n","    def category(self):\n","        return self._category\n","    def model(self):\n","        return self._model\n"],"metadata":{"id":"x4Ve18BgqFWL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c= Bicycle(\"Mountain bike\", \"Trek\")"],"metadata":{"id":"gu7fTD6AqwLK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c.category()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"fgMl1gVYqwOA","executionInfo":{"status":"ok","timestamp":1714810799598,"user_tz":-540,"elapsed":401,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1badb9ed-ee97-44d0-c8ef-a9b7509afe6d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Mountain bike'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["c.model()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"xfwiH4iWrTPE","executionInfo":{"status":"ok","timestamp":1714810754707,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b6be5188-ab51-4c10-a618-3ae9e3887224"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Trek'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["### LinkedList"],"metadata":{"id":"qw1g2OxdtE96"}},{"cell_type":"code","source":["class LinkedList():\n","    def __init__ (self, value=0 , next=None):\n","        self.value= value\n","        self.next=next"],"metadata":{"id":"fjuGMzSVrTUe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lst=LinkedList()"],"metadata":{"id":"FzlmTqW7rTe2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lst"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YjJTQNEes49N","executionInfo":{"status":"ok","timestamp":1711958905580,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"45a00d29-28a1-4a91-bd74-a356bdd72b18"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<__main__.LinkedList at 0x7f64d9de7940>"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["print(lst.value, lst.next)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EO5-j9_1s5AK","executionInfo":{"status":"ok","timestamp":1711958962369,"user_tz":-540,"elapsed":425,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bbe4766b-b6e9-42d8-9b45-df59d216e33c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0 None\n"]}]},{"cell_type":"markdown","source":["#Lesson 54 (OOP-Methods)"],"metadata":{"id":"hK9Q7SR0LFrU"}},{"cell_type":"markdown","source":["###Method"],"metadata":{"id":"S3k1haz0LPm-"}},{"cell_type":"code","source":["class Person():\n","    def __init__(self, name, job=None , pay=0):\n","        self.name= name\n","        self.job = job\n","        self.pay= pay\n","    def lastName(self):                        ##Method 1\n","        return self.name.split()[-1]\n","    def giveRaise(self, percent):              ##Method 2\n","        self.pay= int(self.pay*(1+percent))\n","bob= Person(\"Bob Smith\")\n","sue= Person(\"Sue Jones\", job='dev', pay=1000000)\n","print(bob.name, bob.pay)\n","print(sue.name, sue.pay)\n","print(bob.lastName(), sue.lastName())\n","print(bob)\n","sue.giveRaise(.10)\n","print(sue.pay)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DyRmyPMGtDcq","executionInfo":{"status":"ok","timestamp":1711968088749,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"69d7f244-36de-4b78-eeea-1735e460c823"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Bob Smith 0\n","Sue Jones 1000000\n","Smith Jones\n","<__main__.Person object at 0x7ba61c613040>\n","1100000\n"]}]},{"cell_type":"markdown","source":["###Operator overloading"],"metadata":{"id":"Zn17EWa1LRmX"}},{"cell_type":"code","source":["class Person():\n","    def __init__(self, name, job=None , pay=0):\n","        self.name= name\n","        self.job = job\n","        self.pay= pay\n","    def lastName(self):                        ##Method 1\n","        return self.name.split()[-1]\n","    def giveRaise(self, percent):              ##Method 2\n","        self.pay= int(self.pay*(1+percent))\n","    def __repr__(self):\n","        return '[Person: %s, %s]' % (self.name, self.pay)\n","        ##Ene bol shineer garch irsen shit genee\n","        ## {} iim haalt shaasnaa .format geed bdgtai maani tustei ym baina.\n","bob= Person(\"Bob Smith\")\n","sue= Person(\"Sue Jones\", job='dev', pay=1000000)\n","print(bob)\n","## __repr__ Ashiglaad uurchiltsun. tegeegu bol bob-iin bairshliig hevleh bsn\n","print(sue.name)\n","print(sue)\n","print(bob.lastName(), sue.lastName())\n","sue.giveRaise(.10)\n","print(sue.pay)"],"metadata":{"id":"A5oMi7IWLUWY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712022172529,"user_tz":-540,"elapsed":408,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"41e525b2-e276-42ec-b1c3-a7a964f451ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[Person: Bob Smith, 0]\n","Sue Jones\n","[Person: Sue Jones, 1000000]\n","Smith Jones\n","1100000\n"]}]},{"cell_type":"markdown","source":["### Class method vs Static method"],"metadata":{"id":"JH095gNJLUiB"}},{"cell_type":"markdown","source":["** Class method:**\n","\n"," -Class method ni instance uusgehdee uvurmuts baidlaar ashiglaj boloh method.\n","\n"," -Bid zaaval onoos ni tuhain hunii nasiig boddog func tusad ni bichelgui, objectoo uusgehdee shuud ashiglaj bolhooro ontslog.\n","\n"," **Static method:**\n","\n","-Static method todorhoilood ugtsun baihad, zaaval class-aar instance uusgeed baih shaardlagaguigeer tuhain class-iin func-iig ashiglah boloh davuu taltai."],"metadata":{"id":"qNs8sNAeQJFX"}},{"cell_type":"code","source":["from datetime import date\n","\n","class Person():\n","\n","    def __init__(self, name, age):\n","        self.name = name\n","        self.age = age\n","\n","    @classmethod\n","    def fromBirthYear(cls, name, year):\n","        return cls(name, date.today().year - year) # class method ashiglahdaa cls gej bnga ashiglana.\n","\n","    @staticmethod\n","    def isAdult(age):\n","        return age > 18\n","\n","person1 = Person('mayank', 21)\n","person2 = Person.fromBirthYear('mayank', 1996)\n","\n","print(person1.age)\n","print(person2.age)\n","\n","\n","print(Person.isAdult(22))  # static method-iig run hiihdee class-iin instance deer bish , class deer\n","                           # duudaj ajilluuldag.\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S8ejGarNQG5d","executionInfo":{"status":"ok","timestamp":1711969584475,"user_tz":-540,"elapsed":433,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"644fb8d0-dcdf-4e34-a603-58002bcb2127"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["21\n","28\n","True\n"]}]},{"cell_type":"markdown","source":["#Lesson 55 (OOP-GetterSetterDeleter)"],"metadata":{"id":"3Cp9aj9WejX1"}},{"cell_type":"markdown","source":["Bid instance-iin attribute ruu handah argaa hed heden argaar todorhoilj ugch boldog.\n","\n","-Getter: Attribute ruu handah uyd yaj ajillahiig zaana.\n","\n","-Setter: Attribute-d utga onooh uyd yaj ajillahiig zaana.\n","\n","-Deleter:Attribute-g ustgah gej oroldoh uyd yaj ajillahiig zaana.\n","\n","Edgeeriig property gej nerledeg."],"metadata":{"id":"BNh5ayGzer5N"}},{"cell_type":"code","source":["class Person:\n","    def __init__(self,first_name):\n","        self.first_name=first_name\n","        #Getter function\n","    @property\n","    def first_name(self):\n","        return self._first_name\n","        #Setter function\n","    @first_name.setter\n","    def first_name(self,value):\n","        if not isinstance(value,str):\n","            raise TypeError('Expected a string')\n","        self._first_name=value\n","        #Deleter function\n","    @first_name.deleter\n","    def first_name(self):\n","        raise AttributeError(\"Can't delete attribute\")"],"metadata":{"id":"3CP-loFYQG8b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a=Person(\"Guido\")"],"metadata":{"id":"6LEfoRcQQHk9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(a.first_name)\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8e22IUcpgn6v","executionInfo":{"status":"ok","timestamp":1714821126301,"user_tz":-540,"elapsed":358,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e7a37a3d-0525-4e8a-f490-9fda28d20197"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Guido\n","<__main__.Person object at 0x7bd4a4878c70>\n"]}]},{"cell_type":"code","source":["     del a.first_name"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":228},"id":"uKqidNXbgn_k","executionInfo":{"status":"error","timestamp":1711972602146,"user_tz":-540,"elapsed":432,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"31bbba9d-92d2-4752-c753-097288727992"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"Can't delete attribute","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-50ce9077a584>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mdel\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfirst_name\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-10-529840a3e5f5>\u001b[0m in \u001b[0;36mfirst_name\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     12\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfirst_name\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdeleter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mfirst_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Can't delete attribute\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: Can't delete attribute"]}]},{"cell_type":"markdown","source":["### Tootsoolol shaardagdsan attributes"],"metadata":{"id":"2Om5klTwhQIu"}},{"cell_type":"code","source":["import math\n","\n","class Circle:\n","    def __init__(self,radius):\n","        self.radius=radius\n","\n","    @property\n","    def area(self):\n","        return math.pi *self.radius**2\n","    @property\n","    def perimeter(self):\n","        return 2*math.pi * self.radius\n"],"metadata":{"id":"5oABOyvShMt7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c=Circle(4.0)"],"metadata":{"id":"dLcZpIMfhNx6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["c.radius"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9CHx5t-ThOFW","executionInfo":{"status":"ok","timestamp":1711973008381,"user_tz":-540,"elapsed":383,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"415859fb-0008-42c3-f829-59052a426580"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.0"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["c.perimeter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWuf0p5piv_t","executionInfo":{"status":"ok","timestamp":1711973017128,"user_tz":-540,"elapsed":460,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8afa8d49-84d0-4d3c-f1ac-c5abb174bc8b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25.132741228718345"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["c.area"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"POO_H9WhiwZt","executionInfo":{"status":"ok","timestamp":1711973023330,"user_tz":-540,"elapsed":523,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"964ccee4-6752-4765-ceee-717014c1538a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["50.26548245743669"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["#Lesson 56 (Inheritance)"],"metadata":{"id":"aLi88972EaP1"}},{"cell_type":"markdown","source":["##Parent class"],"metadata":{"id":"-9ltg7j0EgnI"}},{"cell_type":"code","source":["class Person:\n","    def __init__ (self, fname, lname, age):\n","        self.firstname=fname\n","        self.lastname=lname\n","        self.age=age\n","    def __repr__(self):\n","        return \"Ovog: {}\\nNer: {}\\nNas: {}\".format(self.lastname, self.firstname, self.age)"],"metadata":{"id":"uueSd1ekiwfE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Person('Guido', 'Van', 55)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g6gztRxHEjs6","executionInfo":{"status":"ok","timestamp":1714822422875,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"67857da4-c8f8-41c9-eb1d-e49faf334952"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ovog: Van\n","Ner: Guido\n","Nas: 55"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["##**Child class**"],"metadata":{"id":"fFDBnhdBEkpV"}},{"cell_type":"markdown","source":["###Override\n","\n","The child's **init()** function overrides the inheritence of the parent's **init()** function."],"metadata":{"id":"kD69UNfqEk8Q"}},{"cell_type":"code","source":["class Student(Person):\n","    ##Udamshuulj oruulj irj baigaa bol ehnii func buyu parent-iig haaltan dotor bichij baina.\n","\n","    def __init__(self, fname, lname, age, major):\n","        Person.__init__(self, fname, lname,age)\n","        self.major=major"],"metadata":{"id":"HD4uRyzLElJc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b=Student('John', 'Mike', 23, 'Maths')"],"metadata":{"id":"VP7B7SBxElLt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"65wcaLzyElOv","executionInfo":{"status":"ok","timestamp":1714822433481,"user_tz":-540,"elapsed":446,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"72d9b2fa-3fe2-4863-bf1a-061aa29750ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ovog: Mike\n","Ner: John\n","Nas: 23"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["b.major"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Qji467CGGqKW","executionInfo":{"status":"ok","timestamp":1712054541377,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a0d5b161-7529-43db-c4b7-349510d2a3c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Maths'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["b.firstname\n","##Suuliin code-n deer firstname gej bhgui ch, udamshuulj avsan parent func-d baigaa bolhoor ajillaj\n","## bolod baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"N0PEjZizGshL","executionInfo":{"status":"ok","timestamp":1712054542914,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"38585c57-13c1-474d-8c16-beb733106e6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'John'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["##Super() Function\n","\n","Python also has a super() function that will make child class inherit all the methods and properties from its parent:"],"metadata":{"id":"OQiazk0fHNei"}},{"cell_type":"code","source":["class Student(Person):\n","    def __init__(self, fname, lname, age,year):\n","        super().__init__(fname,lname,age)\n","        self.graduationyear=year\n","\n","    def welcome(self):\n","        print(\"Welcome\", self.firstname , self.lastname , \"to the class of\", self.graduationyear)\n"],"metadata":{"id":"R2SRH4a-G4Bb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=Student('Mike', 'Olsen', 25, 2019)"],"metadata":{"id":"qc8_ARYNHc_A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x.welcome()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jwy5JFoWHeaP","executionInfo":{"status":"ok","timestamp":1714822579660,"user_tz":-540,"elapsed":374,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"202a7d0c-67f8-4c8b-b701-528fdc730505"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hi Mike Olsen to the class of  2019\n"]}]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KdukBjJXGucR","executionInfo":{"status":"ok","timestamp":1714822583355,"user_tz":-540,"elapsed":315,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9e45e3de-189f-4c07-9a07-1c9b42570622"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ovog: Olsen\n","Ner: Mike\n","Nas: 25"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["##Polygon Base class"],"metadata":{"id":"y4mzRBbTHfB2"}},{"cell_type":"code","source":["class Polygon:\n","    def __init__(self, no_of_sides):\n","        self.n=no_of_sides\n","        self.sides= [0 for i in range(no_of_sides)]\n","\n","    def inputSides(self):\n","        self.sides=[float(input(\"Enter side\"+str(i+1)+ \":\"))for i in range(self.n)]\n","\n","    def dispSides(self):\n","        for i in range(self.n):\n","            print(\"Side\", i+1, \"is\", self.sides[i])"],"metadata":{"id":"Shk53JPXHfRx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Triangle child class"],"metadata":{"id":"Utj3O_0mJYQ3"}},{"cell_type":"code","source":["class Triangle(Polygon):\n","    def __init__ (self):\n","        Polygon.__init__(self,3)\n","    def findArea(self):\n","        a,b,c= self.sides\n","        s=(a+b+c)/2\n","        area=(s*(s-a)*(s-b)*(s-c))**0.5\n","        print('The area of the triangle is %0.2f' %area)\n"],"metadata":{"id":"EwJM0yuEHfUE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t=Triangle()"],"metadata":{"id":"FYKU4b6xJbXU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t.inputSides()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bx0igMctJbaT","executionInfo":{"status":"ok","timestamp":1716796272550,"user_tz":-540,"elapsed":5955,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cee29847-0f6c-46f3-91dd-38e6c2e2a5df"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Enter side1:2\n","Enter side2:4\n","Enter side3:5\n"]}]},{"cell_type":"code","source":["t.dispSides()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tpYSRPLfKurF","executionInfo":{"status":"ok","timestamp":1716796274585,"user_tz":-540,"elapsed":409,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"58ebf5fd-f40a-4209-e521-b92fe90069c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Side 1 is 2.0\n","Side 2 is 4.0\n","Side 3 is 5.0\n"]}]},{"cell_type":"code","source":["t.findArea()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kiczOhukKuuI","executionInfo":{"status":"ok","timestamp":1716796280440,"user_tz":-540,"elapsed":502,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"44aa3da1-792d-493c-be12-8eb4adabb802"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The area of the triangle is 3.80\n"]}]},{"cell_type":"code","source":["isinstance(t,Triangle)\n","##urd taliin huvisgach ni, ard tald bgaginha instance mun bval true"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jDUzqZSEHfW4","executionInfo":{"status":"ok","timestamp":1712034668982,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ad60667a-413d-4760-e14e-7026dc7af7b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["isinstance(t,Polygon)\n","##hediiger, polygon deer \"t\" gej bhgui ch udamshuulj avaad ajilluultsan bolhor true gej baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"akm1nhe2NLJ1","executionInfo":{"status":"ok","timestamp":1712034480747,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cb4ffcc2-f475-4f73-f080-f1f611e6b712"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["isinstance(t,int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_40l0lpLNPwW","executionInfo":{"status":"ok","timestamp":1712034751465,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8024da44-de5b-4252-f2a6-4ee3a53955e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["isinstance(t,object)\n","##Python hel deer buh huvisagch object turliinh gsn ug.\n","##Dangaara huvisagch gej bhgui."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H7MkcUHCN-38","executionInfo":{"status":"ok","timestamp":1712034752931,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f8287119-1d85-4088-8a6e-0dc92126050f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["issubclass(Polygon, Triangle)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sKae_x0nN-6p","executionInfo":{"status":"ok","timestamp":1712035079053,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"70f5c31e-9c5c-4ca2-afcb-3315fcf7a8e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["issubclass(Triangle,Polygon)\n","##Triangle ni Polygo-nii subclass mun uu? gej asuuj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U6F3jRFdOIea","executionInfo":{"status":"ok","timestamp":1712035076906,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"58a806af-b383-4b38-fbc3-1d8d5978244c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["isinstance(bool, int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyJDB-qAOIjC","executionInfo":{"status":"ok","timestamp":1712034758675,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e2482427-fa91-4219-b1d5-2b2e0b2f6497"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["# Lesson 57 (OOP- Operator ahin todorhoiloh)"],"metadata":{"id":"ADzaDUdhclRZ"}},{"cell_type":"code","source":["print(1+2)\n","print('Geeks'+ 'For')\n","print(3*4)\n","print(\"Geeks\"*4)"],"metadata":{"id":"j7oaE-T7clfN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712069919294,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4beb45d6-a67c-447f-c2b9-97eb8b99c76a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","GeeksFor\n","12\n","GeeksGeeksGeeksGeeks\n"]}]},{"cell_type":"code","source":["class A:\n","    def __init__(self,a):\n","        self.a=a\n","    def __add__(self,other):\n","        return self.a+other.a\n","ob1=A(1)\n","ob2=A(2)\n","ob3=A(\"Geeks\")\n","ob4=A(\"For\")\n","print(ob1+ob2)\n","print(ob3+ob4)\n","\n","##When you perform ob1 + ob2, it triggers the __add__ method of class A.\n","##In this method, self refers to ob1, and other refers to ob2.\n","##So, self.a refers to the value of a attribute of ob1, and other.a refers to the value of a attribute of ob2.\n","\n","\n","## aa bas zaavl other baigaad bh shaardlaga bhgui. yu ch bsn bolood shaana."],"metadata":{"id":"b6bBw7jKcliH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1725415535282,"user_tz":-540,"elapsed":609,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8d64fc31-747f-4f6b-c44f-d94d3fe9a6da"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","GeeksFor\n"]}]},{"cell_type":"code","source":["class complex:\n","    def __init__(self,a,b):\n","        ## a and b, representing the real and imaginary parts of a complex number respectively.\n","        self.a=a\n","        self.b=b\n","    def __add__(self,other):\n","        return self.a+other.a, self.b+other.b\n","    def __str__(self):\n","        return self.a , self.b\n","ob1=complex(1,2)\n","ob2=complex(8,3)\n","ob3=ob1+ob2\n","print(ob1+ob2)\n","print(ob3)\n","#self ni bodit heseg ruu ni handaad, other ni huurmag ruu ni shaagaad baina."],"metadata":{"id":"Y97DtWLGOTyg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712073672719,"user_tz":-540,"elapsed":382,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"68b7286d-a0fd-44d6-df76-80474e3efb43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(9, 5)\n","(9, 5)\n"]}]},{"cell_type":"code","source":["class A:\n","    def __init__(self,a):\n","        self.a=a\n","    def __gt__(self,other):    ## gt ni greater gedgiin tovchlol##\n","        if (self.a>other.a):\n","            return True\n","        else:\n","            return False\n","ob1=A(2)\n","ob2=A(3)\n","if (ob1>ob2):\n","    print(\"ob1 is greater than ob2\")\n","else:\n","    print(\"ob2 is greater than ob1\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9OuS4WQJaEVA","executionInfo":{"status":"ok","timestamp":1712072969921,"user_tz":-540,"elapsed":509,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6b731ce5-e880-440f-ec39-5e8b60edd1a2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ob2 is greater than ob1\n"]}]},{"cell_type":"code","source":["class Point:\n","    def __init__(self, x=0 , y=0):\n","        self.x=x\n","        self.y=y\n","    def __str__(self):\n","        return \"x={}, y={}\".format(self.x , self.y)"],"metadata":{"id":"nmVP6ufugZHu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["p1=Point(2,3)\n","print(p1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9i3b-s1qhU7J","executionInfo":{"status":"ok","timestamp":1712073408207,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"90b8cfc0-ef08-4518-bf05-9ecb5b0264c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=2, y=3\n"]}]},{"cell_type":"code","source":["class Point:\n","    def __init__(self, x=0 , y=0):\n","        self.x=x\n","        self.y=y\n","    def __str__(self):\n","        return \"x={}, y={}\".format(self.x , self.y)\n","\n","    def __add__ (self, other):\n","        x=self.x + other.x\n","        y=self.y + other.y\n","        return(Point(x,y))"],"metadata":{"id":"PVO9-EsXhU_R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["p1=Point(2,3)\n","p2=Point(1,4)\n","print(p2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hp7cQfY4hVpE","executionInfo":{"status":"ok","timestamp":1714828895033,"user_tz":-540,"elapsed":7,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0b02cffc-d271-4b74-da78-df4cb88fc48f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=1, y=4\n"]}]},{"cell_type":"code","source":["print(p1+p2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z4fF4aUYhVr5","executionInfo":{"status":"ok","timestamp":1714828895033,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d118a356-e202-4e3c-ea9c-19eeee354770"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x=3, y=7\n"]}]},{"cell_type":"markdown","source":["#Lesson 58 (ProblemSolving-- Find the Torsional Angle)"],"metadata":{"id":"o0sCw5B8aEtI"}},{"cell_type":"code","source":["import math\n","\n","class Points(object):\n","    def __init__(self, x, y, z):\n","        self.x=x\n","        self.y=y\n","        self.z=z\n","    def __sub__(self, no):\n","        x=self.x - no.x\n","        y=self.y - no.y\n","        z=self.z - no.z\n","        return Points(x, y, z)\n","    def dot(self, no):\n","        x=(self.x)*(no.x)\n","        y=(self.y)*(no.y)\n","        z=(self.z)*(no.z)\n","        return x+y+z\n","\n","    def cross(self, no):\n","        x=(self.y)*(no.z)- self.z*no.y\n","        y=(self.x)*(no.z)- self.z*no.x\n","        z=(self.x)*(no.y)- self.y*no.x\n","        return Points(x , y,  z)\n","    def absolute(self):\n","        return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)\n","\n","if __name__ == '__main__':\n","    points = list()\n","    for i in range(4):\n","        a = list(map(float, input().split()))\n","        points.append(a)\n","\n","    a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])\n","    x = (b - a).cross(c - b)\n","    y = (c - b).cross(d - c)\n","    angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))\n","\n","    print(\"%.2f\" % math.degrees(angle))\n","\n","##Hackerrank-- Python--class dotor baigaa."],"metadata":{"id":"Z3DWxFwkhUDE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Lesson 59 (Project---Complex toon class uusgej, operatoruuiig ni dahin todorhoiloh)"],"metadata":{"id":"b4lZP55kYBB_"}},{"cell_type":"code","source":["import math\n","\n","class Complex(object):\n","    def __init__(self, real, imaginary):\n","        self.real=real\n","        self.imaginary=imaginary\n","\n","    def __add__(self, no):\n","        real=self.real+no.real\n","        imaginary=self.imaginary+no.imaginary\n","        return Complex(real, imaginary)\n","\n","    def __sub__(self, no):\n","        real=self.real-no.real\n","        imaginary=self.imaginary-no.imaginary\n","        return Complex(real, imaginary)\n","\n","    def __mul__(self, no):\n","        real = self.real * no.real - self.imaginary * no.imaginary\n","        imaginary = self.real * no.imaginary + self.imaginary * no.real\n","        return Complex(real, imaginary)\n","\n","    def __truediv__(self, no):\n","        y= self * Complex(no.real, - no.imaginary)\n","        x=float(no.real**2+no.imaginary**2)\n","        real= y.real/x\n","        imaginary=y.imaginary/x\n","        return Complex(real, imaginary)\n","\n","    def mod(self):\n","        return Complex(math.sqrt(self.real**2+self.imaginary**2),0)\n","\n","    def __str__(self):\n","        if self.imaginary == 0:\n","            result = \"%.2f+0.00i\" % (self.real)\n","        elif self.real == 0:\n","            if self.imaginary >= 0:\n","                result = \"0.00+%.2fi\" % (self.imaginary)\n","            else:\n","                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n","        elif self.imaginary > 0:\n","            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n","        else:\n","            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n","        return result\n","\n","\n","if __name__ == '__main__':\n","    c = map(float, input().split())\n","    d = map(float, input().split())\n","    x = Complex(*c)\n","    y = Complex(*d)\n","    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')"],"metadata":{"id":"YnFvAx30aHoB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Lesson 60 (Project---class--salary computing)"],"metadata":{"id":"yAEzNMirYPSe"}},{"cell_type":"code","source":["from datetime import datetime\n","import math\n","\n","class Salary():\n","    def __init__(self, **kwargs):\n","        currentMonth=datetime.now().month\n","        dayList=[22,19,19,22,22,21,19,23,21,22,22,20]\n","        self._workDays=dayList[currentMonth-1]\n","        self._salary=kwargs['salary']\n","        self._worked_days=kwargs['days']\n","\n","    def social_insurance_tax(self):\n","        return self._salary*0.115 if self._salary<3200000 else 368000\n","\n","    def individual_income_tax(self):\n","        s=self._salary-self.social_insurance_tax()\n","        if s<= 200000:\n","            return 0\n","        elif s>= 3000000:\n","            return s* .1\n","        elif s>=2500000:\n","            return s*0.1-11666.66\n","        elif s>=2000000:\n","            return s* 0.1-13333.33\n","        elif s>=1500000:\n","            return s* 0.1-15000\n","        elif s>=1000000:\n","            return s* 0.1-16666.66\n","        elif s>=500000:\n","            return s*0.01-18333.33\n","        else:\n","            return s*0.1-20000\n","    def total_tax(self):\n","        return math.ceil(self.social_insurance_tax()+self.individual_income_tax())\n","    def estimate_salary(self):\n","        return self._worked_days*((self._salary-self.total_tax())/self._workDays)\n","\n","if __name__ == '__main__':\n","    a=int(input(\"Tanii sariin tsalin:\"))\n","    b=int(input(\"Tanii ajillasan honog:\"))\n","    s=Salary(salary=a, days=b)\n","    print(s.estimate_salary(), s.total_tax())\n"],"metadata":{"id":"w5Qj_TjCaICS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712115490085,"user_tz":-540,"elapsed":5904,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ecc03bec-6bb7-4ea0-c58e-095dd7776ace"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Tanii sariin tsalin:300000\n","Tanii ajillasan honog:20\n","235409.0909090909 41050\n"]}]},{"cell_type":"markdown","source":["#Lesson61 (Statistics-Mean, Median,Mode)"],"metadata":{"id":"yeZjjMlsYQ3d"}},{"cell_type":"markdown","source":["##Mean\n","Buh elementuudiin dundjiig ingej nerlene. **bold text**\n"],"metadata":{"id":"FOeG-sAKOm9i"}},{"cell_type":"code","source":["arr=[-100,97,5,2,93,2,500,9,6,8,1,7,8,10]\n","print(arr)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HgKxvKYUOmZ4","executionInfo":{"status":"ok","timestamp":1714651299113,"user_tz":-540,"elapsed":616,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"41799652-f1f9-4143-f806-d34dd23a00c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-100, 97, 5, 2, 93, 2, 500, 9, 6, 8, 1, 7, 8, 10]\n"]}]},{"cell_type":"code","source":["n=len(arr)\n","print(n)"],"metadata":{"id":"_p-NznTnYROm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712219449006,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"875bd700-e827-425b-a4a0-9402e247776b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["14\n"]}]},{"cell_type":"code","source":["s=sum(arr)\n","print(s)"],"metadata":{"id":"LgfxWB-oYRRP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712219459956,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"fef1dffb-7350-40ee-cd09-0420c9ee7b07"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["648\n"]}]},{"cell_type":"code","source":["print(\"Mean of {} is:{}\".format(arr,s/n))"],"metadata":{"id":"gUvwzG9vPbeY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712219485863,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1e65aac2-acd3-4111-b312-9acb68604dc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean of [-100, 97, 5, 2, 93, 2, 500, 9, 6, 8, 1, 7, 8, 10] is:46.285714285714285\n"]}]},{"cell_type":"markdown","source":["##Median"],"metadata":{"id":"15Md4wdNPGI4"}},{"cell_type":"markdown","source":["Buh elementiig des daraallan erembelsenii daraa, yg dund ni baigaa elementiig median gej nerledeg."],"metadata":{"id":"UTEFPiNiPRVc"}},{"cell_type":"code","source":["err=[1,2,3,8,11,10,6,6,7,8,5,9,0,1,2,4]"],"metadata":{"id":"wTmsZ0FqRfXj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["err.sort()\n","print(err)"],"metadata":{"id":"uo9f7Ev8PGUi","executionInfo":{"status":"ok","timestamp":1714651284736,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"16f971a4-a416-4025-acd4-ddcf9103201d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 8, 8, 9, 10, 11]\n"]}]},{"cell_type":"code","source":["6//2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J2fPAH5RIKYH","executionInfo":{"status":"ok","timestamp":1714651285260,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"433852cd-c3d5-449c-c343-ba30b0d5a18e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["n=len(err)\n","print(len(err))"],"metadata":{"id":"l9Cinvr6UCiH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714651285781,"user_tz":-540,"elapsed":8,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b4e96b77-ef0b-4edc-d53d-49580c655420"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["16\n"]}]},{"cell_type":"code","source":["if n%2 !=0:\n","    print(err[n//2])\n","else:\n","    print((err[n//2]+err[n//2-1])/2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U9Zlo7ImRJ-X","executionInfo":{"status":"ok","timestamp":1714651286219,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"154208cd-bbba-40b6-e1f7-2839e7661827"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5.5\n"]}]},{"cell_type":"markdown","source":["##Mode\n","Buh elementees hamgiin olon davtagdsan shit"],"metadata":{"id":"h0GGuf7EQLhV"}},{"cell_type":"code","source":["arr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v_ir_prbP9I9","executionInfo":{"status":"ok","timestamp":1714651303629,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"137a1356-5ec1-408e-b1a5-7d6c2484303d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[-100, 97, 5, 2, 93, 2, 500, 9, 6, 8, 1, 7, 8, 10]"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["d={}\n","for el in arr:\n","    if el in d:\n","        d[el] +=1\n","    else:\n","        d[el]=1\n","print(d)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NxHRuTVCQSKP","executionInfo":{"status":"ok","timestamp":1714651305162,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"addbf7dc-eb36-4486-d70e-d74d7e40ea5c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{-100: 1, 97: 1, 5: 1, 2: 2, 93: 1, 500: 1, 9: 1, 6: 1, 8: 2, 1: 1, 7: 1, 10: 1}\n"]}]},{"cell_type":"code","source":["k=max(d.values())\n","print(k)"],"metadata":{"id":"UgYnjiB2S2Gi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714651306171,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6b8999ec-7ab3-495d-e463-e3a1e6483773"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"code","source":["lst=[]\n","for ks,vals in d.items():\n","    if vals==k:\n","        lst.append(ks)\n","print(lst)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d1YDmWfhQSQN","executionInfo":{"status":"ok","timestamp":1714651405410,"user_tz":-540,"elapsed":422,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0673d1c6-2d1e-42de-f0cb-bce57b11ef05"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 8]\n"]}]},{"cell_type":"code","source":["print(min(lst))\n","print(max(lst))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7YmBvjYfSZ4T","executionInfo":{"status":"ok","timestamp":1714651405809,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7bbbe2a1-2b12-4b2b-938f-8ba43e9acaee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","8\n"]}]},{"cell_type":"markdown","source":["#Lesson 62 (Weighted Mean)"],"metadata":{"id":"Ty5SI7VbQSb3"}},{"cell_type":"code","source":["x=[1,3,5]\n","w=[2,4,6]"],"metadata":{"id":"vgpvXYmNRxoi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["(x[0]*w[0]+ x[1]*w[1]+x[2]*w[2])/sum(w)\n","##Ene bol ugaasaa tomyo baigaashu"],"metadata":{"id":"Xmcp9yP8Rxra","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712238917572,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c946d206-adc1-4c27-94e3-af63a4824cde"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.6666666666666665"]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["Jin uguh"],"metadata":{"id":"d3UaUf7xZLci"}},{"cell_type":"code","source":["category_weight={\n","    'homework':25,\n","    'quiz':30,\n","    'test':10,\n","    'finalExam':35\n","}"],"metadata":{"id":"S4GdQ_HCRx3A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Onoo uguh"],"metadata":{"id":"z2f3iyHOZNoK"}},{"cell_type":"code","source":["students=[{\n","    'name': 'Bat',\n","    'homework': 88,\n","    'quiz': 71,\n","    'test' :97,\n","    'finalExam':90\n","},\n","{\n","    'name': 'Dorj',\n","    'homework': 90,\n","    'quiz': 100,\n","    'test' :97,\n","    'finalExam':76\n","},\n"," {\n","    'name': 'Bold',\n","    'homework': 70,\n","    'quiz': 80,\n","    'test' :70,\n","    'finalExam':90\n","}]"],"metadata":{"id":"WyTOO4wKZOHG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Etssiin onoo tsootsoh"],"metadata":{"id":"BEmRc846bPZG"}},{"cell_type":"code","source":["for student in students:\n","    print(\"Suragch: {}\\tNiit onoo: {}\".format(student['name'],(student['homework']*category_weight['homework']+student['quiz']*category_weight['quiz']+student['test']*category_weight['test']+student['finalExam']*category_weight['finalExam'])/sum(category_weight.values())))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qszm5ykBZOJj","executionInfo":{"status":"ok","timestamp":1712239856642,"user_tz":-540,"elapsed":415,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e7ece0aa-0102-4c9e-dbd2-5fb96e0c09ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Suragch: Bat\tNiit onoo: 84.5\n","Suragch: Dorj\tNiit onoo: 88.8\n","Suragch: Bold\tNiit onoo: 80.0\n"]}]},{"cell_type":"markdown","source":["#Lesson 63(Quartiles)"],"metadata":{"id":"DUuI4mfDNMND"}},{"cell_type":"code","source":["n = int(input())\n","ugugdul = list(map(int, input().split(',')))\n","ugugdul.sort()\n","lower_half = []\n","upper_half = []\n","\n","if n % 2 != 0:\n","    quartile2 = ugugdul[n // 2]\n","\n","    lower_half = ugugdul[: n // 2 ]\n","    upper_half = ugugdul[n // 2+1 :]\n","else:\n","    quartile2 = (ugugdul[n // 2] + ugugdul[n // 2 - 1]) / 2\n","\n","    lower_half = ugugdul[:n // 2 ]\n","    upper_half = ugugdul[n // 2:]\n","\n","lower_half.sort()\n","\n","if len(lower_half)%2 != 0:\n","    quartile1 = lower_half[len(lower_half) // 2]\n","else:\n","    quartile1 = (lower_half[len(lower_half) // 2] + lower_half[len(lower_half) // 2 - 1]) / 2\n","\n","upper_half.sort()\n","\n","urt = len(upper_half)\n","\n","if urt % 2 != 0:\n","    quartile3 = upper_half[urt // 2]\n","else:\n","    quartile3 = (upper_half[urt // 2 - 1] + upper_half[urt // 2]) / 2\n","\n","print(ugugdul)\n","print(lower_half)\n","print(upper_half)\n","print(quartile1)\n","print(quartile2)\n","print(quartile3)"],"metadata":{"id":"uoLBoQ0gNL7m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714652241027,"user_tz":-540,"elapsed":16173,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a0bd4fe3-b4db-4058-ab84-c32efc25bbba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["13\n","1,3,4,5,6,36,78,14,57,87,96,101,121\n","[1, 3, 4, 5, 6, 14, 36, 57, 78, 87, 96, 101, 121]\n","[1, 3, 4, 5, 6, 14]\n","[57, 78, 87, 96, 101, 121]\n","4.5\n","36\n","91.5\n"]}]},{"cell_type":"code","source":["1##Saijruulsan zagvar\n","n = int(input())\n","ugugdul = list(map(int, input().split(',')))\n","ugugdul.sort()\n","\n","lower_half = ugugdul[:n//2]\n","upper_half = ugugdul[n//2 + n % 2:]\n","\n","quartile2 = (ugugdul[n//2] + ugugdul[(n-1)//2]) / 2\n","\n","if len(lower_half) % 2 != 0:\n","    quartile1 = lower_half[len(lower_half) // 2]\n","else:\n","    quartile1 = (lower_half[len(lower_half) // 2 - 1] + lower_half[len(lower_half) // 2]) / 2\n","\n","if len(upper_half) % 2 != 0:\n","    quartile3 = upper_half[len(upper_half) // 2]\n","else:\n","    quartile3 = (upper_half[len(upper_half) // 2 - 1] + upper_half[len(upper_half) // 2]) / 2\n","\n","print(quartile1)\n","print(quartile2)\n","print(quartile3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e3aOpEKMlAii","executionInfo":{"status":"ok","timestamp":1712298997785,"user_tz":-540,"elapsed":4203,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7b752a0f-046e-4adb-9b71-28e13506fd23"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["12\n","1,3,4,5,6,36,78,14,57,87,96,101\n","4.5\n","25.0\n","82.5\n"]}]},{"cell_type":"code","source":["#ushuu saijruulalt\n","def median(nums):\n","    n=len(nums)\n","    if n%2 ==0:\n","        return(nums[n//2]+nums[n//2-1])/2\n","    else:\n","        return nums[n//2]\n","\n","def quart(n,nums):\n","    print(median(nums[:n//2]))\n","    print(median(nums))\n","    if n%2==0:\n","        print(median(nums[n//2:]))\n","    else:\n","        print(median(nums[n//2+1:]))\n","\n","n=int(input())\n","arr=list(map(int, input().split(',')))\n","arr.sort()\n","quart(n,arr)"],"metadata":{"id":"KC_1YMx9NMfc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712299012114,"user_tz":-540,"elapsed":7465,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"12e487dc-9f94-49eb-cc3f-46403de6f9ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["12\n","1,3,4,5,6,36,78,14,57,87,96,101\n","4.5\n","25.0\n","82.5\n"]}]},{"cell_type":"markdown","source":["#Lesson 64 (Interquartile Range Outlier)"],"metadata":{"id":"Mwaipoiudyly"}},{"cell_type":"code","source":["def median(nums):\n","    n=len(nums)\n","    if n%2 ==0:\n","        return(nums[n//2]+nums[n//2-1])/2\n","    else:\n","        return nums[n//2]\n","\n","def quartile(nums):\n","    n=len(nums)\n","    l=[]\n","    l.append(median(nums[:n//2]))\n","    l.append(median(nums))\n","    if n%2==0:\n","        l.append(median(nums[n//2:]))\n","    else:\n","        l.append(median(nums[n//2+1:]))\n","    return l"],"metadata":{"id":"sCmYGeECdy-T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr=[2,3,1,10,9,100,299,-1000,-1,-22,-3,3,-2,5,-999,298,297]"],"metadata":{"id":"68JgaA9xdzAc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr.sort()\n","print(arr)\n","print(len(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"feKclf0SdzC6","executionInfo":{"status":"ok","timestamp":1714701250560,"user_tz":-540,"elapsed":14,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4c2ce2ce-40f8-4816-fef5-3684d07f4a06"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-1000, -999, -22, -3, -2, -1, 1, 2, 3, 3, 5, 9, 10, 100, 297, 298, 299]\n","17\n"]}]},{"cell_type":"code","source":["q1,q2,q3=quartile(arr)\n","print(q1,q2,q3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLqmNzGldzNt","executionInfo":{"status":"ok","timestamp":1714701250947,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"01255c60-976d-476d-b25f-2ff8a08a9619"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-2.5 3 55.0\n"]}]},{"cell_type":"code","source":["InterRange=q3-q1\n","print(InterRange)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TtV34Gx9E74p","executionInfo":{"status":"ok","timestamp":1714701251402,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2b78fedc-264f-4f62-8aa9-438dd9099996"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["57.5\n"]}]},{"cell_type":"code","source":["for el in arr:\n","    if el<q2-InterRange or el>q3+InterRange:\n","        print(\"{} is a outlier.\".format(el))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vsfyHpkkFEQ6","executionInfo":{"status":"ok","timestamp":1714701251909,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bf7dffab-faac-4a34-8eb2-4c5c09585797"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-1000 is a outlier.\n","-999 is a outlier.\n","297 is a outlier.\n","298 is a outlier.\n","299 is a outlier.\n"]}]},{"cell_type":"markdown","source":["#Lesson 65 (Standart Deviation)"],"metadata":{"id":"Od2QGUQsdzb3"}},{"cell_type":"markdown","source":["##Ih toonii onol\n","gedeg ni negen turshiltiig mash olon udaa hiigeed, garsan ur dung ni tootsooloh arga ym."],"metadata":{"id":"z3seOaTSIJc-"}},{"cell_type":"code","source":["arr=[1,1,0,0,1,0,1,0,0,0,0,1,0,1,0,1,0,0]\n","n=len(arr)\n","print(n)\n","##End 1-eer hojson, 0-eer yalagdsan utgiig temdeglej baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AwQTcogmdzvb","executionInfo":{"status":"ok","timestamp":1712302304099,"user_tz":-540,"elapsed":424,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"3467385e-55e2-4778-c249-60266620c8c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["18\n"]}]},{"cell_type":"markdown","source":["##Expected Value\n","Toon tarhaltiin dundaj utgiig ni expected value buyu, turshiltiin utga gej nerledeg."],"metadata":{"id":"ZslU443LIbVW"}},{"cell_type":"code","source":["mu=sum(arr)/n\n","print(mu)\n","##tegeheer ene ni hojih magadlal gesen ug ym."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-3xCIocRdzxl","executionInfo":{"status":"ok","timestamp":1712302306955,"user_tz":-540,"elapsed":393,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"874f6d57-5eac-4a8f-d751-ab8ee8faad3e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.3888888888888889\n"]}]},{"cell_type":"markdown","source":["##Variance\n","Toon tarhaltiin dalaitsiig Variance gej nerledeg."],"metadata":{"id":"DO8ILsRVIrsz"}},{"cell_type":"code","source":["s=0\n","for x in arr:\n","    s+= (x-mu) **2\n","print(s/n)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzmM0HfHIXVO","executionInfo":{"status":"ok","timestamp":1712302313023,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"efa83040-f8df-4063-98b5-2043d6926d47"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.23765432098765438\n"]}]},{"cell_type":"markdown","source":["##Standart Deviation\n","Ene ni tarhaltiin hazailt buyu standart hazailt ym."],"metadata":{"id":"I6ymC_dBIzaM"}},{"cell_type":"code","source":["import math\n","print(math.sqrt(s/n))\n","##Hojih magadlal her ih savalj buig ni haruulj baina"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1jEd4EleBIT","executionInfo":{"status":"ok","timestamp":1712302315017,"user_tz":-540,"elapsed":407,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7963b23c-5905-40a1-8986-fe0543da6d2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.4874980215217846\n"]}]},{"cell_type":"markdown","source":["#Lesson 66 (Matpolib--Introduction)"],"metadata":{"id":"XUy_P8zVeBjq"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"4ioywX41eBx_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["year=[1960,1970,1980,1990,2000,2010]\n","pop=[0.995,1.279,1.69,2.184,2.397,2.72]"],"metadata":{"id":"RSw9snbpeB2w"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Line plot"],"metadata":{"id":"iLw1-V8uNUqR"}},{"cell_type":"code","source":["plt.plot(year,pop)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"7QKULVPBeB58","executionInfo":{"status":"ok","timestamp":1714701621219,"user_tz":-540,"elapsed":642,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"270de1ed-1631-4a64-a3be-014cf8682c82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f707c3970d0>]"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.show()\n","\n","#Ene bol colab deer l shuud ajillaad baigaa bolohoos VS ntr deer bol haruulku. Tiimes ene show()-iig\n","# bichij baij l harj chadna gesen ug."],"metadata":{"id":"2nVH2j8GGoxV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Scatter Plot"],"metadata":{"id":"UEFy7w2WNRE4"}},{"cell_type":"code","source":["plt.scatter(year,pop)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"eWy6ZJfiGoz-","executionInfo":{"status":"ok","timestamp":1714701633040,"user_tz":-540,"elapsed":865,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1889981e-8900-46a0-d94a-b31d806821b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f707c2c0f70>"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["gdp_cap=[974.5803384,5937.029525999998,6223.367465,12779.37964,34435.367439999995,36126.4927,1391.253792,33692.60508,1441.284873,3822.137084,7446.298803,12569.85177,9065.800825,10680.79282,1217.032994,430.0706916,1713.778686,2042.09524]"],"metadata":{"id":"wITuJyEFGo2M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["life_exp=[43.828,76.423,72.301,42.731,75.32,81.235,79.829,75.635,64.062,79.441,56.728,65.554,74.852,50.728,72.39,73.005,52.295,49.58]"],"metadata":{"id":"NfZMVoeMNkap"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(gdp_cap), len(life_exp))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EGJ0DwuNNkdX","executionInfo":{"status":"ok","timestamp":1712303407254,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"369704b1-5477-4735-db45-46a6c3df10cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["18 18\n"]}]},{"cell_type":"code","source":["plt.scatter(gdp_cap,life_exp)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"1YRCCkOjNkft","executionInfo":{"status":"ok","timestamp":1712303408411,"user_tz":-540,"elapsed":607,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f86cc3b5-86e8-4d10-a106-711c4459009c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x79e05b811a80>"]},"metadata":{},"execution_count":115},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.xscale('log')\n","plt.scatter(gdp_cap,life_exp)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"id":"SgwNP9xKNkiM","executionInfo":{"status":"ok","timestamp":1712303408940,"user_tz":-540,"elapsed":534,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d480bb1b-57bd-4b8a-af9f-9c93002bde66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x79e05bda69e0>"]},"metadata":{},"execution_count":116},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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c7Vnz54RzznzzDM1bdo07d69e9jjDodDWVlZYRsAAEhelgacXnbZZdq5c2fYvk8//VQFBQUjnvPFF1/owIEDcrvp/4MZ3AYGgPhmKXysXr1al156qZ566inddNNNamlp0YsvvqgXX3xRknTo0CHV1taqqqpKLpdLHR0deuCBB/TNb35TCxcujMo3AByPha4AIP5ZGvMhSW+//baqq6u1a9cuFRYWas2aNVq+fLkk6X//+5+uv/56/eMf/1Bvb688Ho+uueYaPfHEE8rLyxvT9a30GQHHG1zo6sQf6MF7HozAB4DoidqAUxMIH4jEQCCo+U+/N+J6E4OTHn344FV0wQBAFERtwCkQr1joCgASB+EDSYGFrgAgcRA+kBRY6AoAEgfhA0lhcKGrkUZz2HTsqRcWugKA2CN8ICkMLnQlaUgAYaErAIgvhA8kDRa6AoDEYGmSMSDeVRS7dXWRixlOASCOET6QdOxpNpXNzIl1GQCAEdDtAgAAjCJ8AAAAowgfAADAKMIHAAAwivABAACMInwAAACjCB8AAMAowgcAADCK8AEAAIwifAAAAKMIHwAAwCjCBwAAMIrwAQAAjCJ8AAAAowgfAADAKMIHAAAwivABAACMInwAAACjCB8AAMAowgcAADCK8AEAAIwifAAAAKMIHwAAwCjCBwAAMIrwAQAAjLIcPr788kstXbpUOTk5mjJlimbPnq2PP/44dDwYDOrRRx+V2+3WlClTVF5erl27dk1o0QAAIHFZCh///e9/ddlll+mUU07RO++8o/b2dv385z/XaaedFmrz05/+VL/61a/0wgsv6KOPPtI3vvENLVy4UP39/RNePAAASDy2YDAYHGvjhx56SH/729/017/+ddjjwWBQHo9H999/v9auXStJ8nq9ysvL08svv6ybb755yDl+v19+vz/02ufzKT8/X16vV1lZWVa/HwAAEAM+n09Op3NMn9+W7ny89dZbmjdvnhYvXqzc3FxdeOGF2rBhQ+h4Z2enuru7VV5eHtrndDpVWlqq5ubmYa9ZV1cnp9MZ2vLz862UBAAAEoyl8PHvf/9b69ev11lnnaU//elPWrFihe677z698sorkqTu7m5JUl5eXth5eXl5oWMnqq6ultfrDW179+6N5PsAAAAJYpKVxoFAQPPmzdNTTz0lSbrwwgvV1tamF154QcuWLYuoAIfD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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##Histogram\n","\n","-Datanii talaar yurunhii oilgolttoi boloh\n","\n","-Tarhaltiig ni harah"],"metadata":{"id":"xgjTrKDfPeHM"}},{"cell_type":"code","source":["values=[1,2,1,5,3,4,5,2,1,3,4,5,1,2,8]"],"metadata":{"id":"iwRNfKv7Nkkd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.hist(values,bins=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"NMMdyzQkPfa3","executionInfo":{"status":"ok","timestamp":1712303605514,"user_tz":-540,"elapsed":1262,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7ce3a8db-323d-4f0c-dc0a-2d8ff181db29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([9., 5., 1.]),\n"," array([1.        , 3.33333333, 5.66666667, 8.        ]),\n"," <BarContainer object of 3 artists>)"]},"metadata":{},"execution_count":118},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAhYAAAGdCAYAAABO2DpVAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAVqklEQVR4nO3df6yWBf3/8ffhEEeywxHQYxA/NQsFNBUypF9OszlkOjfTho1ga/04CshycmxKzOHBrTlaNgRbSEvAtkLNpqYsZK6cBzCTWoBZeqYptewcxHWsc67vH9919jkh1o3vc1/cnMdju/84F/d97td9j8nT677PueuKoigCACDBkLIHAADHDmEBAKQRFgBAGmEBAKQRFgBAGmEBAKQRFgBAGmEBAKQZWu077O3tjVdeeSUaGxujrq6u2ncPAByBoijiwIEDMXbs2Bgy5PDnJaoeFq+88kqMHz++2ncLACTo6OiIcePGHfbPqx4WjY2NEfH/h40YMaLadw8AHIGurq4YP35837/jh1P1sPj3yx8jRowQFgBQY/7b2xi8eRMASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0Vf/Y9IE0adnPyp7AMehPq+aUPQGgZjhjAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQBphAQCkERYAQJqKwqKnpyduvvnmmDx5cgwfPjxOPfXUuPXWW6MoioHaBwDUkKGVXPn222+PNWvWxIYNG2Lq1KmxY8eOWLBgQTQ1NcWiRYsGaiMAUCMqCotf/vKXcdlll8WcOXMiImLSpEmxadOmePrppwdkHABQWyp6KeT888+PrVu3xt69eyMi4tlnn40nn3wyLrnkksPepru7O7q6uvpdAIBjU0VnLJYtWxZdXV0xZcqUqK+vj56enli5cmXMmzfvsLdpa2uLFStWvOuhAMDRr6IzFj/60Y/i3nvvjY0bN8auXbtiw4YN8a1vfSs2bNhw2Nu0trZGZ2dn36Wjo+NdjwYAjk4VnbG44YYbYtmyZXH11VdHRMT06dPjxRdfjLa2tpg/f/7b3qahoSEaGhre/VIA4KhX0RmLN998M4YM6X+T+vr66O3tTR0FANSmis5YzJ07N1auXBkTJkyIqVOnxjPPPBN33HFHLFy4cKD2AQA1pKKw+M53vhM333xzfO1rX4v9+/fH2LFj48tf/nLccsstA7UPAKghFYVFY2NjrF69OlavXj1AcwCAWuazQgCANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANMICAEgjLACANBWHxcsvvxzXXHNNjB49OoYPHx7Tp0+PHTt2DMQ2AKDGDK3kyq+//nrMnj07Lrjggnj44YfjpJNOin379sXIkSMHah8AUEMqCovbb789xo8fH+vXr+87Nnny5PRRAEBtquilkAcffDBmzJgRV155ZTQ3N8fZZ58dd99990BtAwBqTEVh8cILL8SaNWvitNNOi0cffTS++tWvxqJFi2LDhg2HvU13d3d0dXX1uwAAx6aKXgrp7e2NGTNmxG233RYREWeffXbs3r077rrrrpg/f/7b3qatrS1WrFjx7pcCAEe9is5YjBkzJs4444x+x04//fR46aWXDnub1tbW6Ozs7Lt0dHQc2VIA4KhX0RmL2bNnx549e/od27t3b0ycOPGwt2loaIiGhoYjWwcA1JSKzlhcf/318dRTT8Vtt90Wzz//fGzcuDHWrVsXLS0tA7UPAKghFYXFzJkzY8uWLbFp06aYNm1a3HrrrbF69eqYN2/eQO0DAGpIRS+FRERceumlcemllw7EFgCgxvmsEAAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgjbAAANIICwAgzdCyB8DRbtKyn5U9gWPUn1bNKXsCpHPGAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTCAgBIIywAgDTvKixWrVoVdXV1sWTJkqQ5AEAtO+KwaG9vj7Vr18aZZ56ZuQcAqGFHFBZvvPFGzJs3L+6+++4YOXJk9iYAoEYdUVi0tLTEnDlz4qKLLvqv1+3u7o6urq5+FwDg2DS00hts3rw5du3aFe3t7f/T9dva2mLFihUVDwMAak9FZyw6Ojpi8eLFce+998Zxxx33P92mtbU1Ojs7+y4dHR1HNBQAOPpVdMZi586dsX///jjnnHP6jvX09MT27dvjzjvvjO7u7qivr+93m4aGhmhoaMhZCwAc1SoKiwsvvDCee+65fscWLFgQU6ZMiRtvvPGQqAAABpeKwqKxsTGmTZvW79jxxx8fo0ePPuQ4ADD4+M2bAECain8q5D9t27YtYQYAcCxwxgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASCMsAIA0wgIASFNRWLS1tcXMmTOjsbExmpub4/LLL489e/YM1DYAoMZUFBZPPPFEtLS0xFNPPRWPPfZY/POf/4yLL744Dh48OFD7AIAaMrSSKz/yyCP9vr7nnnuiubk5du7cGZ/85CdThwEAtaeisPhPnZ2dERExatSow16nu7s7uru7+77u6up6N3cJABzFjvjNm729vbFkyZKYPXt2TJs27bDXa2tri6ampr7L+PHjj/QuAYCj3BGHRUtLS+zevTs2b978jtdrbW2Nzs7OvktHR8eR3iUAcJQ7opdCrr322njooYdi+/btMW7cuHe8bkNDQzQ0NBzROACgtlQUFkVRxHXXXRdbtmyJbdu2xeTJkwdqFwBQgyoKi5aWlti4cWM88MAD0djYGK+++mpERDQ1NcXw4cMHZCAAUDsqeo/FmjVrorOzMz796U/HmDFj+i733XffQO0DAGpIxS+FAAAcjs8KAQDSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAII2wAADSCAsAIM3QsgcADFaTlv2s7Akcg/60ak6p9++MBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmEBQCQRlgAAGmOKCy++93vxqRJk+K4446L8847L55++unsXQBADao4LO67775YunRpLF++PHbt2hVnnXVWfPazn439+/cPxD4AoIZUHBZ33HFHfOlLX4oFCxbEGWecEXfddVe8973vje9///sDsQ8AqCFDK7nyW2+9FTt37ozW1ta+Y0OGDImLLroofvWrX73tbbq7u6O7u7vv687OzoiI6OrqOpK976i3+8307wkAtWQg/n39v9+3KIp3vF5FYfHXv/41enp64uSTT+53/OSTT47f//73b3ubtra2WLFixSHHx48fX8ldAwD/g6bVA/v9Dxw4EE1NTYf984rC4ki0trbG0qVL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\n"},"metadata":{}}]},{"cell_type":"code","source":["import random"],"metadata":{"id":"si2n8aiTPfdQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.hist([random.randint(1,100) for i in range(100)],5)\n","plt.show()\n","plt.clf()\n","plt.hist([random.randint(1,100) for i in range(100)],20)\n","plt.show()\n","plt.clf()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":860},"id":"VdBS5oFbPffy","executionInfo":{"status":"ok","timestamp":1712304057713,"user_tz":-540,"elapsed":908,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d1ae6feb-3c64-409c-979c-a9af4e4d9161"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","fig, ax = plt.subplots()\n","\n","fruits = ['apple', 'blueberry', 'cherry', 'orange']\n","counts = [100, 100, 30, 100]\n","bar_labels = ['red', 'blue', '_red', 'orange']\n","bar_colors = ['tab:red', 'tab:blue', 'tab:red', 'tab:orange']\n","\n","ax.bar(fruits, counts, label=bar_labels, color=bar_colors)\n","\n","ax.set_ylabel('fruit supply')\n","ax.set_title('Fruit supply by kind and color')\n","ax.legend(title='Fruit color')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"p2NrgHgwP9VT","executionInfo":{"status":"ok","timestamp":1712305078425,"user_tz":-540,"elapsed":897,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"3ba6f9fe-c8a6-49c6-e108-97f2e9a4d011"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#Lesson 67 (Matplotlib--Customization)"],"metadata":{"id":"K1oNLnnzSQyH"}},{"cell_type":"markdown","source":["##Basic plot"],"metadata":{"id":"d0ZN2Dm20Gu9"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","year=[1960,1970,1980,1990,2000,2010]\n","pop=[0.995,1.279,1.69,2.184,2.397,2.72]\n","## Chimeglej uzuuley\n","plt.plot(year,pop,marker='p',linestyle='dashed', color='magenta')\n","plt.show()"],"metadata":{"id":"REewzhlxVGre","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1712315948919,"user_tz":-540,"elapsed":445,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5352e0e3-b739-49e0-b0c4-42af63318fba"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["help(plt.plot)\n","## Ene aygui goy func bn. Ingeed yu2 ashiglaj bolohoo harchdag ym baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zzj52ExkuIPF","executionInfo":{"status":"ok","timestamp":1712314875990,"user_tz":-540,"elapsed":372,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ef7e363a-2c31-4018-b4a2-d080b3599137"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on function plot in module matplotlib.pyplot:\n","\n","plot(*args, scalex=True, scaley=True, data=None, **kwargs)\n","    Plot y versus x as lines and/or markers.\n","    \n","    Call signatures::\n","    \n","        plot([x], y, [fmt], *, data=None, **kwargs)\n","        plot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n","    \n","    The coordinates of the points or line nodes are given by *x*, *y*.\n","    \n","    The optional parameter *fmt* is a convenient way for defining basic\n","    formatting like color, marker and linestyle. It's a shortcut string\n","    notation described in the *Notes* section below.\n","    \n","    >>> plot(x, y)        # plot x and y using default line style and color\n","    >>> plot(x, y, 'bo')  # plot x and y using blue circle markers\n","    >>> plot(y)           # plot y using x as index array 0..N-1\n","    >>> plot(y, 'r+')     # ditto, but with red plusses\n","    \n","    You can use `.Line2D` properties as keyword arguments for more\n","    control on the appearance. Line properties and *fmt* can be mixed.\n","    The following two calls yield identical results:\n","    \n","    >>> plot(x, y, 'go--', linewidth=2, markersize=12)\n","    >>> plot(x, y, color='green', marker='o', linestyle='dashed',\n","    ...      linewidth=2, markersize=12)\n","    \n","    When conflicting with *fmt*, keyword arguments take precedence.\n","    \n","    \n","    **Plotting labelled data**\n","    \n","    There's a convenient way for plotting objects with labelled data (i.e.\n","    data that can be accessed by index ``obj['y']``). Instead of giving\n","    the data in *x* and *y*, you can provide the object in the *data*\n","    parameter and just give the labels for *x* and *y*::\n","    \n","    >>> plot('xlabel', 'ylabel', data=obj)\n","    \n","    All indexable objects are supported. This could e.g. be a `dict`, a\n","    `pandas.DataFrame` or a structured numpy array.\n","    \n","    \n","    **Plotting multiple sets of data**\n","    \n","    There are various ways to plot multiple sets of data.\n","    \n","    - The most straight forward way is just to call `plot` multiple times.\n","      Example:\n","    \n","      >>> plot(x1, y1, 'bo')\n","      >>> plot(x2, y2, 'go')\n","    \n","    - If *x* and/or *y* are 2D arrays a separate data set will be drawn\n","      for every column. If both *x* and *y* are 2D, they must have the\n","      same shape. If only one of them is 2D with shape (N, m) the other\n","      must have length N and will be used for every data set m.\n","    \n","      Example:\n","    \n","      >>> x = [1, 2, 3]\n","      >>> y = np.array([[1, 2], [3, 4], [5, 6]])\n","      >>> plot(x, y)\n","    \n","      is equivalent to:\n","    \n","      >>> for col in range(y.shape[1]):\n","      ...     plot(x, y[:, col])\n","    \n","    - The third way is to specify multiple sets of *[x]*, *y*, *[fmt]*\n","      groups::\n","    \n","      >>> plot(x1, y1, 'g^', x2, y2, 'g-')\n","    \n","      In this case, any additional keyword argument applies to all\n","      datasets. Also, this syntax cannot be combined with the *data*\n","      parameter.\n","    \n","    By default, each line is assigned a different style specified by a\n","    'style cycle'. The *fmt* and line property parameters are only\n","    necessary if you want explicit deviations from these defaults.\n","    Alternatively, you can also change the style cycle using\n","    :rc:`axes.prop_cycle`.\n","    \n","    \n","    Parameters\n","    ----------\n","    x, y : array-like or scalar\n","        The horizontal / vertical coordinates of the data points.\n","        *x* values are optional and default to ``range(len(y))``.\n","    \n","        Commonly, these parameters are 1D arrays.\n","    \n","        They can also be scalars, or two-dimensional (in that case, the\n","        columns represent separate data sets).\n","    \n","        These arguments cannot be passed as keywords.\n","    \n","    fmt : str, optional\n","        A format string, e.g. 'ro' for red circles. See the *Notes*\n","        section for a full description of the format strings.\n","    \n","        Format strings are just an abbreviation for quickly setting\n","        basic line properties. All of these and more can also be\n","        controlled by keyword arguments.\n","    \n","        This argument cannot be passed as keyword.\n","    \n","    data : indexable object, optional\n","        An object with labelled data. If given, provide the label names to\n","        plot in *x* and *y*.\n","    \n","        .. note::\n","            Technically there's a slight ambiguity in calls where the\n","            second label is a valid *fmt*. ``plot('n', 'o', data=obj)``\n","            could be ``plt(x, y)`` or ``plt(y, fmt)``. In such cases,\n","            the former interpretation is chosen, but a warning is issued.\n","            You may suppress the warning by adding an empty format string\n","            ``plot('n', 'o', '', data=obj)``.\n","    \n","    Returns\n","    -------\n","    list of `.Line2D`\n","        A list of lines representing the plotted data.\n","    \n","    Other Parameters\n","    ----------------\n","    scalex, scaley : bool, default: True\n","        These parameters determine if the view limits are adapted to the\n","        data limits. The values are passed on to\n","        `~.axes.Axes.autoscale_view`.\n","    \n","    **kwargs : `.Line2D` properties, optional\n","        *kwargs* are used to specify properties like a line label (for\n","        auto legends), linewidth, antialiasing, marker face color.\n","        Example::\n","    \n","        >>> plot([1, 2, 3], [1, 2, 3], 'go-', label='line 1', linewidth=2)\n","        >>> plot([1, 2, 3], [1, 4, 9], 'rs', label='line 2')\n","    \n","        If you specify multiple lines with one plot call, the kwargs apply\n","        to all those lines. In case the label object is iterable, each\n","        element is used as labels for each set of data.\n","    \n","        Here is a list of available `.Line2D` properties:\n","    \n","        Properties:\n","        agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the image\n","        alpha: scalar or None\n","        animated: bool\n","        antialiased or aa: bool\n","        clip_box: `.Bbox`\n","        clip_on: bool\n","        clip_path: Patch or (Path, Transform) or None\n","        color or c: color\n","        dash_capstyle: `.CapStyle` or {'butt', 'projecting', 'round'}\n","        dash_joinstyle: `.JoinStyle` or {'miter', 'round', 'bevel'}\n","        dashes: sequence of floats (on/off ink in points) or (None, None)\n","        data: (2, N) array or two 1D arrays\n","        drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'\n","        figure: `.Figure`\n","        fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'}\n","        gapcolor: color or None\n","        gid: str\n","        in_layout: bool\n","        label: object\n","        linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...}\n","        linewidth or lw: float\n","        marker: marker style string, `~.path.Path` or `~.markers.MarkerStyle`\n","        markeredgecolor or mec: color\n","        markeredgewidth or mew: float\n","        markerfacecolor or mfc: color\n","        markerfacecoloralt or mfcalt: color\n","        markersize or ms: float\n","        markevery: None or int or (int, int) or slice or list[int] or float or (float, float) or list[bool]\n","        mouseover: bool\n","        path_effects: `.AbstractPathEffect`\n","        picker: float or callable[[Artist, Event], tuple[bool, dict]]\n","        pickradius: unknown\n","        rasterized: bool\n","        sketch_params: (scale: float, length: float, randomness: float)\n","        snap: bool or None\n","        solid_capstyle: `.CapStyle` or {'butt', 'projecting', 'round'}\n","        solid_joinstyle: `.JoinStyle` or {'miter', 'round', 'bevel'}\n","        transform: unknown\n","        url: str\n","        visible: bool\n","        xdata: 1D array\n","        ydata: 1D array\n","        zorder: float\n","    \n","    See Also\n","    --------\n","    scatter : XY scatter plot with markers of varying size and/or color (\n","        sometimes also called bubble chart).\n","    \n","    Notes\n","    -----\n","    **Format Strings**\n","    \n","    A format string consists of a part for color, marker and line::\n","    \n","        fmt = '[marker][line][color]'\n","    \n","    Each of them is optional. If not provided, the value from the style\n","    cycle is used. Exception: If ``line`` is given, but no ``marker``,\n","    the data will be a line without markers.\n","    \n","    Other combinations such as ``[color][marker][line]`` are also\n","    supported, but note that their parsing may be ambiguous.\n","    \n","    **Markers**\n","    \n","    =============   ===============================\n","    character       description\n","    =============   ===============================\n","    ``'.'``         point marker\n","    ``','``         pixel marker\n","    ``'o'``         circle marker\n","    ``'v'``         triangle_down marker\n","    ``'^'``         triangle_up marker\n","    ``'<'``         triangle_left marker\n","    ``'>'``         triangle_right marker\n","    ``'1'``         tri_down marker\n","    ``'2'``         tri_up marker\n","    ``'3'``         tri_left marker\n","    ``'4'``         tri_right marker\n","    ``'8'``         octagon marker\n","    ``'s'``         square marker\n","    ``'p'``         pentagon marker\n","    ``'P'``         plus (filled) marker\n","    ``'*'``         star marker\n","    ``'h'``         hexagon1 marker\n","    ``'H'``         hexagon2 marker\n","    ``'+'``         plus marker\n","    ``'x'``         x marker\n","    ``'X'``         x (filled) marker\n","    ``'D'``         diamond marker\n","    ``'d'``         thin_diamond marker\n","    ``'|'``         vline marker\n","    ``'_'``         hline marker\n","    =============   ===============================\n","    \n","    **Line Styles**\n","    \n","    =============    ===============================\n","    character        description\n","    =============    ===============================\n","    ``'-'``          solid line style\n","    ``'--'``         dashed line style\n","    ``'-.'``         dash-dot line style\n","    ``':'``          dotted line style\n","    =============    ===============================\n","    \n","    Example format strings::\n","    \n","        'b'    # blue markers with default shape\n","        'or'   # red circles\n","        '-g'   # green solid line\n","        '--'   # dashed line with default color\n","        '^k:'  # black triangle_up markers connected by a dotted line\n","    \n","    **Colors**\n","    \n","    The supported color abbreviations are the single letter codes\n","    \n","    =============    ===============================\n","    character        color\n","    =============    ===============================\n","    ``'b'``          blue\n","    ``'g'``          green\n","    ``'r'``          red\n","    ``'c'``          cyan\n","    ``'m'``          magenta\n","    ``'y'``          yellow\n","    ``'k'``          black\n","    ``'w'``          white\n","    =============    ===============================\n","    \n","    and the ``'CN'`` colors that index into the default property cycle.\n","    \n","    If the color is the only part of the format string, you can\n","    additionally use any  `matplotlib.colors` spec, e.g. full names\n","    (``'green'``) or hex strings (``'#008000'``).\n","\n"]}]},{"cell_type":"markdown","source":["##Axis label"],"metadata":{"id":"-6l1hJza77m8"}},{"cell_type":"code","source":["plt.plot(year,pop)\n","plt.xlabel('Year')\n","plt.ylabel('Population')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"FIdlInzLuIRW","executionInfo":{"status":"ok","timestamp":1712316144359,"user_tz":-540,"elapsed":1788,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"eab92bcc-79f0-47f5-cb92-06ad4fb1803a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##Title"],"metadata":{"id":"OXvRS3HJ8Kc_"}},{"cell_type":"code","source":["plt.plot(year,pop)\n","plt.ylabel('Year')\n","plt.xlabel('Population')\n","plt.title('Mongolian Population Projections')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"esmBvGujuITq","executionInfo":{"status":"ok","timestamp":1712316139352,"user_tz":-540,"elapsed":1262,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"01b48518-19aa-453b-9f90-269f7d9c7e29"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##Ticks"],"metadata":{"id":"kz6QJuOF8YYj"}},{"cell_type":"code","source":["plt.plot(year,pop)\n","plt.xlabel('Year')\n","plt.ylabel('Population')\n","plt.title('Mongolian Population Projections')\n","plt.yticks([0,0.5,1,1.5,2,2.5,3],\n","          ['0M', '0.5M', '1M','1.5M','2M','2.5M','3M'])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"bSCUdsdd8Zk8","executionInfo":{"status":"ok","timestamp":1712316127410,"user_tz":-540,"elapsed":441,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d9e7ac05-6d6e-4388-9db6-47090db7ecd0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#Lesson 68 (Statistics--Correlation)"],"metadata":{"id":"6E1AIeXG_xXy"}},{"cell_type":"code","source":["import random\n","from collections import Counter\n","import math\n","import matplotlib.pyplot as plt"],"metadata":{"id":"f7MosPw18Zqb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Generate random number"],"metadata":{"id":"EZV2LALdBWXK"}},{"cell_type":"code","source":["num_friends=[random.randint(1,100) for i in range(1000)]"],"metadata":{"id":"Q19_NzCKAM_W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["daily_minutes=[random.randint(5,600) for i in range(1000)]"],"metadata":{"id":"UHeo_i9f8aWl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(num_friends)\n","print(daily_minutes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nu19kzYf8aY3","executionInfo":{"status":"ok","timestamp":1712554200704,"user_tz":-540,"elapsed":7,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d01c1ff0-6092-4995-8df4-581b75d61971"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[67, 69, 84, 56, 68, 75, 34, 70, 14, 71, 35, 9, 81, 78, 70, 24, 64, 43, 81, 19, 78, 57, 100, 50, 11, 63, 32, 27, 99, 78, 15, 56, 88, 19, 65, 51, 38, 75, 76, 58, 20, 64, 83, 20, 10, 85, 68, 94, 92, 62, 75, 11, 70, 66, 30, 9, 64, 22, 29, 6, 56, 3, 47, 68, 70, 59, 55, 44, 65, 50, 66, 68, 11, 93, 50, 89, 46, 19, 75, 7, 1, 54, 59, 54, 86, 83, 84, 96, 12, 41, 11, 94, 7, 53, 15, 2, 51, 92, 67, 73, 78, 17, 86, 9, 40, 77, 15, 14, 35, 78, 2, 45, 32, 73, 97, 12, 43, 93, 37, 95, 81, 28, 28, 72, 46, 82, 28, 7, 46, 56, 28, 60, 64, 35, 84, 36, 70, 92, 23, 67, 71, 94, 53, 40, 65, 26, 16, 51, 7, 6, 79, 98, 24, 67, 77, 46, 83, 80, 6, 84, 68, 52, 59, 67, 40, 58, 14, 94, 59, 32, 92, 14, 57, 38, 93, 83, 31, 13, 67, 63, 39, 3, 48, 90, 30, 42, 19, 78, 29, 54, 94, 38, 35, 88, 25, 48, 3, 64, 21, 23, 16, 83, 61, 77, 9, 90, 29, 48, 10, 63, 56, 10, 52, 99, 23, 32, 9, 89, 80, 81, 4, 79, 11, 81, 56, 14, 99, 77, 38, 76, 22, 81, 4, 100, 78, 15, 75, 90, 47, 94, 40, 5, 32, 12, 71, 1, 34, 6, 44, 11, 77, 2, 92, 73, 46, 11, 40, 89, 12, 91, 48, 24, 59, 9, 55, 68, 26, 68, 23, 23, 33, 70, 96, 54, 20, 82, 60, 8, 30, 25, 1, 51, 11, 16, 71, 8, 86, 45, 23, 49, 97, 20, 74, 97, 11, 12, 91, 62, 54, 76, 55, 51, 13, 64, 4, 38, 17, 93, 85, 51, 95, 92, 38, 82, 7, 75, 2, 51, 6, 7, 4, 80, 8, 61, 51, 98, 52, 61, 27, 27, 44, 83, 45, 73, 76, 30, 32, 51, 1, 9, 61, 55, 58, 98, 18, 15, 64, 82, 12, 91, 38, 57, 83, 94, 46, 66, 40, 71, 85, 73, 19, 92, 25, 57, 4, 70, 78, 1, 84, 46, 90, 20, 30, 32, 79, 40, 20, 93, 41, 4, 94, 34, 66, 50, 22, 48, 56, 68, 67, 1, 22, 75, 73, 83, 100, 51, 84, 97, 18, 81, 63, 29, 84, 27, 74, 64, 28, 35, 39, 51, 1, 73, 33, 97, 20, 33, 7, 26, 63, 32, 43, 45, 21, 49, 17, 82, 99, 92, 33, 99, 58, 64, 55, 99, 58, 89, 43, 49, 64, 26, 84, 91, 85, 7, 32, 84, 13, 25, 52, 57, 40, 98, 94, 45, 59, 74, 66, 8, 91, 82, 11, 77, 80, 2, 89, 97, 56, 26, 28, 31, 69, 25, 36, 5, 21, 90, 67, 42, 3, 92, 89, 12, 87, 77, 56, 17, 61, 85, 75, 22, 21, 28, 81, 69, 84, 92, 6, 8, 50, 78, 66, 98, 87, 23, 98, 50, 79, 67, 45, 44, 82, 96, 75, 32, 85, 20, 60, 19, 100, 72, 10, 40, 13, 30, 68, 55, 2, 4, 9, 78, 1, 75, 10, 51, 38, 89, 23, 49, 12, 78, 47, 61, 21, 69, 92, 93, 20, 28, 98, 25, 76, 51, 80, 27, 32, 85, 39, 34, 18, 7, 100, 41, 6, 79, 96, 9, 15, 36, 81, 28, 41, 11, 92, 64, 77, 53, 14, 25, 38, 81, 78, 7, 70, 69, 85, 13, 57, 65, 27, 91, 1, 10, 68, 87, 16, 4, 71, 78, 72, 72, 43, 84, 61, 33, 7, 90, 87, 45, 91, 87, 55, 63, 12, 66, 47, 57, 73, 95, 92, 78, 14, 5, 81, 89, 43, 52, 36, 52, 6, 41, 41, 38, 31, 34, 74, 81, 78, 90, 85, 54, 44, 34, 1, 19, 18, 79, 3, 58, 22, 78, 64, 15, 64, 32, 90, 98, 65, 86, 39, 90, 82, 47, 28, 7, 8, 32, 46, 98, 15, 8, 87, 78, 2, 21, 100, 25, 27, 92, 72, 100, 36, 30, 63, 46, 46, 77, 81, 92, 35, 4, 43, 63, 55, 80, 11, 99, 68, 23, 96, 9, 19, 23, 63, 9, 38, 98, 25, 46, 52, 100, 98, 12, 60, 92, 56, 23, 38, 86, 91, 26, 92, 75, 94, 61, 23, 52, 100, 19, 25, 39, 72, 74, 80, 8, 57, 8, 12, 34, 20, 94, 9, 88, 4, 77, 39, 94, 88, 99, 22, 71, 22, 90, 22, 61, 81, 5, 2, 93, 85, 3, 34, 89, 92, 82, 27, 3, 47, 11, 8, 78, 11, 43, 19, 3, 2, 13, 67, 38, 48, 28, 89, 70, 27, 72, 90, 63, 50, 48, 65, 26, 59, 47, 38, 37, 90, 85, 61, 41, 99, 21, 36, 34, 66, 62, 73, 61, 93, 82, 26, 28, 78, 9, 27, 82, 39, 20, 48, 67, 86, 14, 31, 62, 87, 75, 14, 60, 35, 65, 59, 77, 15, 88, 12, 85, 4, 11, 4, 93, 96, 26, 44, 91, 23, 77, 33, 82, 48, 16, 17, 63, 45, 53, 58, 63, 66, 52, 25, 36, 55, 83, 20, 15, 9, 3, 93, 11, 51, 3, 18, 37, 33, 57, 14, 19, 93, 70, 34, 44, 16, 75, 94, 55, 44, 5, 71, 84, 32, 24, 78, 79, 65, 12, 47, 63, 86, 35, 70, 83, 8, 9, 33, 41, 80, 8, 45, 31, 33, 63, 70, 32, 35, 12, 79, 81, 85, 7, 29, 66, 38, 68, 62, 25, 61, 34, 46, 30, 56, 66, 86, 32, 99, 69, 50, 47, 84, 7, 98, 87, 88, 18, 44, 76, 57, 83, 88, 72, 63, 85, 60, 16, 61, 52, 24, 32, 38, 89, 54, 16, 8, 43, 40, 90, 42, 83, 67, 52, 91, 32, 95, 80, 14, 56, 53, 96, 58, 26, 41, 21, 46, 20, 17, 85, 23, 77, 6, 24, 30, 17, 59, 10, 3, 61, 11, 2, 99, 24, 12, 52, 76, 12]\n","[501, 473, 593, 363, 334, 98, 91, 426, 584, 160, 442, 212, 465, 320, 83, 196, 55, 414, 590, 285, 249, 124, 280, 270, 60, 445, 47, 285, 129, 209, 452, 434, 226, 131, 530, 122, 457, 238, 235, 425, 446, 131, 280, 282, 422, 371, 150, 91, 487, 63, 273, 395, 258, 45, 339, 321, 532, 428, 506, 483, 109, 418, 442, 34, 456, 210, 214, 194, 230, 69, 100, 336, 352, 593, 385, 433, 361, 55, 148, 226, 303, 600, 206, 54, 389, 231, 76, 578, 306, 177, 442, 145, 40, 57, 495, 548, 227, 429, 171, 365, 579, 149, 466, 40, 521, 304, 190, 396, 274, 27, 451, 511, 339, 482, 412, 306, 249, 229, 302, 321, 163, 484, 490, 56, 460, 407, 312, 207, 104, 238, 98, 388, 125, 364, 571, 411, 268, 300, 71, 554, 79, 121, 241, 454, 144, 181, 126, 343, 165, 417, 539, 206, 286, 529, 566, 579, 105, 134, 188, 81, 146, 441, 347, 52, 485, 347, 285, 9, 572, 262, 257, 309, 366, 388, 213, 521, 532, 138, 191, 453, 531, 302, 234, 323, 330, 488, 456, 436, 470, 488, 26, 189, 274, 571, 443, 358, 451, 157, 452, 398, 158, 335, 343, 414, 597, 348, 358, 213, 540, 291, 232, 245, 62, 313, 136, 287, 408, 551, 286, 311, 464, 12, 489, 96, 174, 467, 7, 445, 171, 323, 380, 38, 144, 255, 44, 532, 517, 95, 274, 253, 367, 150, 408, 374, 575, 300, 305, 365, 599, 374, 574, 588, 440, 417, 458, 91, 402, 116, 54, 273, 583, 231, 137, 218, 98, 600, 352, 458, 362, 535, 65, 26, 28, 85, 195, 199, 411, 88, 27, 388, 193, 221, 71, 121, 317, 15, 433, 246, 152, 103, 400, 540, 247, 23, 299, 201, 189, 224, 257, 417, 580, 556, 405, 131, 78, 239, 376, 304, 168, 391, 235, 344, 466, 14, 355, 337, 86, 16, 209, 142, 151, 283, 184, 461, 576, 521, 280, 368, 156, 389, 402, 541, 374, 540, 287, 136, 297, 222, 51, 344, 278, 469, 560, 497, 104, 369, 509, 417, 374, 28, 13, 56, 91, 151, 449, 309, 161, 304, 205, 74, 327, 69, 338, 325, 527, 242, 507, 242, 147, 83, 340, 424, 543, 328, 92, 413, 485, 104, 463, 16, 490, 46, 147, 578, 244, 290, 234, 406, 573, 183, 404, 286, 587, 352, 123, 305, 262, 563, 122, 89, 209, 351, 335, 156, 580, 403, 580, 518, 8, 387, 57, 389, 531, 493, 27, 579, 264, 130, 33, 13, 193, 491, 18, 410, 330, 10, 130, 229, 166, 408, 257, 596, 325, 23, 431, 129, 540, 57, 389, 89, 539, 289, 203, 487, 44, 215, 516, 201, 251, 376, 211, 241, 267, 313, 98, 310, 441, 7, 259, 37, 448, 416, 458, 591, 123, 53, 453, 293, 48, 122, 339, 326, 35, 180, 181, 307, 428, 167, 470, 111, 239, 94, 520, 36, 178, 27, 241, 291, 157, 77, 289, 162, 80, 177, 142, 255, 256, 149, 506, 557, 195, 565, 63, 118, 137, 66, 200, 284, 127, 219, 400, 557, 211, 570, 417, 530, 394, 296, 395, 418, 429, 65, 364, 426, 455, 464, 421, 344, 131, 312, 119, 514, 88, 393, 553, 26, 249, 30, 548, 368, 74, 151, 152, 101, 121, 88, 453, 426, 132, 439, 34, 221, 92, 520, 10, 214, 505, 399, 277, 549, 254, 198, 280, 307, 39, 422, 344, 305, 582, 24, 226, 224, 584, 506, 414, 589, 221, 156, 154, 16, 131, 503, 276, 482, 261, 26, 139, 555, 373, 311, 412, 575, 194, 181, 123, 44, 357, 353, 128, 295, 293, 205, 207, 62, 119, 296, 436, 216, 409, 60, 37, 229, 204, 579, 500, 152, 273, 562, 29, 432, 380, 427, 295, 599, 179, 75, 386, 436, 397, 470, 254, 363, 287, 151, 102, 80, 597, 21, 169, 468, 373, 51, 550, 596, 86, 560, 559, 367, 317, 226, 508, 419, 428, 525, 420, 228, 406, 222, 583, 79, 27, 543, 66, 342, 160, 568, 426, 245, 179, 86, 65, 210, 176, 131, 553, 364, 420, 238, 8, 357, 69, 240, 366, 288, 486, 303, 35, 30, 492, 133, 143, 541, 409, 37, 295, 360, 271, 406, 182, 190, 251, 474, 311, 75, 570, 597, 549, 527, 239, 578, 89, 222, 381, 540, 222, 550, 451, 297, 33, 581, 386, 480, 16, 74, 351, 345, 562, 594, 73, 391, 267, 406, 31, 134, 179, 429, 207, 51, 431, 423, 524, 73, 319, 385, 536, 554, 13, 460, 228, 83, 546, 517, 303, 568, 368, 579, 298, 381, 140, 130, 382, 385, 274, 426, 68, 185, 586, 342, 535, 596, 103, 192, 293, 439, 262, 310, 353, 204, 563, 214, 365, 267, 531, 59, 239, 56, 274, 195, 216, 67, 250, 31, 463, 408, 440, 53, 583, 18, 460, 247, 455, 206, 82, 530, 7, 588, 177, 351, 427, 291, 310, 397, 158, 161, 455, 8, 509, 358, 181, 468, 344, 354, 192, 104, 40, 389, 461, 468, 246, 24, 244, 289, 496, 472, 544, 372, 7, 411, 411, 53, 260, 119, 440, 480, 313, 308, 145, 192, 144, 439, 174, 284, 302, 189, 80, 293, 77, 243, 64, 348, 282, 332, 298, 70, 285, 355, 453, 427, 9, 430, 272, 385, 55, 10, 505, 487, 44, 122, 248, 222, 165, 593, 375, 307, 103, 587, 62, 402, 547, 287, 131, 594, 516, 546, 186, 294, 384, 68, 528, 29, 83, 121, 301, 382, 212, 98, 423, 382, 198, 222, 418, 252, 507, 275, 143, 130, 51, 520, 326, 368, 367, 279, 563, 275, 307, 398, 538, 128, 37, 294, 537, 546, 361, 111, 435, 593, 578, 428, 152, 576, 89, 521, 588, 595, 333, 357, 242, 328, 118, 590, 503, 327, 32, 159, 251, 337, 335, 261, 50, 24, 502, 26, 449, 15, 464, 210, 40, 490, 42, 221, 407, 244, 492, 446, 414, 265, 553, 37, 329, 89, 182, 377, 78, 91, 238, 110, 116, 188, 453, 508, 31, 547, 514, 105, 423, 528, 342, 407, 33, 32]\n"]}]},{"cell_type":"markdown","source":["Buid Histogram"],"metadata":{"id":"F2CRZmKfB0fa"}},{"cell_type":"code","source":["friend_count=Counter(num_friends)\n","print(friend_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ghEvUp9gB02D","executionInfo":{"status":"ok","timestamp":1712554200704,"user_tz":-540,"elapsed":6,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"19d6da22-3530-407a-cbd6-b141cfafdfed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Counter({78: 20, 32: 18, 92: 18, 11: 17, 38: 16, 12: 16, 9: 15, 81: 15, 63: 15, 85: 15, 51: 14, 7: 14, 23: 14, 61: 14, 84: 13, 75: 13, 64: 13, 20: 13, 94: 13, 46: 13, 77: 13, 90: 13, 8: 13, 67: 12, 56: 12, 68: 12, 70: 12, 83: 12, 28: 12, 82: 12, 98: 12, 52: 12, 25: 12, 4: 12, 34: 11, 14: 11, 19: 11, 99: 11, 66: 11, 3: 11, 93: 11, 89: 11, 57: 10, 27: 10, 15: 10, 55: 10, 1: 10, 2: 10, 40: 10, 26: 10, 91: 10, 35: 9, 43: 9, 100: 9, 30: 9, 22: 9, 6: 9, 47: 9, 59: 9, 44: 9, 41: 9, 73: 9, 45: 9, 80: 9, 48: 9, 33: 9, 71: 8, 50: 8, 65: 8, 58: 8, 86: 8, 72: 8, 16: 8, 79: 8, 21: 8, 87: 8, 24: 7, 88: 7, 76: 7, 10: 7, 54: 7, 96: 7, 17: 7, 36: 7, 39: 7, 69: 6, 97: 6, 60: 6, 13: 6, 18: 6, 62: 5, 29: 5, 53: 5, 31: 5, 5: 5, 74: 5, 95: 4, 49: 4, 37: 3, 42: 3})\n"]}]},{"cell_type":"code","source":["xs=range(101)\n"],"metadata":{"id":"D8Qj1cC0B05G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ys=[friend_count[i] for i in xs]"],"metadata":{"id":"5Pkc7fZuB07e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.bar(xs,ys)\n","plt.axis([0,100,0,25])\n","plt.title(\"Histogtam of Friend Counts\")\n","plt.xlabel(\"#of friends\")\n","plt.ylabel(\"#of people\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"HQjnSk4bB09_","executionInfo":{"status":"ok","timestamp":1712554201930,"user_tz":-540,"elapsed":722,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4102cadb-ecb1-4ce9-e0f5-99b21b71e4fa"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["largest_value=max(num_friends)\n","lowest_value=min(num_friends)\n","print(largest_value)\n","print(lowest_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C1ZTUsd7COLJ","executionInfo":{"status":"ok","timestamp":1712554202469,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f5b5f097-cd7e-42c5-bba1-5e3212894991"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100\n","1\n"]}]},{"cell_type":"markdown","source":["Mean"],"metadata":{"id":"idq-5IUBCkyl"}},{"cell_type":"code","source":["def mean(x):\n","    return sum(x)/len(x)\n","mean(num_friends)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xtLLS3RhCmlg","executionInfo":{"status":"ok","timestamp":1712554203407,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b50e387b-b146-4bbc-8c78-afcfbb9d95ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["50.813"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["Difference from mean"],"metadata":{"id":"0LmjlyvEDMJd"}},{"cell_type":"code","source":["def de_mean(x):\n","    x_bar=mean(x)\n","    return [x_i-x_bar for x_i in x]"],"metadata":{"id":"EzNM7MDiDMcO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(de_mean(num_friends))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L8QVOx1DDMfc","executionInfo":{"status":"ok","timestamp":1712317181329,"user_tz":-540,"elapsed":375,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"98d78c7d-243f-4dba-f1ae-2d73df9f5646"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[27.421999999999997, -14.578000000000003, 21.421999999999997, -23.578000000000003, 23.421999999999997, -29.578000000000003, -6.578000000000003, 47.422, 3.421999999999997, 49.422, -6.578000000000003, -17.578000000000003, 27.421999999999997, -24.578000000000003, -32.578, -0.578000000000003, -10.578000000000003, -2.578000000000003, 14.421999999999997, 27.421999999999997, -49.578, 28.421999999999997, 36.422, 27.421999999999997, -49.578, -22.578000000000003, 32.422, 31.421999999999997, -16.578000000000003, -43.578, 6.421999999999997, -37.578, -9.578000000000003, -8.578000000000003, 7.421999999999997, 45.422, -23.578000000000003, 41.422, 9.421999999999997, -4.578000000000003, 13.421999999999997, 36.422, 2.421999999999997, 22.421999999999997, 19.421999999999997, -45.578, 9.421999999999997, -42.578, 8.421999999999997, -13.578000000000003, 39.422, 28.421999999999997, -21.578000000000003, 39.422, 35.422, -30.578000000000003, 12.421999999999997, 48.422, 11.421999999999997, 28.421999999999997, 7.421999999999997, -16.578000000000003, 44.422, 35.422, 27.421999999999997, 35.422, 1.421999999999997, -32.578, -33.578, -49.578, 42.422, -47.578, 13.421999999999997, 7.421999999999997, 44.422, -33.578, 34.422, -27.578000000000003, 31.421999999999997, -34.578, 47.422, -42.578, 11.421999999999997, -15.578000000000003, 17.421999999999997, -26.578000000000003, -49.578, -49.578, 42.422, -2.578000000000003, -29.578000000000003, 43.422, -25.578000000000003, 20.421999999999997, 44.422, -26.578000000000003, -16.578000000000003, -31.578000000000003, -13.578000000000003, 22.421999999999997, 14.421999999999997, -45.578, -42.578, 9.421999999999997, 36.422, 36.422, 17.421999999999997, 13.421999999999997, 15.421999999999997, -36.578, 37.422, 48.422, -34.578, -19.578000000000003, -15.578000000000003, -40.578, -2.578000000000003, -19.578000000000003, 8.421999999999997, 39.422, 25.421999999999997, 21.421999999999997, -5.578000000000003, -14.578000000000003, -10.578000000000003, -34.578, -17.578000000000003, -2.578000000000003, 34.422, 38.422, 45.422, -2.578000000000003, 28.421999999999997, -27.578000000000003, 42.422, -39.578, 48.422, -3.578000000000003, -29.578000000000003, -17.578000000000003, -35.578, 44.422, 15.421999999999997, -42.578, -37.578, 4.421999999999997, 35.422, -18.578000000000003, -23.578000000000003, -24.578000000000003, 4.421999999999997, -10.578000000000003, -37.578, -47.578, -15.578000000000003, 41.422, 23.421999999999997, -15.578000000000003, -49.578, -26.578000000000003, -4.578000000000003, 49.422, 40.422, -40.578, 28.421999999999997, 4.421999999999997, -25.578000000000003, -24.578000000000003, -5.578000000000003, -42.578, -23.578000000000003, -37.578, -46.578, 33.422, 20.421999999999997, -48.578, -0.578000000000003, -29.578000000000003, -36.578, -45.578, -49.578, -45.578, -10.578000000000003, -32.578, 2.421999999999997, -47.578, -20.578000000000003, -42.578, 23.421999999999997, 48.422, 14.421999999999997, 42.422, -31.578000000000003, 15.421999999999997, 26.421999999999997, 23.421999999999997, 34.422, -6.578000000000003, 36.422, 31.421999999999997, -47.578, -19.578000000000003, 34.422, 24.421999999999997, -29.578000000000003, -12.578000000000003, 18.421999999999997, -46.578, -26.578000000000003, 48.422, 39.422, -14.578000000000003, -12.578000000000003, -4.578000000000003, -30.578000000000003, -17.578000000000003, 47.422, 11.421999999999997, -5.578000000000003, -1.578000000000003, -15.578000000000003, 24.421999999999997, -39.578, 0.42199999999999704, 11.421999999999997, 46.422, 19.421999999999997, 17.421999999999997, 34.422, -4.578000000000003, -44.578, 29.421999999999997, -46.578, 7.421999999999997, 11.421999999999997, -1.578000000000003, -24.578000000000003, 38.422, -49.578, -24.578000000000003, -40.578, 27.421999999999997, -37.578, 23.421999999999997, -7.578000000000003, -18.578000000000003, 11.421999999999997, 0.42199999999999704, -35.578, 48.422, 28.421999999999997, 19.421999999999997, 24.421999999999997, 37.422, -41.578, 16.421999999999997, -33.578, 49.422, 41.422, 29.421999999999997, -29.578000000000003, 43.422, 18.421999999999997, -40.578, 44.422, 33.422, -3.578000000000003, 29.421999999999997, -37.578, 1.421999999999997, 11.421999999999997, -11.578000000000003, -3.578000000000003, 36.422, -4.578000000000003, 4.421999999999997, -23.578000000000003, -18.578000000000003, 32.422, 27.421999999999997, -3.578000000000003, 36.422, -41.578, -17.578000000000003, -24.578000000000003, -6.578000000000003, -18.578000000000003, -5.578000000000003, -17.578000000000003, 41.422, -40.578, 8.421999999999997, 31.421999999999997, -38.578, -2.578000000000003, -19.578000000000003, 13.421999999999997, -15.578000000000003, 2.421999999999997, 32.422, -48.578, -2.578000000000003, 48.422, 14.421999999999997, 7.421999999999997, 47.422, -31.578000000000003, -36.578, 40.422, 40.422, -49.578, -20.578000000000003, -19.578000000000003, 17.421999999999997, -43.578, -0.578000000000003, -14.578000000000003, -37.578, 39.422, 3.421999999999997, 15.421999999999997, -27.578000000000003, -45.578, 2.421999999999997, 2.421999999999997, 3.421999999999997, 1.421999999999997, 30.421999999999997, 1.421999999999997, -4.578000000000003, -49.578, 16.421999999999997, 9.421999999999997, -28.578000000000003, 37.422, 3.421999999999997, -46.578, -7.578000000000003, -2.578000000000003, 19.421999999999997, -19.578000000000003, 16.421999999999997, -19.578000000000003, -44.578, 23.421999999999997, 38.422, 36.422, 39.422, -9.578000000000003, -12.578000000000003, 0.42199999999999704, -7.578000000000003, -35.578, 40.422, -20.578000000000003, -17.578000000000003, -47.578, 3.421999999999997, 49.422, -48.578, -19.578000000000003, 21.421999999999997, -31.578000000000003, 36.422, -42.578, 47.422, -23.578000000000003, 33.422, 37.422, 45.422, -41.578, 32.422, -34.578, 11.421999999999997, 33.422, 46.422, 28.421999999999997, -33.578, -23.578000000000003, 41.422, -32.578, -36.578, 27.421999999999997, 20.421999999999997, 5.421999999999997, 18.421999999999997, -35.578, 48.422, -39.578, -25.578000000000003, 12.421999999999997, -10.578000000000003, -23.578000000000003, -16.578000000000003, -6.578000000000003, 18.421999999999997, 36.422, -40.578, 12.421999999999997, -0.578000000000003, -32.578, 49.422, -1.578000000000003, -9.578000000000003, 38.422, 16.421999999999997, -31.578000000000003, 2.421999999999997, 48.422, 29.421999999999997, -10.578000000000003, 2.421999999999997, -23.578000000000003, -23.578000000000003, -0.578000000000003, 41.422, -48.578, -31.578000000000003, -17.578000000000003, -3.578000000000003, -43.578, 41.422, -26.578000000000003, 24.421999999999997, 14.421999999999997, -45.578, -28.578000000000003, 48.422, 7.421999999999997, 8.421999999999997, 11.421999999999997, -9.578000000000003, 32.422, -24.578000000000003, -47.578, -27.578000000000003, -27.578000000000003, 31.421999999999997, 30.421999999999997, 15.421999999999997, -5.578000000000003, 31.421999999999997, -25.578000000000003, -46.578, 10.421999999999997, 2.421999999999997, 4.421999999999997, -13.578000000000003, -43.578, 47.422, -15.578000000000003, 9.421999999999997, -13.578000000000003, 44.422, 28.421999999999997, -1.578000000000003, 34.422, 4.421999999999997, -10.578000000000003, -31.578000000000003, -2.578000000000003, 18.421999999999997, -23.578000000000003, 39.422, 38.422, 17.421999999999997, 38.422, -23.578000000000003, -4.578000000000003, -45.578, 23.421999999999997, 28.421999999999997, 19.421999999999997, -22.578000000000003, 2.421999999999997, -6.578000000000003, 22.421999999999997, -8.578000000000003, 17.421999999999997, -16.578000000000003, 14.421999999999997, -2.578000000000003, -48.578, 48.422, -48.578, -9.578000000000003, -24.578000000000003, -28.578000000000003, -10.578000000000003, 7.421999999999997, -46.578, 31.421999999999997, -31.578000000000003, -14.578000000000003, 44.422, 47.422, -5.578000000000003, 21.421999999999997, 23.421999999999997, 22.421999999999997, 22.421999999999997, 41.422, -48.578, -7.578000000000003, 43.422, -0.578000000000003, 48.422, 26.421999999999997, -27.578000000000003, -23.578000000000003, 24.421999999999997, -42.578, 14.421999999999997, 34.422, 39.422, -25.578000000000003, -4.578000000000003, -44.578, 3.421999999999997, 26.421999999999997, -34.578, -26.578000000000003, 23.421999999999997, -44.578, -14.578000000000003, 22.421999999999997, 36.422, 10.421999999999997, -6.578000000000003, -40.578, -18.578000000000003, -17.578000000000003, 35.422, 33.422, -24.578000000000003, -1.578000000000003, -39.578, -3.578000000000003, 40.422, -27.578000000000003, -23.578000000000003, 32.422, 27.421999999999997, -42.578, -21.578000000000003, -36.578, 38.422, -3.578000000000003, -37.578, 12.421999999999997, 19.421999999999997, 48.422, -7.578000000000003, -21.578000000000003, -0.578000000000003, -11.578000000000003, -23.578000000000003, -39.578, 11.421999999999997, -7.578000000000003, 44.422, -32.578, -34.578, -31.578000000000003, -23.578000000000003, -11.578000000000003, 22.421999999999997, -0.578000000000003, -21.578000000000003, -48.578, 33.422, -19.578000000000003, 2.421999999999997, 39.422, 48.422, -3.578000000000003, 42.422, -35.578, 23.421999999999997, -20.578000000000003, 43.422, -48.578, -21.578000000000003, -37.578, 24.421999999999997, -36.578, 48.422, -21.578000000000003, -22.578000000000003, -24.578000000000003, -19.578000000000003, 38.422, 5.421999999999997, 35.422, 30.421999999999997, -35.578, -2.578000000000003, 11.421999999999997, 31.421999999999997, 33.422, 23.421999999999997, -2.578000000000003, 41.422, -16.578000000000003, -6.578000000000003, -19.578000000000003, -9.578000000000003, -29.578000000000003, 15.421999999999997, 18.421999999999997, -35.578, 39.422, -14.578000000000003, 39.422, -12.578000000000003, -26.578000000000003, -8.578000000000003, -13.578000000000003, -2.578000000000003, 18.421999999999997, 1.421999999999997, 0.42199999999999704, -39.578, 39.422, 18.421999999999997, -24.578000000000003, 8.421999999999997, -36.578, -36.578, 17.421999999999997, -0.578000000000003, -47.578, -25.578000000000003, -25.578000000000003, 34.422, -29.578000000000003, 1.421999999999997, 36.422, -20.578000000000003, 11.421999999999997, 36.422, -29.578000000000003, -31.578000000000003, 37.422, -38.578, -9.578000000000003, -27.578000000000003, 44.422, 2.421999999999997, 9.421999999999997, 33.422, -32.578, 15.421999999999997, 40.422, 7.421999999999997, -49.578, 11.421999999999997, 22.421999999999997, 39.422, -30.578000000000003, -47.578, 32.422, -34.578, 27.421999999999997, 17.421999999999997, -4.578000000000003, -12.578000000000003, -6.578000000000003, 10.421999999999997, -12.578000000000003, 18.421999999999997, 35.422, 16.421999999999997, -42.578, -48.578, -11.578000000000003, -14.578000000000003, 19.421999999999997, 25.421999999999997, 0.42199999999999704, -19.578000000000003, 13.421999999999997, 47.422, -30.578000000000003, 27.421999999999997, -42.578, -24.578000000000003, -1.578000000000003, -21.578000000000003, -37.578, 34.422, 22.421999999999997, 29.421999999999997, -18.578000000000003, 3.421999999999997, 26.421999999999997, -5.578000000000003, 2.421999999999997, -9.578000000000003, 33.422, -45.578, 43.422, 49.422, 33.422, -23.578000000000003, -5.578000000000003, -30.578000000000003, -0.578000000000003, 46.422, -9.578000000000003, 11.421999999999997, -38.578, -28.578000000000003, -10.578000000000003, -31.578000000000003, 27.421999999999997, -39.578, -11.578000000000003, -12.578000000000003, 31.421999999999997, 22.421999999999997, -20.578000000000003, 11.421999999999997, -41.578, -33.578, -11.578000000000003, 42.422, 31.421999999999997, -12.578000000000003, -8.578000000000003, 33.422, 20.421999999999997, 43.422, -1.578000000000003, -30.578000000000003, 45.422, -3.578000000000003, 29.421999999999997, -27.578000000000003, -38.578, -17.578000000000003, -29.578000000000003, 28.421999999999997, 31.421999999999997, 36.422, 17.421999999999997, 15.421999999999997, -29.578000000000003, -0.578000000000003, 30.421999999999997, 36.422, 45.422, 33.422, -26.578000000000003, 21.421999999999997, 5.421999999999997, -21.578000000000003, -36.578, -10.578000000000003, 9.421999999999997, -46.578, -14.578000000000003, -8.578000000000003, 42.422, -46.578, 3.421999999999997, 15.421999999999997, 25.421999999999997, -22.578000000000003, -33.578, 49.422, -9.578000000000003, 32.422, 15.421999999999997, -31.578000000000003, -10.578000000000003, 48.422, -30.578000000000003, -48.578, 24.421999999999997, -4.578000000000003, 19.421999999999997, -10.578000000000003, -41.578, -26.578000000000003, -22.578000000000003, -32.578, -23.578000000000003, -0.578000000000003, 34.422, 9.421999999999997, 18.421999999999997, 46.422, 42.422, 44.422, -32.578, 6.421999999999997, -34.578, -29.578000000000003, 28.421999999999997, 47.422, 37.422, 30.421999999999997, -21.578000000000003, 48.422, -18.578000000000003, -10.578000000000003, 43.422, -30.578000000000003, 25.421999999999997, -15.578000000000003, -39.578, -5.578000000000003, 45.422, 13.421999999999997, 15.421999999999997, -42.578, -24.578000000000003, 27.421999999999997, -23.578000000000003, 13.421999999999997, -16.578000000000003, -36.578, -31.578000000000003, -31.578000000000003, 24.421999999999997, -33.578, 45.422, -32.578, 44.422, 45.422, 11.421999999999997, -48.578, 21.421999999999997, -24.578000000000003, -44.578, 16.421999999999997, -32.578, -47.578, -1.578000000000003, 21.421999999999997, 28.421999999999997, -49.578, 10.421999999999997, 40.422, 42.422, -18.578000000000003, -47.578, 44.422, -17.578000000000003, 18.421999999999997, 40.422, 13.421999999999997, 5.421999999999997, 23.421999999999997, 40.422, -11.578000000000003, 33.422, 19.421999999999997, 8.421999999999997, -1.578000000000003, -26.578000000000003, 7.421999999999997, -37.578, -18.578000000000003, -8.578000000000003, -23.578000000000003, -5.578000000000003, -21.578000000000003, -19.578000000000003, -37.578, -29.578000000000003, 10.421999999999997, 11.421999999999997, -46.578, 4.421999999999997, -20.578000000000003, -12.578000000000003, -18.578000000000003, 7.421999999999997, 8.421999999999997, -21.578000000000003, 49.422, 47.422, -37.578, 26.421999999999997, -17.578000000000003, 17.421999999999997, -25.578000000000003, -5.578000000000003, -27.578000000000003, -35.578, -6.578000000000003, 31.421999999999997, -48.578, 36.422, 39.422, -37.578, 8.421999999999997, 2.421999999999997, -5.578000000000003, -35.578, 19.421999999999997, -45.578, 29.421999999999997, 18.421999999999997, 19.421999999999997, -24.578000000000003, -42.578, -31.578000000000003, 1.421999999999997, 6.421999999999997, 39.422, -31.578000000000003, -25.578000000000003, -1.578000000000003, -41.578, -6.578000000000003, -39.578, -29.578000000000003, -27.578000000000003, -29.578000000000003, -20.578000000000003, -33.578, -35.578, 36.422, 32.422, 29.421999999999997, 25.421999999999997, 36.422, 13.421999999999997, 27.421999999999997, 24.421999999999997, 7.421999999999997, 39.422, 35.422, 18.421999999999997, 8.421999999999997, 35.422, -6.578000000000003, 40.422, 18.421999999999997, -9.578000000000003, 31.421999999999997, 10.421999999999997, -1.578000000000003, 27.421999999999997, -45.578, 34.422, -26.578000000000003, 16.421999999999997, 12.421999999999997, -13.578000000000003, -1.578000000000003, -11.578000000000003, -10.578000000000003, 42.422, 12.421999999999997, 11.421999999999997, -21.578000000000003, 39.422, -15.578000000000003, -1.578000000000003, 15.421999999999997, 6.421999999999997, 28.421999999999997, 13.421999999999997, 2.421999999999997, -36.578, 13.421999999999997, 39.422, -8.578000000000003, 21.421999999999997, -39.578, 35.422, -24.578000000000003, 23.421999999999997, -46.578, 41.422, 46.422, -21.578000000000003, 48.422, 0.42199999999999704, -23.578000000000003, -43.578, -18.578000000000003, 44.422, -2.578000000000003, 22.421999999999997, -41.578, 32.422, -11.578000000000003, -23.578000000000003, -45.578, 5.421999999999997, -28.578000000000003, -31.578000000000003, 15.421999999999997, 35.422, -44.578]\n"]}]},{"cell_type":"markdown","source":["Variance"],"metadata":{"id":"fkAgN_E3DMr2"}},{"cell_type":"code","source":["def variance(x):\n","    n=len(x)\n","    deviations=de_mean(x)\n","    return sum([el**2 for el in deviations])/(n-1)\n","print(variance(num_friends))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xgpb8BWzDM21","executionInfo":{"status":"ok","timestamp":1712319892859,"user_tz":-540,"elapsed":395,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8ef89ad7-c9f5-4e0d-f542-a1b5fb0f7606"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["849.3392552552549\n"]}]},{"cell_type":"markdown","source":["Standart Deviation"],"metadata":{"id":"TDDgT2B3D9iG"}},{"cell_type":"code","source":["def standart_deviation(x):\n","    return math.sqrt(variance(x))\n","print(standart_deviation(num_friends))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-wESqGpwD-WL","executionInfo":{"status":"ok","timestamp":1712317408664,"user_tz":-540,"elapsed":421,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1796ee26-4734-4512-b08f-76bd297857b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["29.128850234775825\n"]}]},{"cell_type":"markdown","source":["Covariance"],"metadata":{"id":"RGu143BVD-h5"}},{"cell_type":"markdown","source":["$ covariance= \\frac{\\sum_i^n(x_i-x^-)(y_i-y^-)}{n-1}$"],"metadata":{"id":"_onfakq2F2sC"}},{"cell_type":"code","source":["def covariance(x,y):\n","    n=len(x)\n","    return sum(v_i*w_i for v_i , w_i in zip(de_mean(x), de_mean(y)))/(n-1)\n","print(covariance(num_friends, daily_minutes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yJUuNbLmD-w_","executionInfo":{"status":"ok","timestamp":1712320232117,"user_tz":-540,"elapsed":592,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0831bfef-6368-46ee-914c-293895712b10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-16.254746746746797\n"]}]},{"cell_type":"markdown","source":["Correlation"],"metadata":{"id":"J25VLW75D-9s"}},{"cell_type":"code","source":["def correlation(x,y):\n","    stdev_x=standart_deviation(x)\n","    stdev_y=standart_deviation(y)\n","    if stdev_x>0 and stdev_y>0:\n","        return covariance(x,y)/stdev_x/stdev_y\n","    else:\n","        return 0"],"metadata":{"id":"lVe5Tw5UCmp_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["correlation(num_friends, daily_minutes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VJqae-xUCm8i","executionInfo":{"status":"ok","timestamp":1712318263954,"user_tz":-540,"elapsed":510,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1142e35a-2249-475b-f637-87ef14c4cbfe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.0032898416781199035"]},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["#Lesson 69 (Numpy)"],"metadata":{"id":"ujgxszjkEomn"}},{"cell_type":"code","source":["import numpy as np\n","data_1=[6,7.5,8,0,1]\n","arr_1=np.array(data_1)\n","arr_1\n","#ene deer 7.5iig ni zygeer 7 bolgoj baigaad haraad uzeerei, zuger hevlene.\n","# gants l butarhai too orood irehed bugdiig ni float helber bolgoj hevleed bsn gesen ug."],"metadata":{"id":"RCeMC73DEq28","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714732199044,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c64d6b14-5309-4e86-9c40-4bfa01861325"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([6. , 7.5, 8. , 0. , 1. ])"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["data_2=[[1,2,3,4],[5,6,7,8]]\n","arr_2=np.array(data_2)\n","arr_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u99UM2ov2Fyr","executionInfo":{"status":"ok","timestamp":1714348985258,"user_tz":-540,"elapsed":16,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"661bb07f-879b-41c0-fcfd-2ea619a3b3a0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3, 4],\n","       [5, 6, 7, 8]])"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["arr_3=np.array(data_2, float)\n","arr_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kNCVzcbn1EoM","executionInfo":{"status":"ok","timestamp":1714348985258,"user_tz":-540,"elapsed":12,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"31f288a0-a3cc-48c3-b1b4-a43c728681e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 2., 3., 4.],\n","       [5., 6., 7., 8.]])"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["print(arr_3[0])\n","print(arr_3[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LQ8zrFd-1Eqm","executionInfo":{"status":"ok","timestamp":1714348985258,"user_tz":-540,"elapsed":10,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d2d7fd35-f0d8-42bc-b7e1-5ac433052030"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1. 2. 3. 4.]\n","[5. 6. 7. 8.]\n"]}]},{"cell_type":"code","source":["arr_3[1][3]\n","# index ni bol yurn yag l list shig yavdiin baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TONPwDeNTUyu","executionInfo":{"status":"ok","timestamp":1714348985258,"user_tz":-540,"elapsed":7,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1288e31b-c8bd-4606-926d-945b1984a027"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8.0"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["np.arange(10)\n","# ene ch gsn yag l range shig l ajillaj baina.\n","#ugaasa ch range ym chnde"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qOXkKOp_1EtS","executionInfo":{"status":"ok","timestamp":1714348985258,"user_tz":-540,"elapsed":5,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f82d4074-d01f-41e9-d970-f2cdc0e08911"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["## Zarim neg array shalgah shit"],"metadata":{"id":"sRavn0F8T00p"}},{"cell_type":"code","source":["arr_2.ndim\n","# 2 hemjeest gej baigaan."],"metadata":{"id":"xoo6ShYNnD5G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714116610411,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"da7382b8-e167-4e2d-c18b-07a6f6a91cfe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["arr_2.shape\n","# 2 : 4 gesen matrix bolhoor."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1RMXIes3T4dR","executionInfo":{"status":"ok","timestamp":1714116616229,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"69411ef8-df23-4ff4-99de-29e36d087e3f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 4)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["arr_2.dtype\n","# datanii type (integer 64 bit)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nwiH-11jT4gc","executionInfo":{"status":"ok","timestamp":1714116622850,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a046ab89-8d56-4fc7-db43-3bf26a092e82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('int64')"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["arr_1.dtype\n","# 1r matrix-d float too baigad bga bolohor matrix ni ch float bolchij baigan baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIdrJemfT4oN","executionInfo":{"status":"ok","timestamp":1714116722112,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6455d4fc-1ddb-4762-df69-b9711f4d540c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["arr_2.size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NQXSEX8dT4j6","executionInfo":{"status":"ok","timestamp":1714116629746,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2400454e-20dc-4d8e-981d-1259fe43fab1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["#Lesson 70(Matrix-iin mur bagana uurchluh ba other shits)"],"metadata":{"id":"pgHX3n8zUjTA"}},{"cell_type":"code","source":["array_1D= np.arange(5)\n","array_1D.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ehl2C5CQUVMb","executionInfo":{"status":"ok","timestamp":1714117717644,"user_tz":-540,"elapsed":320,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a423e513-ef03-4bf7-8afd-0ff7626231db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5,)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["array_2D=np.array([[1,2],[3,4],[5,6]])\n","array_2D.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RE_HYEeZUt_9","executionInfo":{"status":"ok","timestamp":1714117775089,"user_tz":-540,"elapsed":328,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"037477d8-a784-4b95-ab02-4fa06e0abfd4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 2)"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["##Change array dimensions"],"metadata":{"id":"q4cg-flnYbzR"}},{"cell_type":"code","source":["array_change=np.arange(12)\n","array_change.shape=(4,3)\n","array_change"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h60-m56aUuDc","executionInfo":{"status":"ok","timestamp":1714117883010,"user_tz":-540,"elapsed":311,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8b8b6172-3771-4924-9924-fc9c9d4c7b53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  2],\n","       [ 3,  4,  5],\n","       [ 6,  7,  8],\n","       [ 9, 10, 11]])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["array_change=np.arange(81)\n","array_change.shape=(3,3,3,3)\n","array_change\n","##bur iim hun bol tusuulj chadamgui hemjeeseer ch hiigeed baij chaddag."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dk9iFgppM6Pa","executionInfo":{"status":"ok","timestamp":1714349697803,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bd6e1995-50e9-411e-9880-5b259c736312"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[[ 0,  1,  2],\n","         [ 3,  4,  5],\n","         [ 6,  7,  8]],\n","\n","        [[ 9, 10, 11],\n","         [12, 13, 14],\n","         [15, 16, 17]],\n","\n","        [[18, 19, 20],\n","         [21, 22, 23],\n","         [24, 25, 26]]],\n","\n","\n","       [[[27, 28, 29],\n","         [30, 31, 32],\n","         [33, 34, 35]],\n","\n","        [[36, 37, 38],\n","         [39, 40, 41],\n","         [42, 43, 44]],\n","\n","        [[45, 46, 47],\n","         [48, 49, 50],\n","         [51, 52, 53]]],\n","\n","\n","       [[[54, 55, 56],\n","         [57, 58, 59],\n","         [60, 61, 62]],\n","\n","        [[63, 64, 65],\n","         [66, 67, 68],\n","         [69, 70, 71]],\n","\n","        [[72, 73, 74],\n","         [75, 76, 77],\n","         [78, 79, 80]]]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["##Reshape"],"metadata":{"id":"h4Pu_7AgZEzW"}},{"cell_type":"code","source":["arr=np.array([2,3,5,6,1,4])\n","np.reshape(arr, (2,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0dDBiGrkUuHI","executionInfo":{"status":"ok","timestamp":1714733662075,"user_tz":-540,"elapsed":342,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2df6bd6f-b901-4ccd-c4b9-dd5748743e38"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2, 3, 5],\n","       [6, 1, 4]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["##Data Types for ndarrays"],"metadata":{"id":"XWZ0ht8VZY1P"}},{"cell_type":"code","source":["arr1=np.array([1,2,3], dtype=np.float64)"],"metadata":{"id":"y1MAq0WgZZAR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr2=np.array([1,2,3] , dtype=np.int32)"],"metadata":{"id":"5-EnApSDZZEA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr1.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SXS_tEDkZZHK","executionInfo":{"status":"ok","timestamp":1714733663788,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cebb2d8a-5db2-4a3f-a339-fdff9ecf1546"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["arr2.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lm74xJhcUuKY","executionInfo":{"status":"ok","timestamp":1714733664251,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c1c1247c-f42b-4cdd-e479-4fbd14283d1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('int32')"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["arr1.astype(np.int32)\n","## end bol hemjeesiig ni soliod ugchij baina gsn ug."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9COcd6a1UuU7","executionInfo":{"status":"ok","timestamp":1714733664708,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"48dafcef-942b-4671-81f6-eb1a43709dd0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3], dtype=int32)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["arr3=np.array([1.5,3.1234,5.23 ,10.7] , dtype=np.float64)"],"metadata":{"id":"NtYcbUtpZ549"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr3.astype(np.int32)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FYHxeVqtaDjW","executionInfo":{"status":"ok","timestamp":1714733665695,"user_tz":-540,"elapsed":7,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c7c02beb-0d60-4296-c635-eb477003c806"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1,  3,  5, 10], dtype=int32)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["arr4=np.array([3.7,-1.2,-2.6,0.5,12.9,10.1])\n","arr4.astype(np.int32)\n","# integer bolgoj baigaa bolohor toonuud ni buhelchlegdej bainaa gsn ug."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZQHEV6yeaH03","executionInfo":{"status":"ok","timestamp":1714733666270,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"253cff96-fbef-4c6d-c4f4-67a9307d262e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 3, -1, -2,  0, 12, 10], dtype=int32)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["numeric_strings=np.array(['1.25','-9.6','42'], dtype=np.string_)\n","print(numeric_strings.dtype)"],"metadata":{"id":"z-JUgOKfbqid","executionInfo":{"status":"ok","timestamp":1714733666729,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2ace251c-1790-48e5-a13c-0a01d0153098"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["|S4\n"]}]},{"cell_type":"code","source":["arr5=numeric_strings.astype(float)"],"metadata":{"id":"_srHwfFgbqmw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5b8pgiPKbqqp","executionInfo":{"status":"ok","timestamp":1714733667986,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"680aeec3-7772-4ae5-9250-0a53b31bd197"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1.25, -9.6 , 42.  ])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["arr5.astype(arr2.dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MWPaOpLVbqtv","executionInfo":{"status":"ok","timestamp":1714733668392,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cfe71322-11e6-4ef8-f567-5cf801272166"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1, -9, 42], dtype=int32)"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["#Lesson 71(Concat, swap axis)"],"metadata":{"id":"3kYA-EauNYNi"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"xHVQg6WdcscR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Matrix concat"],"metadata":{"id":"wnNaZg26XYPl"}},{"cell_type":"markdown","source":["matrix-uudiig niiluulj baina.\n","Ene uyd niiluulj bui matrix-uudiin hemjee ni adilhan baih heregtei."],"metadata":{"id":"RKFAdPlWTA0L"}},{"cell_type":"code","source":["arr_1=np.array([1,2,3])\n","arr_2=np.array([4,5,6])\n","arr_3=np.array([7,8,9])\n","print(np.concatenate((arr_1, arr_2, arr_3)))\n","#end niiluuleh uydee zaaval davhar haalt baih heregtei.\n","#hervee baihgui bol aldaa ugnu."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LcqhgP7cNyE3","executionInfo":{"status":"ok","timestamp":1714351228338,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c9f0089b-124e-43cb-9bf2-5939c3ba50cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5 6 7 8 9]\n"]}]},{"cell_type":"code","source":["matrix1=np.arange(10).reshape(2,5)\n","matrix2=np.arange(20,30).reshape(2,5)\n","matrix3=np.arange(60,70).reshape(2,5)\n","\n","print(np.concatenate((matrix1, matrix2, matrix3)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rKouJI2dNyHw","executionInfo":{"status":"ok","timestamp":1714351450177,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"89216dae-4541-40d5-b3de-99a9f53a9260"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0  1  2  3  4]\n"," [ 5  6  7  8  9]\n"," [20 21 22 23 24]\n"," [25 26 27 28 29]\n"," [60 61 62 63 64]\n"," [65 66 67 68 69]]\n"]}]},{"cell_type":"code","source":["arr_2=np.array([[1], [2], [3]])\n","print(arr_2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3N0xaqvINyKh","executionInfo":{"status":"ok","timestamp":1714351734322,"user_tz":-540,"elapsed":393,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1d8d5421-0f67-43ac-9ace-c395e0e02e7d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.]\n"," [2.]\n"," [3.]]\n"]}]},{"cell_type":"markdown","source":["##Matrix-iig hurvuuleh"],"metadata":{"id":"5UeNEC5LUjn2"}},{"cell_type":"code","source":["arr=np.arange(15).reshape(3,5)\n","print(arr)\n","#ene uyd bol gartsaagui l reshape-iig ashiglaj taarah ymbn."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZwA5MC-QUkPP","executionInfo":{"status":"ok","timestamp":1714352254730,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d86e5c01-b94f-4792-8c4c-c629b3dc1d3d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0  1  2  3  4]\n"," [ 5  6  7  8  9]\n"," [10 11 12 13 14]]\n"]}]},{"cell_type":"code","source":["arr.T\n","#ene \"\" .T  \"\"-iig shaagaad l hurvuulchij baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7A6TnNi6UkSF","executionInfo":{"status":"ok","timestamp":1714352287307,"user_tz":-540,"elapsed":379,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"17500025-7f00-4787-d219-dd2e19ed8c60"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  5, 10],\n","       [ 1,  6, 11],\n","       [ 2,  7, 12],\n","       [ 3,  8, 13],\n","       [ 4,  9, 14]])"]},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","source":["##Matrix-iin dotood urjver tootsoh"],"metadata":{"id":"QRGFWXZLXJ4c"}},{"cell_type":"code","source":["arr=np.random.randn(6,3)\n","np.dot(arr.T , arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AQi7LXn-UkUl","executionInfo":{"status":"ok","timestamp":1714352436407,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"96bf67c6-bc3d-471f-85ce-f8c14f8a8f56"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 3.67656301, -4.51953466, -1.26281766],\n","       [-4.51953466, 10.47299331,  0.79301656],\n","       [-1.26281766,  0.79301656,  3.31459328]])"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["A=np.arange(1,7).reshape((2,3))\n","print(A)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ex-Y2n8ZXKmH","executionInfo":{"status":"ok","timestamp":1714353273922,"user_tz":-540,"elapsed":423,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6b31404a-57f2-4204-e8b6-f256f00e4773"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]]\n"]}]},{"cell_type":"code","source":["B=np.arange(6,12).reshape(3,2)\n","print(B)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ltrk8UyKXKpC","executionInfo":{"status":"ok","timestamp":1714353277381,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f9b0a9c9-5536-4b4c-a116-fe535e3fd237"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 6  7]\n"," [ 8  9]\n"," [10 11]]\n"]}]},{"cell_type":"code","source":["np.dot(A, B)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LYx85RwTXKrr","executionInfo":{"status":"ok","timestamp":1714353254980,"user_tz":-540,"elapsed":522,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"70e211d3-72f9-4cc5-b312-3bb27c26adde"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 52,  58],\n","       [124, 139]])"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["##Matrix-iin tenhleg solih"],"metadata":{"id":"vLtVvwmCayts"}},{"cell_type":"code","source":["arr=np.arange(1,17).reshape(2,2,4)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ztFhMmSvXKuV","executionInfo":{"status":"ok","timestamp":1714353448912,"user_tz":-540,"elapsed":400,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2dd414e8-ce21-4e6d-c0a4-990e222d66f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[ 1  2  3  4]\n","  [ 5  6  7  8]]\n","\n"," [[ 9 10 11 12]\n","  [13 14 15 16]]]\n"]}]},{"cell_type":"code","source":["arr.swapaxes(1,2)\n","# 1 ba 2-r index buyu deer bichigdseneer 2,4 iin bairiig solij bn."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NFyg6yfVXKxB","executionInfo":{"status":"ok","timestamp":1714353355852,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5cefc2e2-690b-4da1-fe83-785057394607"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 1,  5],\n","        [ 2,  6],\n","        [ 3,  7],\n","        [ 4,  8]],\n","\n","       [[ 9, 13],\n","        [10, 14],\n","        [11, 15],\n","        [12, 16]]])"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["#Lesson 72(Array deer Indexing, Slicing hiih)"],"metadata":{"id":"PNEvpqmZb3j7"}},{"cell_type":"markdown","source":["##Indexing in 1 dimension"],"metadata":{"id":"HyEL6uMUe2et"}},{"cell_type":"code","source":["import numpy as np\n","arr1=np.array([1,2,3,4])\n","print(arr1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XY9Gw1gDXKz2","executionInfo":{"status":"ok","timestamp":1714354401661,"user_tz":-540,"elapsed":405,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"90f597cc-e1f5-4164-9f9a-f353c026f2e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n"]}]},{"cell_type":"code","source":["print(arr1[0])\n","print(arr1[2])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AlRgu1NqXK2P","executionInfo":{"status":"ok","timestamp":1714354439470,"user_tz":-540,"elapsed":381,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1450c882-c250-4de0-9750-eccb8d0aec5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","3\n"]}]},{"cell_type":"markdown","source":["## 2 dimensional array"],"metadata":{"id":"7N9PS4DCfN6F"}},{"cell_type":"code","source":["v=[[1,2,3],\n","   [4,5,6],\n","   [7,8,9]]\n","print(v[1][1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b1942mseXK5U","executionInfo":{"status":"ok","timestamp":1714354515328,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ded337e9-9e1b-4286-f70d-ccf459d7697c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n"]}]},{"cell_type":"markdown","source":["##Indexing in 2 dimensions"],"metadata":{"id":"QvuSkGwPfSi-"}},{"cell_type":"code","source":["arr2=np.array([[1,2,3],\n","              [4,5,6],\n","              [7,8,9]])\n"],"metadata":{"id":"Qay5wzURXK8B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr2[0,2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q-ATtFe5XK-w","executionInfo":{"status":"ok","timestamp":1714736575712,"user_tz":-540,"elapsed":405,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5d6a087c-22fe-4334-fdcb-35c58cd991d7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["arr2[0,0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vYyfg0N5XLBL","executionInfo":{"status":"ok","timestamp":1714736868295,"user_tz":-540,"elapsed":349,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cf96c141-875c-476f-e11a-910b18c114ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["print(arr2[1,1])\n","print(arr2[1][1])\n","#ali ni ch bolno."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyF_0FkpfgxC","executionInfo":{"status":"ok","timestamp":1714736868701,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"54b0b98f-d3a4-4a05-86aa-8f45b28603e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","5\n"]}]},{"cell_type":"markdown","source":["##Picking a row or a column"],"metadata":{"id":"8BaCe5WGgLJo"}},{"cell_type":"code","source":["print(arr2[1])\n","print(arr2[0])\n","# shuud mur muruur ni avaav yvj bn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E2L5KiBSfg0Z","executionInfo":{"status":"ok","timestamp":1714736870517,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"25a120f5-8cee-4528-ecfe-ffa885f05448"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[4 5 6]\n","[1 2 3]\n"]}]},{"cell_type":"code","source":["print(arr2[: , 1])\n","print(arr2[:  ,0])\n","# ene bol shuud baganaar ni avj chadna."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jt3XVFeZfg36","executionInfo":{"status":"ok","timestamp":1714354824118,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"644da75c-1854-47b5-871b-6b718e43c840"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 5 8]\n","[1 4 7]\n"]}]},{"cell_type":"markdown","source":["##Indexing in 3 dimensions"],"metadata":{"id":"CX4CoS5Ggyb5"}},{"cell_type":"code","source":["import numpy as np\n","arr_3d = np.array([[[1, 2, 3], [4, 5, 6],[7, 8, 9]],\n","                   [[10, 11, 12],[13, 14, 15], [16, 17, 18]],\n","                   [[19, 20, 21],[22, 23, 24], [25, 26, 27]]])\n","\n","print(arr_3d)\n","print(arr_3d.size)\n","print(arr_3d.ndim)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dKVtKDzOfg66","executionInfo":{"status":"ok","timestamp":1714355628384,"user_tz":-540,"elapsed":451,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c7863fb9-7fe6-4743-e432-361fad745916"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[ 1  2  3]\n","  [ 4  5  6]\n","  [ 7  8  9]]\n","\n"," [[10 11 12]\n","  [13 14 15]\n","  [16 17 18]]\n","\n"," [[19 20 21]\n","  [22 23 24]\n","  [25 26 27]]]\n","27\n","3\n"]}]},{"cell_type":"markdown","source":[" 3D array is like a stack of matrices:\n","    \n","\n","*   Ehniih ni layer buyu matrix-iig zaana\n","*   Daraagiinh ni row\n","*   Suuliinh ni column\n","\n"],"metadata":{"id":"WywB9sQzjDd-"}},{"cell_type":"code","source":["print(arr_3d[0,1,2])\n","print(arr_3d[1,2,0])\n","print(arr_3d[2,2,2])\n","#ehniih ni layer, 2doh ni mur, suuliinh ni column-nii dugaar\n","#dugaarlalt ni yg list shig shaana."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hpd6UWGzgwCl","executionInfo":{"status":"ok","timestamp":1714355774713,"user_tz":-540,"elapsed":424,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ca5d9d0c-66ca-4b1d-c715-c219936a919b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n","16\n","27\n"]}]},{"cell_type":"markdown","source":["##Picking a row or a column in a 3D array"],"metadata":{"id":"AxOYhpQEkaHZ"}},{"cell_type":"code","source":["print(arr_3d[1,2])\n","#ene deer bol 2doh matrix-iin suuliin mur luu oryoo gejgaan"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GN8hIRuYgv_X","executionInfo":{"status":"ok","timestamp":1714355831369,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4402d6c6-bd82-4057-decc-23c2ebc80b9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[16 17 18]\n"]}]},{"cell_type":"code","source":["print(arr_3d[1,:,2])\n","#2dog h layeriin suuliin baganiig avj baina"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mRPbIn0UgwFX","executionInfo":{"status":"ok","timestamp":1714357772553,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8f28e7ee-d38a-45d9-c4b8-0d8103cfc6c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[12 15 18]\n"]}]},{"cell_type":"code","source":["print(arr_3d[:,1,2])\n","#ene bol buh layer bolgonoos suuliin bagana, dund taliin mur"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YaOQ9d0jgwHz","executionInfo":{"status":"ok","timestamp":1714357928837,"user_tz":-540,"elapsed":360,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"fa7b6afd-d163-403b-bf17-4a675ee202b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 6 15 24]\n"]}]},{"cell_type":"code","source":["print(arr_3d[2])\n","print(arr_3d[2,:,:])\n","# ene hoyr bol yg adilhan, suuliin layeriig avj bn."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZFCPpU9gwKn","executionInfo":{"status":"ok","timestamp":1714358046287,"user_tz":-540,"elapsed":378,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f7e39669-ddec-4f2a-d9c2-d38d0ff8fd57"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[19 20 21]\n"," [22 23 24]\n"," [25 26 27]]\n","[[19 20 21]\n"," [22 23 24]\n"," [25 26 27]]\n"]}]},{"cell_type":"code","source":["print(arr_3d[:,1,:])\n","#buh layeriin dund taliin mur"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oW9Ibaeifg_u","executionInfo":{"status":"ok","timestamp":1714358106362,"user_tz":-540,"elapsed":342,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7cde0f8d-80d4-4245-80bc-8ff24a9fe4b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 4  5  6]\n"," [13 14 15]\n"," [22 23 24]]\n"]}]},{"cell_type":"markdown","source":["##Slicing"],"metadata":{"id":"8iIXM8A0tRu9"}},{"cell_type":"code","source":["a=np.arange(10)\n","s=slice(2,12,3)\n","print(a[s])\n","# 2oos ehleed, 3 3aar ni taslaad yvchij baina gesen ug."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"256jl4eptDOZ","executionInfo":{"status":"ok","timestamp":1714360774683,"user_tz":-540,"elapsed":427,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e862f151-4df1-4c98-b8a7-8fd90f15c4b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 5 8]\n"]}]},{"cell_type":"markdown","source":["##Boolean"],"metadata":{"id":"noGUUvfN5HwP"}},{"cell_type":"code","source":["names=np.array(['Bob', 'Alice', 'Will','Bob', \"Will\", 'Joe','Joe'])\n","data=np.random.randn(7,4)"],"metadata":{"id":"QEl6TyQLtDRP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(names)\n","print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G5qZWii7tDUZ","executionInfo":{"status":"ok","timestamp":1714737622288,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"81c813a9-364b-47c7-a86b-59f95275736a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Bob' 'Alice' 'Will' 'Bob' 'Will' 'Joe' 'Joe']\n","[[ 0.69855991 -1.78706416  0.4221744  -0.31498682]\n"," [-0.82125223  0.45656653  0.96070509  0.15084715]\n"," [ 1.76999763  0.49513279 -0.12803925  0.48926388]\n"," [-2.03607246 -1.22157917 -1.71656071 -0.71165245]\n"," [-0.90431719  1.91314228 -0.12192043 -1.60675343]\n"," [ 0.21709126  1.53990049  0.75589601 -0.50903212]\n"," [-0.1012493   0.75412311 -2.30090047 -0.65738769]]\n"]}]},{"cell_type":"code","source":["names == 'Bob'\n","#Bob baigaa gazar True busad deer ni False ugj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nLuhnVXytDXM","executionInfo":{"status":"ok","timestamp":1714737622628,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9a4e18be-3db8-4c93-f7a4-4f88a9c75b71"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False, False,  True, False, False, False])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["data[names== 'Bob']\n","#Ene deer ehnii ba 4r muriig avj baigaa ni, Bob sda baigaa gazar ym."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ru1Ude5g3vjt","executionInfo":{"status":"ok","timestamp":1714737622961,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8a2cf4aa-2e52-4e74-b97c-11e385a2e1e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.69855991, -1.78706416,  0.4221744 , -0.31498682],\n","       [-2.03607246, -1.22157917, -1.71656071, -0.71165245]])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["mask= (names== 'Bob') | (names=='Will')"],"metadata":{"id":"S1Mz_8KU3vm3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mask"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Qxj_Ubl3vpw","executionInfo":{"status":"ok","timestamp":1714737623890,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c826ba25-858d-4ea4-f631-3efd7a2a1c6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False,  True,  True,  True, False, False])"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["data[mask]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"03MZdahrtDaH","executionInfo":{"status":"ok","timestamp":1714737625757,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2a6a882e-9101-4a28-b9b2-10c5f8fb67d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.69855991, -1.78706416,  0.4221744 , -0.31498682],\n","       [ 1.76999763,  0.49513279, -0.12803925,  0.48926388],\n","       [-2.03607246, -1.22157917, -1.71656071, -0.71165245],\n","       [-0.90431719,  1.91314228, -0.12192043, -1.60675343]])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["data[data<0]=0\n","# 0-ees baguudiig ni 0 bolgoj baina."],"metadata":{"id":"qiaEqEanUkXM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h1slq2GH40qM","executionInfo":{"status":"ok","timestamp":1714361162099,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d93ceadb-b6c9-4e07-e76a-234da5547c7f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33750511, 2.53854428, 0.77883544, 0.76127892],\n","       [0.87298974, 0.        , 1.55129265, 0.        ],\n","       [0.        , 0.37083606, 0.91561537, 0.17949552],\n","       [1.10098356, 0.        , 0.        , 0.        ],\n","       [0.        , 0.16805826, 1.50198238, 1.50728982],\n","       [1.34477257, 0.35993036, 0.        , 0.        ],\n","       [0.01869361, 0.17489009, 0.        , 0.42093252]])"]},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","source":["#Lesson 73(Numpy Unary Func)"],"metadata":{"id":"Aufdb3E6dc8f"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"85A4LijzddHN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arr1=np.array([1,2,-3,-4,-5,6])\n","arr2=np.array([11,-12,13,-14,-15,16])\n","arr3=np.array([1,11])"],"metadata":{"id":"Y2LkDRnZddLo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["abs\n","\n","Compute the absolute value element-wise for integer, floating point, or complex values. Use fabs as a faster alternative for non-complex-valued data"],"metadata":{"id":"SHu-YLnld6dC"}},{"cell_type":"code","source":["abs(arr1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UahvL-4AddPQ","executionInfo":{"status":"ok","timestamp":1714454849320,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"62b2bcf3-b0e3-46ac-93a9-b8a0d8c5138e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 4, 5, 6])"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["abs(arr2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nKxl0D70ddRu","executionInfo":{"status":"ok","timestamp":1714454849691,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a483b3bf-be4f-450e-f49a-204d5f07ff65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([11, 12, 13, 14, 15, 16])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["np.fabs([1.4214214214,-1.42141,2.42,-3.22])\n","#float absolute gsn l ug ym bn."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zrHDC1FtddUr","executionInfo":{"status":"ok","timestamp":1714454933073,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ceccd4a7-df02-4538-8e51-72985b66faf9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.42142142, 1.42141   , 2.42      , 3.22      ])"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["sqrt\n","\n","Compute the square root of each element. Equivalent to arr**0.5"],"metadata":{"id":"pnJPEln5ekGl"}},{"cell_type":"code","source":["np.sqrt(arr2)\n","#end surug too bga tul aldaa ugj bn.\n","#uchir ni surug toonii yzguur gej bhgui."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TYJqdrICekPg","executionInfo":{"status":"ok","timestamp":1714454995618,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"7bc11343-7b22-43af-a1d6-4e4c6d0e2020"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-10-aa262e2109e4>:1: RuntimeWarning: invalid value encountered in sqrt\n","  np.sqrt(arr2)\n"]},{"output_type":"execute_result","data":{"text/plain":["array([3.31662479,        nan, 3.60555128,        nan,        nan,\n","       4.        ])"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["square\n","\n","Compute the square of each element.Equivalent to arr**2"],"metadata":{"id":"sPTFLg_se--k"}},{"cell_type":"code","source":["np.square(arr2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MR5AfpYyekTM","executionInfo":{"status":"ok","timestamp":1714455118021,"user_tz":-540,"elapsed":319,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"3eacd20a-7810-41ed-ab76-344bd25bf25e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([121, 144, 169, 196, 225, 256])"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["exp\n","\n","Compute the exponent of each element. e-iin x zereg"],"metadata":{"id":"LcS6cKVmfT0Y"}},{"cell_type":"code","source":["np.exp(arr1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ukstAPolekXZ","executionInfo":{"status":"ok","timestamp":1714455166187,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"231fffff-d32e-466f-b39b-bb50b3b30bca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.71828183e+00, 7.38905610e+00, 4.97870684e-02, 1.83156389e-02,\n","       6.73794700e-03, 4.03428793e+02])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["log,log10,log2,log1p\n","\n","Natural logarithm (base e) , log base 10, log base 2 , and log(1+x), respectively"],"metadata":{"id":"b2GkWGr9fcCS"}},{"cell_type":"code","source":["np.log(arr2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6X44J5kQekaT","executionInfo":{"status":"ok","timestamp":1714464396005,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"03b1674b-94dd-4b0b-ef6e-beb3b1a8daf3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-8-0fb2bd2eb7ae>:1: RuntimeWarning: invalid value encountered in log\n","  np.log(arr2)\n"]},{"output_type":"execute_result","data":{"text/plain":["array([2.39789527,        nan, 2.56494936,        nan,        nan,\n","       2.77258872])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["np.log10(arr3)"],"metadata":{"id":"k3uR-q6pLmCN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714455253598,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d3aef454-c9ca-44a0-877c-2952449583bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.        , 1.04139269])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["np.log2(arr3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U4VGtodZfxnD","executionInfo":{"status":"ok","timestamp":1714455265577,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e14fa643-6a2d-471a-cac5-f42eabefe8b6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.        , 3.45943162])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["np.log1p(arr3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tB2ufDwOfxqD","executionInfo":{"status":"ok","timestamp":1714455285652,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a6cbbc3e-b54a-4bd3-8cb9-c5036bf44fb0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.69314718, 2.48490665])"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["sign\n","\n","Compute the sign of each elements: 1(positive) , 2(negative) OR -1 or 0(zero)"],"metadata":{"id":"GW8hV1Oyf6OV"}},{"cell_type":"code","source":["np.sign(arr1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d5ac2Gl2f6cR","executionInfo":{"status":"ok","timestamp":1714455384677,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"015d83ce-e0e2-4396-faf4-5b5a25d7c553"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1,  1, -1, -1, -1,  1])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["np.sign(arr2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MuiX5oHdf6f1","executionInfo":{"status":"ok","timestamp":1714455396860,"user_tz":-540,"elapsed":515,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"015d00f4-f9c1-4142-c5d8-5d6497717c1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1, -1,  1, -1, -1,  1])"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["ceil\n","\n","Compute the ceiling of each elements. the smallest integer greater than or equal to each element"],"metadata":{"id":"2Gi29K_HgZV5"}},{"cell_type":"code","source":["arr=np.random.randn(10).reshape(2,5)\n","print(arr)\n","print(np.ceil(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h1d5CkZKf6ir","executionInfo":{"status":"ok","timestamp":1714465147344,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f3462d6b-3335-4ddb-ff08-8b6dc9e0f72b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.48329596 -0.30289895 -1.87509569  0.86568848 -0.9236971 ]\n"," [-1.49383991  0.65319954 -0.56036716 -0.11041817 -0.85936778]]\n","[[-0. -0. -1.  1. -0.]\n"," [-1.  1. -0. -0. -0.]]\n"]}]},{"cell_type":"markdown","source":["floor\n","\n","Compute the floor of each elements. The larger integer less than or equal to each element"],"metadata":{"id":"nEgbTbmogwJQ"}},{"cell_type":"code","source":["np.floor([-1.231,2.321,.32,-23])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rmokCJFqgwVp","executionInfo":{"status":"ok","timestamp":1714455568008,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6c96c5bf-6579-4117-e1b1-a3c00df5fcc4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ -2.,   2.,   0., -23.])"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["rint\n","\n","Round elements to the nearest integer, preserving the dtype"],"metadata":{"id":"ZfCWjB5qg-zJ"}},{"cell_type":"code","source":["print(np.rint(arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d6y_A3Zifxsz","executionInfo":{"status":"ok","timestamp":1714465164049,"user_tz":-540,"elapsed":423,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"43ae923f-3032-481c-b944-cac0ddd79bde"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0. -0. -2.  1. -1.]\n"," [-1.  1. -1. -0. -1.]]\n"]}]},{"cell_type":"markdown","source":["modf\n","\n","Return fractoinal and integral parts of array as seperate array"],"metadata":{"id":"ZnEWNUvVfHpg"}},{"cell_type":"code","source":["arr=np.modf([1.1234,234.4142,-12.342,-320.32])\n","print(arr)"],"metadata":{"id":"JODen7VFUdpO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714465420389,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"91f277ee-17ee-4c49-b713-0440ec28586a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(array([ 0.1234,  0.4142, -0.342 , -0.32  ]), array([   1.,  234.,  -12., -320.]))\n"]}]},{"cell_type":"code","source":["remainer=arr[0]\n","whole_part=arr[1]"],"metadata":{"id":"9TjZTqpXhm37"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["remainer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CWLmsdEbhm7q","executionInfo":{"status":"ok","timestamp":1714465528825,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8791be05-f2cb-4c98-d402-d52dc2a239cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.1234,  0.4142, -0.342 , -0.32  ])"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["whole_part"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hZONBfVIhnJ0","executionInfo":{"status":"ok","timestamp":1714465530589,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cccd4cd8-410e-42db-9c3b-4daefae814f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([   1.,  234.,  -12., -320.])"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["isnan\n","\n","Return boolean array indicating whether each value is NaN(Not a Number)"],"metadata":{"id":"fxkzBLD6hS2L"}},{"cell_type":"code","source":["np.isnan(np.sqrt([21,2302,123,0,-23,-2.32]))\n","#ene deer true ni nan bolnoo gsn ug.\n","#surug toonoos yzguur avj chadahgui tul nan bolood,\n","# tiim bolhor true butsaaj bn gsn ug.\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G4nC7KPzhTHX","executionInfo":{"status":"ok","timestamp":1714466153037,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"eb3c0fff-4271-4419-c5d6-6d8da16b7b41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-29-8bd7fd7b1f10>:1: RuntimeWarning: invalid value encountered in sqrt\n","  np.isnan(np.sqrt([21,2302,123,0,-23,-2.32]))\n"]},{"output_type":"execute_result","data":{"text/plain":["array([False, False, False, False,  True,  True])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["b=np.array([21,2302,123,0,-23,-2.32])"],"metadata":{"id":"6RpFBJheKJJX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a=np.sqrt(b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"URU7p0nfKJPP","executionInfo":{"status":"ok","timestamp":1714466464589,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f6b43e5e-cd3b-43fe-e6ae-b60d706818d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-31-d572d227fee3>:1: RuntimeWarning: invalid value encountered in sqrt\n","  a=np.sqrt(b)\n"]}]},{"cell_type":"code","source":["b[np.isnan(a)]\n","# yg ali ni surug too bgad bgag inged harchij boljen."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"paJVCiS1KJZi","executionInfo":{"status":"ok","timestamp":1714466496829,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6202ba77-8ff5-454d-d6ac-b40679891172"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-23.  ,  -2.32])"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["isinfinite,isinf\n","\n","Return boolean array indicating whether each element is finite"],"metadata":{"id":"5S_yNEqZhwpE"}},{"cell_type":"code","source":["np.isfinite([0/12,-1/312,1/3,23])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZbPdNotLKipi","executionInfo":{"status":"ok","timestamp":1714466555450,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6390731c-3c7f-4511-8106-4917072a5f17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True,  True,  True,  True])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["np.isinf([1/2,-1/2,1/3,])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eJNSg39RKimZ","executionInfo":{"status":"ok","timestamp":1714466601927,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"86a78d5b-9ed3-4742-bcbc-f9e090631c4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([False, False, False, False])"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["#Lesson 74(Numpy Universal Binary Functions)"],"metadata":{"id":"JyRbZmcNNAVR"}},{"cell_type":"code","source":["import numpy as np\n","A=np.arange(1,10).reshape(3,3)\n","B=np.arange(11,20).reshape(3,3)\n","print('A matrix : \\n{}\\nB matrix \\n{}'.format(A,B))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j5k2QVvxhTKi","executionInfo":{"status":"ok","timestamp":1714474654784,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0c0f23da-96ce-41ba-d2cc-2377578d5e97"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["A matrix : \n","[[1 2 3]\n"," [4 5 6]\n"," [7 8 9]]\n","B matrix \n","[[11 12 13]\n"," [14 15 16]\n"," [17 18 19]]\n"]}]},{"cell_type":"markdown","source":["add\n","\n","Add corresponding elements in arrays"],"metadata":{"id":"uRTgz6-_pzK-"}},{"cell_type":"code","source":["np.add(A,B)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cjTHg7tdNH6Y","executionInfo":{"status":"ok","timestamp":1714474704347,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"aec9c3e8-d65d-403d-efb2-0744f969eff4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12, 14, 16],\n","       [18, 20, 22],\n","       [24, 26, 28]])"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["subtract\n","\n","Subtract corresponding elements in 2nd array from 1st array"],"metadata":{"id":"a1w98AFzp-Vt"}},{"cell_type":"code","source":["np.subtract(B,A)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HqZz7byvNH-t","executionInfo":{"status":"ok","timestamp":1714474770549,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"707bd204-5963-4d4c-fa84-488838ae2a6e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[10, 10, 10],\n","       [10, 10, 10],\n","       [10, 10, 10]])"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["multiply\n","\n","Multiply array elements"],"metadata":{"id":"PIosS0KDqQ7i"}},{"cell_type":"code","source":["np.multiply(A,B)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-e5Xo_8sNICa","executionInfo":{"status":"ok","timestamp":1714474844335,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2e63d05e-7680-40c4-ccd0-23f2bb8ed948"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 11,  24,  39],\n","       [ 56,  75,  96],\n","       [119, 144, 171]])"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["divide\n","\n","Divide array elements"],"metadata":{"id":"tOLlDurIqW4e"}},{"cell_type":"code","source":["C=np.array([2]*4).reshape(2,2)\n","D=np.arange(10,14).reshape(2,2)\n","print('C matrix: \\n{}\\nD matrix:\\n{}'.format(C,D))\n","print(np.divide(D,C))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rLZqEKWMNIJk","executionInfo":{"status":"ok","timestamp":1714739177300,"user_tz":-540,"elapsed":429,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ef3d34b9-76b4-4687-a5ed-39d5f790c0b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["C matrix: \n","[[2 2]\n"," [2 2]]\n","D matrix:\n","[[10 11]\n"," [12 13]]\n","[[5.  5.5]\n"," [6.  6.5]]\n"]}]},{"cell_type":"markdown","source":["floor-divide\n","\n","floor_divide(truncating the remainer)"],"metadata":{"id":"5eGZFoYRr9Zd"}},{"cell_type":"code","source":["np.floor_divide(D,C)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mt6nql7QNIM0","executionInfo":{"status":"ok","timestamp":1714475392240,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"40a911dc-2bbd-4b89-d6af-21f59ad63b85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[5, 5],\n","       [6, 6]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["power\n","\n","Raise elements in 1st array to powers indicated in 2nd array"],"metadata":{"id":"PJSnl5fDsoWV"}},{"cell_type":"code","source":["np.power(A[:2,:2],C)\n","#ehniih ni bol A matrix-iin ehnii 2murnii, ehnii 2 bagana gsn ug.\n","#Tgeed teriige C matrix-iin hargalzsan elementuuder zeregt devshuulj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z67m4RGVNIP5","executionInfo":{"status":"ok","timestamp":1714475467438,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"49e81fab-d6cc-4d3b-ac22-dc7c02de3853"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  4],\n","       [16, 25]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["maximum,fmax\n","\n","Element-wise maximum;fmax ignores NaN"],"metadata":{"id":"Cv6eIMVespTf"}},{"cell_type":"code","source":["np.maximum(A,B)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K74d_q5NNISx","executionInfo":{"status":"ok","timestamp":1714475739460,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f43d88b4-9d99-4d90-ac2a-191c6a0dd95b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[11, 12, 13],\n","       [14, 15, 16],\n","       [17, 18, 19]])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["np.fmax(np.array(np.sqrt([1,-1])), np.array([-2,3]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kNlQjZAKuERs","executionInfo":{"status":"ok","timestamp":1714475810651,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bf25ff69-c669-4fdb-a5e7-2e32f82339a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-575f7880c69d>:1: RuntimeWarning: invalid value encountered in sqrt\n","  np.fmax(np.array(np.sqrt([1,-1])), np.array([-2,3]))\n"]},{"output_type":"execute_result","data":{"text/plain":["array([1., 3.])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["minimun,fmin\n","\n","Element-wise minimu;fmin ignores NaN"],"metadata":{"id":"tLOUwU2WsqNt"}},{"cell_type":"code","source":["np.minimum(A,B)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WZVj7_YuNIYF","executionInfo":{"status":"ok","timestamp":1714475649967,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5d0dfa72-5cbc-45b6-e4db-4d8402cdb6c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [4, 5, 6],\n","       [7, 8, 9]])"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["mod\n","\n","Element-wise modulus(remainer of division)"],"metadata":{"id":"LImVEODJsrO5"}},{"cell_type":"code","source":["np.mod(B,A)\n","# B-g A-d huvaagaad, uldegdeluudiign butsaaj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FniunRJVNIbV","executionInfo":{"status":"ok","timestamp":1714475850856,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5405627a-91dc-463f-c10b-7e1e700fa9c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 0, 1],\n","       [2, 0, 4],\n","       [3, 2, 1]])"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["copysign\n","\n","Copy sign of values in 2nd argument to values in 1st argument."],"metadata":{"id":"-T2oTMFoub92"}},{"cell_type":"code","source":["E=np.arange(-6,0)\n","F=np.array([1,-1,2,-3,4,5])\n","print('E matrix : \\n{}\\nF matrix :\\n{}'.format(E,F))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_dlDevc3NIeR","executionInfo":{"status":"ok","timestamp":1714476008750,"user_tz":-540,"elapsed":325,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"41b48abd-7600-4955-a19b-3713cc0d77bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["E matrix : \n","[-6 -5 -4 -3 -2 -1]\n","F matrix :\n","[ 1 -1  2 -3  4  5]\n"]}]},{"cell_type":"code","source":["np.copysign(E,F)\n","# deed taliin matrix-d dood taliin matrix-iin temdeguudiig tavij ugnu."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i4HONUXWu2WK","executionInfo":{"status":"ok","timestamp":1714476014793,"user_tz":-540,"elapsed":327,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"dcecf7b4-8426-45d3-ab6d-7236a18b7962"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 6., -5.,  4., -3.,  2.,  1.])"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["Greater, greater_equal, less, less_equal, equal, not_equal\n","\n","Perform element-wise comparasion, yielding boolean array(equivalent to infix operators (<,>,=,<=,>=!=))"],"metadata":{"id":"wuc8GnmCuc0U"}},{"cell_type":"code","source":["G=np.random.randn(9).reshape(3,3)\n","H=np.random.randn(9).reshape(3,3)\n","print('G matrix : \\n{}\\nH matrix :\\n{}'.format(G,H))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TT0CKP4HNIhJ","executionInfo":{"status":"ok","timestamp":1714476235968,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4024cca3-83ac-405b-f206-8b61ca4043e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["G matrix : \n","[[ 1.34639934 -1.1808665  -0.14678834]\n"," [ 0.6541079   0.50289665 -0.15483189]\n"," [-0.99192396  1.51582325  0.26059018]]\n","H matrix :\n","[[ 0.55239011 -0.22877286 -1.2478234 ]\n"," [-0.85225487 -1.92041346 -0.35205468]\n"," [ 1.12520218  0.44937376  1.32587174]]\n"]}]},{"cell_type":"code","source":["G>H\n","#shuud zugeer ingeed temdegteer ni shaagaad yvtsan ch boldog."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kNJ1gqRnNIj7","executionInfo":{"status":"ok","timestamp":1714476423873,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"175bba91-8f3d-499d-c99a-1c2e688d47a7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True, False,  True],\n","       [ True,  True,  True],\n","       [False,  True, False]])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["np.equal(G,H)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"idWcdVNBNIqs","executionInfo":{"status":"ok","timestamp":1714476269681,"user_tz":-540,"elapsed":953,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d35548e4-862f-4ebb-d9d4-3a61bfd36915"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[False, False, False],\n","       [False, False, False],\n","       [False, False, False]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["np.greater_equal(G,H)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hp_w10Z3NItf","executionInfo":{"status":"ok","timestamp":1714476276719,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b7fe8fcb-2113-4d3b-f8d2-a2f5bfa1caa9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True, False,  True],\n","       [ True,  True,  True],\n","       [False,  True, False]])"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["logical_and, logical_or,logical_xor\n","\n","Compute element-wise truth value of logical operation(equivalent to infix operators &|^)"],"metadata":{"id":"FflEO1OUwJeR"}},{"cell_type":"code","source":["np.logical_and([False, False, True, True],\n","               [True, False, True, False])\n","\n","# deer, door bui 2 matrix-iig haritsuulaad l uildlee hiigeed yvjen."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3YCh4V-zwIRG","executionInfo":{"status":"ok","timestamp":1714476519301,"user_tz":-540,"elapsed":434,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d94ee520-c63c-49ad-a144-b9dc551b7f89"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([False, False,  True, False])"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["np.logical_or([False, False, True, True],\n","               [True, False, True, False])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wqajav9_wIUr","executionInfo":{"status":"ok","timestamp":1714476519614,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c20d1a94-131a-4b36-91d2-d56a61b26e60"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False,  True,  True])"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["np.logical_xor([False, False, True, True],\n","               [True, False, True, False])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rna_I4-LwIYP","executionInfo":{"status":"ok","timestamp":1714476520133,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"db56d0df-0320-4391-c866-d05bea78f885"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False, False,  True])"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["#Lesson 75(Numpy Array Oriented Programming)"],"metadata":{"id":"vWe3MzJENJro"}},{"cell_type":"markdown","source":["## Vectorizing computations"],"metadata":{"id":"OjQgiCG_yIhB"}},{"cell_type":"markdown","source":["**Numpy sang ashiglaad array-g vector helbert oruulan yamr ch davtaltguigeer loop ashiglan hiih bsn uildluudiig hylbar argaar shiidej boldog. **"],"metadata":{"id":"rIZSVy1DyNrq"}},{"cell_type":"code","source":["import numpy as np\n","points=np.arange(-5,5,0.01)\n","points.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yJKOWvwywItA","executionInfo":{"status":"ok","timestamp":1714476982370,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"00126857-50f8-40c1-ffe7-3d81ae06b1f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1000,)"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["xs,ys=np.meshgrid(points,points)\n","# 1D bsn array-iig 2D hemjeetei bolgoj bn gsn ug.\n","# urt ba urgunii hemjee ni yg adil square helbertei gej oilgoj bl bolno."],"metadata":{"id":"LLEyD_VewInk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(xs)\n","print(xs.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cg1vl4DuNKlJ","executionInfo":{"status":"ok","timestamp":1714477038782,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"40ed1424-da24-4fb4-9848-83378db2f6e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n"," [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n"," [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n"," ...\n"," [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n"," [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]\n"," [-5.   -4.99 -4.98 ...  4.97  4.98  4.99]]\n","(1000, 1000)\n"]}]},{"cell_type":"code","source":["print(ys)\n","print(ys.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gYaqcNkYNKow","executionInfo":{"status":"ok","timestamp":1714477039311,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"32d4143b-d7fe-4c1d-839b-e852b7cc5ad7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-5.   -5.   -5.   ... -5.   -5.   -5.  ]\n"," [-4.99 -4.99 -4.99 ... -4.99 -4.99 -4.99]\n"," [-4.98 -4.98 -4.98 ... -4.98 -4.98 -4.98]\n"," ...\n"," [ 4.97  4.97  4.97 ...  4.97  4.97  4.97]\n"," [ 4.98  4.98  4.98 ...  4.98  4.98  4.98]\n"," [ 4.99  4.99  4.99 ...  4.99  4.99  4.99]]\n","(1000, 1000)\n"]}]},{"cell_type":"code","source":["z=np.sqrt(xs**2+ ys**2)\n","print(z)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6L9PDQm3NKr2","executionInfo":{"status":"ok","timestamp":1714477532273,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b6ed10f1-2b87-4c86-95db-7b0587969735"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[7.07106781 7.06400028 7.05693985 ... 7.04988652 7.05693985 7.06400028]\n"," [7.06400028 7.05692568 7.04985815 ... 7.04279774 7.04985815 7.05692568]\n"," [7.05693985 7.04985815 7.04278354 ... 7.03571603 7.04278354 7.04985815]\n"," ...\n"," [7.04988652 7.04279774 7.03571603 ... 7.0286414  7.03571603 7.04279774]\n"," [7.05693985 7.04985815 7.04278354 ... 7.03571603 7.04278354 7.04985815]\n"," [7.06400028 7.05692568 7.04985815 ... 7.04279774 7.04985815 7.05692568]]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"XgN42HTuNKuo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.imshow(z,cmap=plt.cm.gray)\n","#plt.colorbar"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"YKsRONV1NKxQ","executionInfo":{"status":"ok","timestamp":1714477802899,"user_tz":-540,"elapsed":479,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6c6fca6d-7481-45ee-e2f9-bdd4e6c354b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7d8a8f6d97b0>"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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cEJBRWRnTR64rOynZpouKQI6zR+iZQGpJAscCLDycs0O6YMP9pZf6dyDVyrT2nk+tOPI+lMtrIYAJ+RYOi8BUsmgXyo+HZerr+9HSf2VfBdKglDuuxS6kbK8rz5Bpdki50hGI517ZV1M+3kK5eTXXHMNveY1r6EjjzyS1q1bR+eddx498sgjS2x+/OMf0/bt2+noo4+mI444gs4//3zas2fPEptHH32Uzj33XDrssMNo3bp1dPnll9MLL7wQCWVREQhpttrAFgVYKkO2mqNAkiAyL0BZsWtlHqA0ewuEks2+ffvM6drID2+bfEt9tOivrx9N/PpK7pN2/VI/kfeNdy2ST+s9U1KW9xV5z0aOk//8XIsPPc9jRtp4ZbnQtlY5qhCk7rzzTtq+fTt95Stfodtvv52ef/55esMb3kDPPPPMos173vMe+vznP0+f/exn6c4776Tvfe979Ja3vGWx/sUXX6Rzzz2XnnvuOfryl79MN910E33qU5+iq6++Ohw8ejOsG4pO86Fl6FZz75z30SegEB9IGa/jg7xkq7WVfiRweG3QHw9Krfpp/RONTVIptNB+WsGK+7TaR9+7Uj2P3ftseD755yD592wj57lPrw1Slt9rq0/t9+S99yStmEWsmX7wgx/QunXr6M4776S//bf/Nu3du5d+6qd+im655Rb6R//oHxER0Te+8Q165StfSTt37qTXve519MUvfpF+/ud/nr73ve/R+vXriYjohhtuoN/8zd+kH/zgB3TwwQe7/S4sLNCaNWvoy1/+Mh1++OHuG8Uq529uyTZSZq1DaW987xz5awit48fI7kPEn1Um9VPzik7poWVJtd+Xsj5KFR+zkKxpFKkOLUvimwisY6+M++Q20dfcn2XrlSFtpH6sY7SO+/b8SOdSX9xniZ+oP6/86aefpjPPPJP27t1Lq1evJk1VX+veu3cvEREdddRRRER033330fPPP09bt25dtDnxxBNp06ZNtHPnTiIi2rlzJ51yyimLgCIiOuecc2hhYYEeeughsZ9nn32WFhYWlvwQ1WVSRN1tX0faoedDABTarwQVJHtCf7x7jPrg/lpNFVrtSn32/SO9l3J5GRZ6nZLPFrEnf2hsJe933o/mQ7qXXp30HoyeS31pNp4dWlZbbql448S+ffvo0ksvpbPOOotOPvlkIiLavXs3HXzwwbR27doltuvXr6fdu3cv2uSASvWpTtI111xD73//+8U67Y3qlXe5fR15I3gDg+ZTOkc+CPw4AijpGKnvMnuSPthoWYtt6ZEypG4M4hlLzfejJJ81W8z5xop8o4O3SSJSr/XjbYyI1K1YgT89gp9zf+k895nbSO2QMu5Ps0XLLRVDavv27fTggw/SXXfdVeoC1pVXXkmXXXbZ4vnCwgIdd9xxTcmOlnnAi8JIa+NBRIKDZsuPI+tbJfV5H9zO8iG9lsBJqqsFUwtIdb1N3YKFBYoSSXBJMVhtUFhpX9xFriMHCI+pFk75MQoqr18JXLlfIhk80rnmn/ssAZPlj5fXgilXEaQuueQSuvXWW+lLX/oSvfzlL18s37BhAz333HP05JNPLsmm9uzZQxs2bFi0ufvuu5f4S7v/kg3XqlWraNWqVWo8UTDVTPPl5VIciD/NxoOeBSikTrp2pE2k3lpUtV77hFMpmLxzrb++FP1+lDfgo2DTsqESYFqA8eLUBmdr+7gU07xBJcVek0VpPj07DzQWfCQfXhtNoTWp2WxGl1xyCX3uc5+jO+64gzZv3ryk/rTTTqODDjqIduzYsVj2yCOP0KOPPkpbtmwhIqItW7bQAw88QI8//viize23306rV6+mk046KRKOCgoLLKU7U7SykmlDBGD8+iz7rgGFwhHd7ir95HEh36Hyfqx1Ju8a0R++Cw4BVGlfyI8lKVbrd1vbf34/vN+55Su6xVyySX4k+xbvhbwPzyevQ85rdudp51471Da/t54Pr05TKJPavn073XLLLfTHf/zHdOSRRy6uIa1Zs4YOPfRQWrNmDV100UV02WWX0VFHHUWrV6+md77znbRlyxZ63eteR0REb3jDG+ikk06it771rfTRj36Udu/eTe973/to+/btZrakyfqgIDfLs7V+kTXb1zUba3egdS75R/y2OM79W314dQicrFfJh2YXPdZ8S7I+gJEPZ0RIVsTFr6dkqs4q531o/r31peQHeSipliXlsczjwbFEpPaHTP9Z2Q+SDaHrSd6UnVSmxcftvTpNIUhdf/31RET0d//u311SfuONN9Kv/MqvEBHR7/3e79HKlSvp/PPPp2effZbOOecc+v3f//1F2wMOOIBuvfVWesc73kFbtmyhww8/nC688EL6wAc+EAmFiOKZlDaA1QArL0d8WjZelocAqW9AodN7HmBKNllo7TWbLsCkvQcj9vMSBxcKrcg0oTYVWBKntcbkgYb76fvBsZotcm6BAwWJ9vvo4ukRmj2vQ1X1Pal5KX1P6ktf+tKS70lJA7Y2WCP2Vlnt96E0f14761yq6wtQUTB5cEFfS+GkgSkKpaFASsqUvDpebvkY0vejvLZIGfeh2aLHmv9IO8Sv9N0s6Rwpk+6B1dYr59ds2a9Y8ZPvSaXv11rfkxr1s/u0ASIfBJOkzRKWvVQuASUvt8pQf5oNcq4ByrItPY4ACgFMl3DSgITAyYNSFFJIfR9CsqFc3rQdkslwv8guPuk1j0d6yKwWg+Sj1fP4LP9SOyIsi9LuWUkWxctWrCif9isp53WoRg0pIh0yeR26sFdabtmhZalcs4meI5mZduzZRdafpDIre+oaTlEwjQFSHnBqfWjAQv9xnQWrFlOAHjS9/ucBqtLz3GcJmHiZFKNla5VL0EN9WRo1pCyYWNDS2iDlNdvXpTJvo4QUt3c+b0BZsOoie2oBJw1MJZCyyrX+a1TzL9aj4oMbj8GDXQ2srKxK+uIuklnx9lbMpaAiimdN3rll45V5/mrLOahKwJRr1JAi8jMpdLMEUl6y3dwqQzdKeCDJz9GpwxaAQsGEAqoVnCTItAKT9j7j6vP7Ut73o0oGBkQSsEqfFpH7ifwHXmv6T+qTH6dzr73nR4JJil2CYGkWxX3yPpNQCEn+NFuknGfdVhtUo4dULg9YJWCyfHn2VhkCEw0w2rkHkT4AJQED3QFo9anZ5q9SWSmcUGhpfXhqCQ7rg6/FVvpkCK//6FSg5McCngYubfoPzaykqTQLamhdkgUV9Fzz2eW0n2VvwQfxhb4/Rg2pfICVBpIWmyW4r4gf1Nay0SDCz4cGKK0tf9WA03rXn2RTcqz51voqrUflAUUDWOQ7UpF+JdC0gBWS3SDTd1L8KKiIXpop8WPtXPNr2SOw6nsbeQmwrDpEo4YUlwYCqw4p9760q5VrtrXThtp5KkPs0bouAGUBpm84IWAq+a6UVe7VdS1poNB273mZCPfLBz0OK9SHtcYh9cevDfnibhRUXnsiPyvSsh8NJgi8pHZamVUuxVfqR/OVt0M/A6OGlAUlLYuy2uXlVruIH17mAS8CJz4wcxB4515dZAMG0laz1QDjAc1qa9l6ZZo/yS5aFqnvS9JAlVSyKcODVW7jrTtJ2ZG35iS16wNU3rmW/SAg0my09ancro/ymjpPo4ZULgQuKFDyOnSaL+o/AicNKETdP6XCs/Ngg4BNaqO9zgtOmn20LFLvKZLZRP0mlXw/SqpD1pu8eKS2LdaZWoCKiER/mi23z881n1o7Hie309pr/ZRsopDqcl8StND35qghpV1onll40ELKo2002xbb1/NzBCQIkPh5KaBK1p9aZk+evVa2XL4vhSgKNglY0XUmFFZediVlVVI7Xpa3QWPUQEUUg5F0ng/eFjDQslowcdv8mlH/kTqp3tKoIZWUD6SRDQ5WXe4LhZkFl9brUOhWc++c99kaUBasWmVPLeGkgakLSGkxoGrx/ahoJkQU/34U9ydlANG2WjsENihkNMiVZlG5PfdZCys0A4pArEWdFFeqQ//QWRaQkhSFUmldaXm0DPGnQQU97xJQFmg8qCHt8le0Pbe1jiN1ubr8vpTnu6sv+WrZVapDB59IVuW1QzLE1KY1qKR2RHIWpcVTmkXlZVKMlq0FGCk23sbyJ/n0+tM0ekjlg6mXRVkg4XXWlGEUTC2m+fIyy1/peV+AQqf3PLh4MGsBpwiktD48oQM6F/Ihl+JpCS4EVmiGlXxE/lmiNpVnrTdJ/URARRTPmjx4dbGNPAomFD5R8KR75023Who9pCRJoOB1Uj0Ku0h57TQfL0M3SvAB3zpHpw5bAgoBkwSYlnDyIGUda761vkrrS6VBzPp+VGTKTutL2xihrTdJ2QoSV2QqryWopHZEftakQad03cjyV7LxITpVZ7XL5dUjGjWk8gE3mkXxess/2g7py7O3yiIbJaQ+I4DS/KPt0rFmb9lqgEGAVgonBEwl35dCPpRdgYpLm9JJKv1+lOS/ZBdf7gNZc/LatAZVfm3IY46IfHhxn0lSvxGItdz4IGWqSDt+HaXZ1KghJQmBjgWRmilDXl6bkXm23rkHsK4BJQHDs/XaIK/e1GCkzAKT9HvxbBA/niLrPp6fXN52czSGKKyQrMrKpvI+W4CKiMQ2Ujtum59b7T2frab9EPuIL6+d1R+vR9/Do4ZUKVii9Whd6/JckXUoxEaCgGWfjmsBJYEFBVQtnFBISb4kGwRSVnnUpmtJcCEqX8fSsg9kvcr7S94DjxY3AiqrD6ldTRYlwaAETLycx4fYI768dlJ9sinNpkYNKS4NKnmdBR5rYIoCq4/t60hbPshrA6tn3xpQEkDQTRVWP5Kt1p7bRMGkvR+QshIbovJ1o6i0bEgakJB4uB/L1gKCBg6tP/SLuAioiF4KlcjuPM+GD+JRMJWADKnzsqmSbEuy0TRqSJUCidtE2iN11mYJDy5IuWVnlSVxgGqAytt3BSjNXopPqqvd9Sf54PUWmLxzrYwL3RnY5bZyCQBodlUKKyurkqb/Sr8bFQEVEYn3AmlXO+XHY04qAZOUuVjw8MAyr2xq1JAi8p8ukddZ9d7aAwI0rQ5po/lpuX3dAqh0LkHXs81jtmwQQFmA6RpOLSFVsjVdE+ILeXxRSbaFrDVJ60v8NffR5YNja0CFZFH8eiwQees9VlltOQqX0rUlpF6zQTR6SHHlA7MHiNp6qa7FxgsJDp4tUoZsNZcgkdt4tn2vWVntpFetvXSNUr1XVwMkDxroh1yKoa/vR0V9SGtV3E4aDDWYdAUqK5a8DZENK6TMy4AiwIrCxQOPBTykfX596B9Jo4aUtu6Ty4JKqrf8lAKtBHReuWdrlWn+vDaRqUFki3w69kAjQaY2e6qBk3aMQgn9QKJ2lrTBJVcJVCSAcP9DfHBsLaiI5CxKuo4+nx7B7S1AIFvSpXYIdKz2iA9Po4ZULgsYpTbR9shmCRRM6DRfXm6VlewO1AAltS8FlAQUD4CSnfVauyWdH3tg0t47iDQ7dHpOs5MGrSTtKQ+RPnO/2i4+bf2pxZpT1F6CjwYq6V5o8OpiG7ln69WVTvFJ9USxbEqzSX4QLRtIcaFAKl2L8upL6lJZl9N8kp3UDsl0WgLKgpUHNc1HLZxQMEm/R8/GkjVIlwjNgoj8J5xbsViZkecvsuYk9YdsIffg4601IdN0vI3XzvOHTvt5dfl1z2vtyfOjafSQQmDE7Ur8ePUtpgy1Os/eKrMAIvXhtbFg1gJQFmg8qGntLDsLUpIfXo+ca2WWrMG5Vt7aSlJkqzivy31FHxyb2tZ8iVeys+AjtcshgUBHAksUTNa94OWo/0g7pK0XU8QPotFDiguBljSAW36i9VYMXp238cIr92w1Owtq0nmtrWSj2Uv1WlkLOGnvCw1kCKSsckutAeVJW2eygJRDR4KBNo3HffAYeBZhrT1p/Wig4rba9B2Pw4KLBtmkCJgkn9xea6O1y6+7dTblxWbZeRo1pDyQcBsEOFHoEPnb4FHfrcuj29clf1IbC1CIrdbGs5ds81d0WlC6J7w9r0OPo2XzFrKGhcDK8s99WH1rU3ManFqCSorJW8vKbSSwlICJl0v9I23QOqnea5/HZNmgfVkaNaRyITDK7VplUZHMx6tDNl6g5ZF1Lat/qc08AGXBqvWuP8nGOkbOtX5aqgQiuTxgtYJV3w+O1exyW6KXQkbzK9nwspppP6scbaO1k9a50Pa5jQUaFEroe2jZQIorCi0ESIifSHsLdiVgssqtMqR/KU4NNpJPC2QSLBCgWW2QV2RLutSOH0vnXQNJktRnS3BFYaVNAWqbI7w+S0BFRKKdZKvV57Hn/rgNL+O+rfZeuTZVh8KspL6ljWSHatSQQgHCbWv89VWPtNHKo9N80c0Vmm/Lp+TbApQElvzYyp5awMkDFj9GoVQDDE/alEyuWmjl/XBYcSgh7WseHIuCSqqzbPP63IbHHIFVq/KaulTfMpvS/KC+EI0aUlwotLw1JMlfiR8vHmlA9/r2yku3r0vXwc85/DTotASUBBp0U4XXzrPnNvw4si3dK+9K0tpGrshjibRBB9lybmVVpQ+O5fYoqDzbvEwa9K2MxsqAuK1kL5VbvpB2uUrWnkpsLLtki34WRg0p7yJRaCF2LWwi7aPlHnA0P0jW5YHB6k/zFwWUZi/1I9VF1620sgiYtPdAF/Kyl9wuV3SdCYWVlVV5oJL60tpodjwu7+kR6HRe7bQf4oOXW754neUzr9emD5H+uSw/Jf64Rg0pIhxEyVbbnBD1iWRjCLCs7c4RYPGYED9o1mVNB/JzLdvi7XNbXh4FlAWrLuHkQalPSJWID3xJ2lMWeNscQtYgyttIMWjrVK1BJcWR+0Wm8xC7vByFiAUXzRdvh9i0XFdqkVV5Gj2kuKLQQmxb2Hh9ldTl5S2n+dAyfu5Nw7UElAUmD2rSq1Rm/QHhHUvnWllXsqa4JNska+0H6ZP7QKYPvXWkElAR6VmSlSFF16eQ7ErLXBAwSXVaZia11Wy0a6jx49nlPtH31KghFQWRt7iNQCv3Uwok7sdqH6nL6702aNZVMh0o1Wsws0BmwVc6ttpEXr2sqQZSVvkQ1AJW3tSUBqxSUBGRaMdtta3pvD2P24OV5Y/bon6sdi2yqRobbudlSahPTaOGVBICBc2+1g4FUil4rLYWfK02JdN8qJ1U78FM8i3Z8lfpuHRThdRWskGPpfOkLran1zzVXIOPlBXl9tqr1L50zQkBlbT5gsjOkvJ63gZdMyqZ9kM3UfA6qb51NmXZREBTCyWuZQEprgi0UFsLCFF/lp9WQCstl67TspP8SW1aAcqCFTq9VwunCJi6AJIkqZ8ouHJp6zqoXwk6qa0HyBagknxLfol0UKBAiU7jWVBAoVWT4URtLLtkq01nWr69sTlp1JBCIJTskA0TuU8UWhG7Ej9eXXTKULsPHsg0O2s6UIuzBaAs0HhQ09pZdtpxCZTQDycq6y/kXCXQisIKycpKvsRrgSpJympqp/Nqp/14XTRb8oCCrAWhwEHgFfFXas81akglocAosc/tvO3HKJBQP5E+kDpk+o5Izyy4redP6leDTTqPAgqd3msBJw1YkW3pWllraQNaUgQweZ0EhVSOtrXWqUpA5dlqfonkgRm1S+XeNB5vw+PMVQstxAe3k+Iv8Vdq72lZQIqrS2hx+xqfkXrJxsoOEdhJZd40XyovnQ6U6rW+NTstBqtd/opMC3p1yM4/6dwr70rSIEkkfz/KAg73J2VV0hqVBioNTiioiPQsSauXwKLBKrKO1NU0nleP7qyLwsuz4/Ye7Lg9+hkYNaRQqOSDOdImAi3UVhqIo34Q8Gh1kc0VeZ1n69lxkPL61oCyYFW760/ywev5ufa7bLVWVfOwVx4HH1yisOrrwbFIlmRN01nrSVEAST55nVZfmk15/Ub8JDt0TUl6P0zTfYAiUClpkw+KEWjV2HnxoVmUBhWpPDrN50HMmoqTznOfEqAk2CBAs9ogr17WZEHKat9Cmm90/UkClgYr65W3j645lYCKSM+SkiRQSAM8Wqb5zO+h92SJqE+kPWoTsYvaJqGZHaplASmufFBDB4gotBDblnZWfSnQWoBMsuV23EaDTgmgLDBp8Vr2+auXNWnHfW6e0AYAniF5/SGwQmMpXXOKgorX5+el03kIgJC1KqTOy148cGnXYPmxfBHFAVMCsdQO/QyMGlKRDzoKIMm+xbZzIuxRSkisnh8UaJpPxF6DkwYo7dzb+FACKM0+8upNDfLj6OYJq7xW2voTEakwkNoisLKyqsiDYz1QEZHon9dL19Dy6RFWueULaYcM+CgUEMBF7KL9W23QdkmjhhRRLAPS2pS0axETYhe14UKmBaO7/jRgSf41nxrMJNjkffO6UkC1gFPt5okW04Dod5akPj345G34Lj4POrwdr+cw8kDFbZOkei2OvCwKIB6jZG/54nWSzxooEbX/Um6JfSQWVKOHFFc+2EUGgSi0IvZ5LLXQ8vxY1+/5l8ojICu1k+o9mFnHXWyqyI+jmye0Ni0k+Y3AJ9kjwNF8S+Dy1qkioCIi05bXS+d5mVTuAUiCNi+3fHk+pXrNpgu7XFHAlIIMGWeJliGkJEUBlLcZyppWCz9SubdZQoOWBBUrM/LspDYtAGWBCQUUCqf8uI91KWQ9ikiHlgSSCKy8zRG8XaunRyDTeda6U26n+ePlUt+eL16ntZeuw+oD8ePZRf3WtpHaoRo1pKLgkdpFoYW2yW1brGnlfhBooTv1kLrS9SrEzmrTElASeFrACQWT9TtrKW2NJMl6YrgGK2mazdocobVDQMX9a6DicUfWpyQ76d5Zda2yKak9auPF6NkjbaT3Z8mUX6Qd16ghlYsP9F1O9bVoU2uH9m9BCYFPdL3Ks/X8Sf16gKqd3kPhxCGqXTe3lc6TaqYBo+tReX/atB23sQap6JpT3kYDleSfqHw6D7VL5doaEQqzkvqkIawpWfegZT8RLRtIaYqCJG+DrCNJ/bS0R6Hr+fL6Q9t7sWl+EDutnVQfAZQFnyigLDhZsXexJtXVehS6DsVtLPDwNkN/eoRXJ8XG21rZFOI/asfjQuxL4VIDJf5Z8jRqSEXAk+yjMNHaovYo6KLQsuzyPhEbL3atf63Os/XseGy83oKZBSgti8vb18IpCqboezipj/UoKWNCsh6pLws+3J9my+v5fdCAptnx8tRGgwsKNKketamxs2yjvmv7SZLuYzTLGjWkiMqm3Vq0L2kXaZPbeWsdnk/PJtKel0en+TyIodOBkk8UUBw8EoAicELBpN37ltKm94hi61HSNF3uI/ejTf95a08RUBHpU36ST68tL5fuH7KmEsmmPNhEMi8tHsseaROJ2+uz1ZTf6CHFlQ9IJeDiYOgCQKVtEFsk7tIsyoohAjLJVgKJZNMSUBqAtLZSvdSe22nnSSVTgdZW8Pxc6geFFfed6tGsS+rDAhVRbDpPWk/K5d0L6wu3pZkQMkijsCmFkge72n60dpG2ES07SEkqAUht+xJYRvpBbFvYWHWlu/4k8GgbJaR23rRdKaA8+CBw4nHnarku1Wo9KtVZsLKyKgs8Fpy4vy6m80o2Pmgwk+pa23AgD23qrhRmmg90LB01pFpBJ+qjtG20HQcdalvjz/KTxx7d9RcBmWVjZVutADX0dama9SgEVuiUl7UBwgKV1pcEMt6vNNhrkLHKNRhYwOL1NTZof6V+a9rkimzCkPrmWV0J2EYNqSRr8OzDRyn0SqCF2JfYlfrRQFMCMstOgk4EUB6ENABZdak+f9XsuL1XViJkPUqyL5nis9aVSkBlTefx87xMKpemuywYeKBolSnxvlra8ja1U35of5aPaU3KUQk0WvooWRergRayuaJLGytuFGQanCzo8PMIoDhgWk/95fXaeVLkD6M+1qOQKT4pu+H9S6AiksFjbaRIbSIA6mIXX8SGX6cHjShgasBSC5QWUEO1bCHFNW9olbStBV1NLBEbqbwWZJqtZVMKqGhmlb/OY12qi/Uoa4ov96FN/yHZFq+zbNF1J14uwY/78eq9bEqzQfoptS2x19pF2hK12UYuxYKOaaOGVClsUttacNX4KGlbY99XFiVBRarLfXlw0nbyaf5yG63OK8/79eq4DT9uuS7V1XoUt0EyJw4EBFREsem8KIC0jQ9aGytr0fqL+pHi8fxyW8S+NCatfaRPNI79ck0KHYhRXyXZi+Uj2jZyLdw2Cq6ubKx4tOvTAOfZSf48eEXKeV1+fVq9ZCPZe2URRdajPFghGyc8UBG9dJAvmc6LAsiy9wZfJFOJZDMRWyQ+pI9I2xbtW/uRNHpISarNkFr6KsmYtPat443CCNn1F+1Dg44ELNQur28BKBROfaxLtXxenwQjKwvyMqfIZgp0Ok+y47aaDw692myqZaZUOqhHwde6fWs/iJYlpLhqQdHaV2n7knb5wGu1iWSQVgyWHwt2ks/a6UAUUBJkLAAhcOIx56rJ+LX1KO131vcUXwRUeZkFR34dFjg0YKH1qA23Q22jU3ClU36pT95fKUxq4pDiyl897ReQktQVuEoGIB4H6oMDCLkG9JpL7KL1VjakZTR88EenDSV7BFClU3/8uMW6VJ/rUSVTfEjWFMmAclngiOzi08CFrpuUZkpjyZKk92BtlhS5v5JiK2pMH/nIR2jFihV06aWXLpb9+Mc/pu3bt9PRRx9NRxxxBJ1//vm0Z8+eJe0effRROvfcc+mwww6jdevW0eWXX04vvPBCuP8WgMlVux6VqwUA+8i2WmZano0FYAtYEpw04HB4lADK85/qrPrcxgJuix/p95B+LFvpHkl1/F7lfjX7vNzqW7on3M76A0eS9/5HPyORz5L2fkLalIwRyPug6xi6jCtXMaTuuece+nf/7t/Rz/zMzywpf8973kOf//zn6bOf/Szdeeed9L3vfY/e8pa3LNa/+OKLdO6559Jzzz1HX/7yl+mmm26iT33qU3T11VeXXwXpH6oatbzhtb5K284z07LqI4On508bMPP6CKCk8tyPBafU1huEtfdDDhj+UwMszU6ql+ry+5DqrPuO/O4kH97v2LpO672W21iy/ETisdqkfiLqAki1Y2QXQJJUBKmnn36atm3bRp/85CfpZS972WL53r176Q/+4A/od3/3d+nv/b2/R6eddhrdeOON9OUvf5m+8pWvEBHRf/2v/5Uefvhh+vSnP02vfvWr6U1vehN98IMfpOuuu46ee+65Nlf1/9XFTewSXNG2JZlftE/ejybPxvOT4on8hc19aTCqBZQVW/6KZFe5L+nHUhReUlsLVtr9joJKui/SfZbuk3R/tTU/6z2MvMcjn4UoYLwsFumrFGitfHBpf8x0rSJIbd++nc4991zaunXrkvL77ruPnn/++SXlJ554Im3atIl27txJREQ7d+6kU045hdavX79oc84559DCwgI99NBDYn/PPvssLSwsLPkpVRfk54NYzV86NVOOJddWk2nVxIHWS2XoOpQ26BHFAKWVc+BI7TQoaUKAw+UBi9vm94LfEw9IvJxfL7fVyrTB07pm734gWVBXmVLNmNJiTGo9rnUxTkq+EYU3TnzmM5+hr371q3TPPfe8pG737t108MEH09q1a5eUr1+/nnbv3r1okwMq1ac6Sddccw29//3vj4YKqRVgNL+1v+QaP11nWho0JLuSLIrHo9UlSX3Urk1J5ZIfXsf7l2LXFPk9l3w/Ktl4Gye0HX55eSpLMVs786Qyqzz3mdvweuk+8HrNBu2Li9vUfNG2doNEpP8+/Gm+S79cHLJ+7LHH6N3vfjfdfPPNdMghh4Q6qtGVV15Je/fuXfx57LHHFuuQQTKq6F+yffqsgaqUAXiKgA69Ps9Gq7dA5q1DSWUSiPj9aTX1x9tbP1LWhbTjikzx5a+pzivnfrgtv8eRcu16vPfO0DKlVuMIel3ReFqMbV37DkHqvvvuo8cff5x+7ud+jg488EA68MAD6c4776Rrr72WDjzwQFq/fj0999xz9OSTTy5pt2fPHtqwYQMREW3YsOElu/3SebLhWrVqFa1evXrJj6Subr7kuwtwzctP6YcVHQiQ6S0r49CAZZWXrk2lOg1O3F4DjFbP/SDrUppdyXpUigmts8oj8LLsrHLvfRZ9L2pxafFEPlPW+wRV63GmNh7Edxfjba4QpM4++2x64IEH6P7771/8Of3002nbtm2LxwcddBDt2LFjsc0jjzxCjz76KG3ZsoWIiLZs2UIPPPAAPf7444s2t99+O61evZpOOumkRpf1E3V9E/ngVCtr8ToaV+naVvSaIjEjvw+rXssekalEXsbb5rbW9J6VWbVal9LilhRdj9LqtUG5ZC3KK8vbWuUWzFq810psS2Lp2kdSa8Bx30TtMrqIQmtSRx55JJ188slLyg4//HA6+uijF8svuugiuuyyy+ioo46i1atX0zvf+U7asmULve51ryMioje84Q100kkn0Vvf+lb66Ec/Srt376b3ve99tH37dlq1alWjy5LV5S9R66O1vxpwlfqIto0ODkgWpU2dIdN8RHi2hKw/8UFbm+6S6nkMniwb6/FHvF2Lp0oga1F5zN4Xa71yz59mE11TKnlOXosvyo5hHam17xI1f+LE7/3e79HKlSvp/PPPp2effZbOOecc+v3f//3F+gMOOIBuvfVWesc73kFbtmyhww8/nC688EL6wAc+0DoUSPkA1AW4ugBji3hrsjYPLqWxRv5CRmKKlnF/6RUBF68j0rdOS8e10p4ooQ2s2sI/AirJhwUar631dAmpHrUpsZXijrZLfbZ6JFFLX5Jvrq6A5P0xoqkaUn/2Z3+25PyQQw6h6667jq677jq1zfHHH09f+MIXarvuTH1nW63T/NKpx1IfkWtBbb1YvBg18Fhl0kaC2swqL+fH0nkLSVmTBCsPSFq5VBbdrccVyaa6yJRqs5wus6SW0KgBb0Qt4TfqZ/fVDMjRfroGVxfZXIuYh5hpRfqT1qusstxnF1N/fUAqydpyHgFSAgiPOVJmZVi8HW+v1Ut2nm2kf6+/mm3kWhzRWCx1CTurn9Z9jRpSufoAidZfF6Ds4nqWS6aV9x+BFlImtY1mVryOx2llVqjyp4t75S0eECtlOmhZEgKl1g96TX65SqBU0rZlHPPyzdVXNpa0bCAlqU9oSf217pMPzrX+W8Rb0r51puX5ktpqMNIyHcvWyqy6gpSnHCx5JsSBlGxL1qK8svz6tIEMgU0UEhHYWX2Vfvm0RRxojEl9ZUnz2ECxrCHF1Xe2JfXZtf/arK4WhDwOpH0000KAhE795e00uxJAWXBqDSktq5Ls8pi7eHpE3rYkm4ra5X3y60TUKivoI0uqhWakr6R57upL2q8gJanLnX2S+gJlS/99Z1socBE7zaa0zAKUl0VJkJLOW4tDLLpjj8eJbi3n/pBsyrLjMUQzlFYDcMtsy/Kd99GF+uyLa98+/4n0Sfs9pLjmkW3VbAdH1DLTIqqPtybTKs2iuI3XziojsgGFwKl1NkUkT/FJA3MOH2/HHgKgLqb4uK88fkRS3KUDcNcbG7qYEpxnX1b/KYaIJkgB6htaffTZGsY1ICyJpRZayMYLXsbbclsUVtYxohw+kak+3sbKkkq3liNbyC0hvqx2Sa2m7VoN5NK1dAmJrq5jHv2PGlJ9bD+X1DozQfvsemqydR81EIzGUQMtFGRWZhXNprrIpCRpQEPWovLYIlN8vJ0FG+6nNFMqGQRbZluS76SuASG9f+aVJXXR/6ghldR3luPFMK9sq4+t8C18lcTJAdqiLy1jQkAmQUkCUV+Qsqb6IqBK8dRM8bWGUotBsOuBtM9t2X1vAfdimLagBzUPWCBx9BlLl322XD+ruUctoVUy9WcBCoGVddxK2lQgB1VSZIovxdwllGo2JbTwYfnNtZyn7YYQw7KDFNdQoDWvWLrOtFr3EYVPaTvtd6D5kcq4DwRW0isaMxG2HqVtmMj70c61slTuAScKJQkm0UGwy/WeEsjW9pdrf4QS17KHFFcfg3YklpIBuUW/XQOzlX/+u0J9oW28tS/pfaJlTxqgWkJKErKbzzpP/Uen+KR2XW2M4O15/C00zyypdcZXGkeKZUja7yAlaX/OtPK+uwRmKWw0X31AS/JhZU/8HIVV5DpQWRkXz6LyMqLYFF/XUPLiKdU8ADGEtSQplqFBiWuCFNNQgMVj6Tvrm0e2VdoHBxDiB4GWZTO0bCrJ2iTB+/BglasvKHU1kPcNiCFlJ0OKJRc6pk2QMjTPzEbTPGPq+kvHLfvoClqSPySbag2pkt186Zz3JQ1a0SdFtIBSF1lSS7+ehpKdDBVKRPp6p6UJUgENGVrL+TtjLb671Rpa1tQfml1x315c2kYJqR7NoqS+UShFxKcJS3z06RfpN9cEJV3Ie8vSBKkKzWPTg6chgLTrGDhwSuAY9WFdTwRY6dh6jcra5Zf7lXbwcdtcpQO/NOXXCkhcfQFpHiC0NKRYJNWCKdcEqUaaNxg0zTvT6jOGFv0gPiwIW8CSjqVXT95uPu4LneIrHVgkKLVQV37RfpOGAIGWg35X6irGCVIdaKjAIhpmptVVHC2hZcWIAsuDFT+OqGTtqWQwbrEOJamr7Avtex79ehoDmIjK1pkimiDVseYNBE9DyLRSHH08m5D3U9Leis8DlnVsxYR8cbfV2lOuLqaVugIdqiFmSklDn8bL1RfURw+pIQOAa+jAIhpWjDVAKe0j0o8HrZqpP0/IDj7JnzWgdDV4z3vgHWqmlNR1JtJS84h19JBKGtLgimgI2Yunod3TPqBFVL6b0IKWNvUXhZS3g4/72F+hlGuIg/9YpvKS5gnSZQOpXEMZVFENCQSaup6KK1EfU4S57yi0S9aq0rml6BSf5rd2wOEZSgufNRpqppRrDDHmGkKWtywhRTSswRTVmGIeaqx9wTQKLs0Wyaa0XXzo2pNmE9XQps3Gko0MYaCPakgxL1tIJQ1xIPU0VABISrEOdeqyzwywFFo8Pq1tq7UnRPkgNRQoEY0HTETDGugjSn+MDEXLHlJE4wQV0TjjHnrM84SW1p819cdVsvaExqr1M29J04pD19AGekRDhep+ASmi4Q+emsYY95gywb6fGoJsrpDisb64WxID19AGJqLhDpqWhpR1RjRkqI7jz5JGGsvAyTXUqTRPY7vf85i2lKDlbayo7WcMGut7flJ77VeQmtS/xjIocs0r7pZwGhuYiMb7fhmzhn7PJ0hNmjRAtcicJk1aDpogNalTDXWe29M8416xYsXiT62PsWmMMY9dQ7/n+xWkhv7LWG4a4/2ex+6xHErpnkllrXxPmjQm7Te7+7QHdA5dK1asoJUrV45uIXls91t6ckPXfSUhW8lbgWYs0BrjDjmi+fyR00JDvtf7BaTGNmAmjTHuPgf7GqU4+/gDIPI0CG0rcF7WEjRDh9ZQ47I0xpiJhguqZQ+pMQ70ROOKewzZXl9Qkj7o1hMkchtrkODTgLxuf4BWyq6GFpemMcWaNMR4lzWkxjTQJ40lEyEadqzzghL6tIhkGxkUtDUrza7VIDlEOAwVpJLGEmfS0OJdlpAa8uApyXoG29A01Fj7gFIkS5LaSGtPEVBp2ZQ3YHcNrXmvwwwlDkRjiDFpKLBaVpAaG5yGPkVG1O/aTUTzgBLyvkI3ReRwSseRKb/0ak39WX5ag4tDa16D25CnK5OGHh/XvGNdFpAaE5yGmonkGlKMCUJ9Qinah3W/pLqSLCpvp8GqBFiSbasBaUjQSnEMTWMC1rziHD2kxrDuNKRBX9KKFSuWwGDeMXZ9v2rB52VYFphSWemH3cumEGCh0CJqux7Vhc+SGIYMhjFsve8b+qOH1FA1ZDCVTGP1EUcXWRIHMFHsetF1KGTtiZ/nU3wouCLZlDUYlw7WXQBmCNBKcQxFQwZprj5inCDVUEMG0xAypRpYoKrNCiPZlQemVN4qi8p9WxlVFFi8fkjQ6nuQHmKmNcSYuLqMb4JUA3U56JZq3tkSmoG06GMeUCKywZSXtfy/SBw86dWb/uM+kAGlBEBdZUXzAtdQM60hTwu2/j1NkAoqv/FD2fFWO6XVon+i7rO1CFBa+PDuqQWmVKbBOjLFp10Dkk3lbTxg9QGtVgM9j7kvgAwtqxlaPFwtYpsgBWho03hDy5K6BBJRf1DibVquPfHjXNFyC1LptXTqLzLol2ZNXcGFD9h9DNr8WuYNiiFDqzSuCVKC5g0BLp4pzSNLIuouc2zZRw2UpDZWNmVlTQicLKU2FkjyYw6mvKwGWPOAVsvBdR4AGRIohhKHJPQPlAlSNEwo5eorHj4gd9F36z5aQ4nbRL/3xM+l32X6QwMdOKQpOn5sZVPWueRLG9D7gpbUV6tBdl7ZFtH8Hy/VVQbbtfZbSOXZyRDUJRiQPrvoV5vCKlHNd5siUPKyKWTtqeRpEkj8UhkCKTSb0vrQBrQ+oZX318VA3/fGjCFkW0OIAdF+A6mhZEs8jr5AmUNZyxJa91HrvxTctVDiNujaEz8v/eDzthZA8mMUUHk76f0olSMD2Tyg1cKP5rvvzGOeW++J5pNlIlq2kBoqlObxT/W66LdlH7Xgbg2l3MYqI8JgZGVTSPsSSKVXJJuyBmJpqg2FQg20hpht9T2ADwEYQ4hh2UBqCFDqAw5Wv2PY2JD7iGZ0kSm/Gps8I5T65+21TRLRXXuWpMyGH0dhpfm1oGiBrDW0uO/SQbKrDIVfT9eDeJeZY2kMfWjUkEpv9PRXat/KB7M+Y+gDyDxbaOGnxF8kDg0u3Be67sTbzWazl9hF4ITI23YulWnAisBKGvhKp/66hFYL2HAfY94GP+9Mp4/+Rw2pPjWPLEmaZuni2Xat+uAQiII7mrEhfySg4JLWnaQpPm7nwanFxom8f60MzaJ4WbpO6X3AVTr1F4VW5D7xLKn0HncNl76yn74h6fXfQhOkFPWRrfTdJx/Ua/toEW9ppoRAycqKkCk+XqbBK7LWVJpx1UAqvUqZVw4enlloA42VgbSEVuk0XassKffRctDtGyJDyrRKYpgg9f/VN5SiWUON/6RWQCqJtyRjQ4Famk1J7awyzV8OqtqMyRL3K0EqP9ayqCQJULkPydaz40LWLrrMtHi72sG6K8C0ygiH1pcXA6L9ElJdA8LqL6nrh6229EkUj7ckY0P/UPB8o9mUtbWcl0lrUdqOvzz+lgNACaSkVyIdUNbaVK7o1B/PSrxr7Ho3IBoPoq43ZvQBknlDy9Kyh1QfgPD67HpjQ20fJVlOi3giIPOA2fUUHwdV3i8RmdN/KKw8O2vwz48tOKWYPXDlZdy/V8b9lUIrOnBy28hUX1fZVjQOT319l6rl/ajVsoNUH4Dg/bVc55H856rNlFrEW+oj8rvxMsNINqW106b4EFAh5Vy1OwCjkOLH+VqTVMfLrbUptCwXAiRLJQN/7UDbaj2qqwG/T5jwPyz6AteoIdU1IKT+uLr+kmzLpzaU+iv1UZopabYtsilkik9ai0KAJGVVrSWBwTvOY5MGl5K1Ka09L/OyKElotlAyONdkOC1hwOMYM7i67mfUkOpSfQOpxVoSzz6kwborH9H75WVKiI0FQalttCySOeUbJ6QpxFZCIZXkZU9WnQUoaaC3Bn9v4wUKI0slA3/tgN5yE0KXcOkrC+riGiZIZfL+Um/lu1Uf88ySeBaLbB9H+vF+B1Z9HlNtGZo5aVkTz6okm1zo9J+VmUj9axkSkllJQJN8WfDRpEEkuoUdBVc027JiRNqXZmtd+tJ895ltEcWvY7+ElPShbLnDr2sglcZb4yMKMyRTSnYlmx6SvLZWWc1aVG5PpE/xSbCS7FB57SSYoIAqKS8ty2PUrgkdRCMDbQmAagfzltlF19lWn+BCtewh1QUwJP81U2yaz1ylPkuzwz4yJc2uNJuSgGaVaU+PQDOnyBRfDg8JtjUDgpblWHDi9aWA4v4jZVa5dj+imZanFplWKbhyHzXqC1xE7bM5ROEev/vd79Iv//Iv09FHH02HHnoonXLKKXTvvfcu1s9mM7r66qvp2GOPpUMPPZS2bt1K3/rWt5b4eOKJJ2jbtm20evVqWrt2LV100UX09NNP118NdZ/CduE/+ap5A/C4ut5+G+mHD46SL8tG68sq98qktvngjZbze67FKNnlPxHxtlIfHCjW2kkNoKTBS/sdcjurPO/Xet9479eS93WKJ/L5rh0XWoOmy3GwSyhKCn06/u///b901lln0UEHHURf/OIX6eGHH6Z//a//Nb3sZS9btPnoRz9K1157Ld1www20a9cuOvzww+mcc86hH//4x4s227Zto4ceeohuv/12uvXWW+lLX/oSXXzxxUUX4A1wNeril9HKp7WmgMZQA7Ja29J67XctlVtleT8loGoBq/z6JHBpP1J77V4ha1Ml4JJ8aTDT7NBy7k9SBC5dZ1pSPzXgyn3VqDYeS11CKzTd9zu/8zt03HHH0Y033rhYtnnz5sXj2WxGH/vYx+h973sf/cIv/AIREf2H//AfaP369fRHf/RHdMEFF9DXv/51uu222+iee+6h008/nYiIPv7xj9Ob3/xm+lf/6l/Rxo0bW1xXWPnUVn49NZJ+WS02N0T98PaR3XrI2hW/d972cMkmDe7S9KL2O/HKa54e4U39aVN8+QaI1utRaPvouhSvb7k2xfuUYpfKrQEv+keQdb+igyuHRuR32WIQbwkD7Q+mFmrpO5RJ/cmf/Amdfvrp9Iu/+Iu0bt06OvXUU+mTn/zkYv13vvMd2r17N23dunWxbM2aNXTGGWfQzp07iYho586dtHbt2kVAERFt3bqVVq5cSbt27RL7ffbZZ2lhYWHJT626+OXUZDdcpbHl7eaZKXG7aL3117Y2NYRM53GA5IN0Seak1fEYrGk96QNt/Ujypv+4nVWvlfPry+15LPw+avdIuw/S9VnttFgiNkhfmu+Sz6v1e0DVGjRdgouoDO4hSH3729+m66+/nk444QT60z/9U3rHO95B73rXu+imm24iIqLdu3cTEdH69euXtFu/fv1i3e7du2ndunVL6g888EA66qijFm24rrnmGlqzZs3iz3HHHRcJu5Mb38on91GyLlUSQ6S/CHy9gcbyYwHIG9h4H5pPDXyWrTXQerDS7ErXo/LrjKxL5fHn18v9aXXSvbPWprT7bEFRspXkvd+RzwP6mWkBoIi6GFNqxQHfClyon9B03759++j000+nD3/4w0REdOqpp9KDDz5IN9xwA1144YXxKEFdeeWVdNllly2eLywsqKCSLnwo03aSr9Iv2xLFtpFH+kVtkVhym5LvPfHy/AOjTcPlttbTI6wpPiJ5W3nJFJ/3YSz9w8Q6l3xLAMptNEBFytM5AiKe1Vhwtf5IkXxJsXiZrGWDxmP5Lx3gW6wltV6Pag1CS6FPx7HHHksnnXTSkrJXvvKV9OijjxIR0YYNG4iIaM+ePUts9uzZs1i3YcMGevzxx5fUv/DCC/TEE08s2nCtWrWKVq9eveSHqHxqy1OrX4D3l21X7aP3pVWmhNggf2lL2RC3t+y8KT7PVrPP+0Wn+Kx7w9vU/Ej3md9rCR7I1F9+/Ui5ZsvtpfvH7az3guVLe39G37+Rz0Pk810DjRbjU+3Y1LW/XKGR/ayzzqJHHnlkSdk3v/lNOv7444noJ5soNmzYQDt27FisX1hYoF27dtGWLVuIiGjLli305JNP0n333bdoc8cdd9C+ffvojDPOKL6QUrUEXe6j5JdUE0fkzVHyIbRi8mxKBhXpPmoDqWQXBVXEHmnHbVBolUIpxYqsS0n3TYOXVBcBlHRvNHstVuS6UfhF/Ep+opkWOg7UDPCtANEaMtxX6fgamu57z3veQ2eeeSZ9+MMfpn/8j/8x3X333fSJT3yCPvGJTywGdemll9Jv//Zv0wknnECbN2+mq666ijZu3EjnnXceEf0k83rjG99Ib3/72+mGG26g559/ni655BK64IILOt/ZJ934VtN2UV817fmHvdU/D5Ti8qboEBten8dTslsPsUuAaPEkc2n6j3+Rl9dLym2TSp90ogFPOpbaSaDh9VKdBy7Nj2VvgTQCLKsOAQcKl+hgXjLw5wN7CTBawIH7aA0u1F8IUq95zWvoc5/7HF155ZX0gQ98gDZv3kwf+9jHaNu2bYs2733ve+mZZ56hiy++mJ588kl6/etfT7fddhsdcsghizY333wzXXLJJXT22WfTypUr6fzzz6drr702EoqrIQFJ8lECJLRtpK/8TYg+vijqx4rHAo60/pPbSX22BpX2VAnpmvpaj9J8e2DKbSyo8PrompUHujwWbiMNrCh8cnmDdBRGlqJAaJFpRYFR2761n1Cfs67/4VIHWlhYoDVr1tB//s//mQ477LDFQWs2my0OELPZrOgnH2Dm4SNvg14LEbm2SEy5D80u4kez0X5Xkr10bdyO+5PqpTqpXPLF63i7vNyykVTz8YsAUINTbucBCsmsJHutLq/Xsq2ondav54vDTvIX9SPZWTEjsSPtkJjQ9l3G8aMf/Yje8pa30N69exf3GUga9bP78hvQKktCps9a+uBtkeuItMnfIDUPeuU2kb68ePnvMLeXsq6U3XAbLdMpyZxKp/jy2JCpPX5vaiWBSesHmfqT6jRwWYDK4+BxaeCR2lmA4vZ5TJ4vrd76/SA2uZ0Wj2SfbBH/0bjR9qXvzRY+co0aUiUqgUJLH31BybNF7FC4SPUW8CSYSdCx7DSgRUHlxRGd4tM+lLltUu2T9/tYl+L1pYCyMhXtmqyBLrJe5Q2YCAxa2fB4ugZQydSi5aNUWoaJaFlDSroRUSjV+qiBEpKRRWy9TAmxWbFCz6Yk0PDyvE7ypcHKAkkELFbmpMXhgUiClWTHVbMepfn3wJTbaIN/qrPg1QJQPB5rs4U2sLUCmVSP2GiKDMh9Qqu0nda+Blxo22UDKT5YWwOx56fUB/9gIn8pRyEYgR5i69lE6jmYvE0Uki9teo9In0bkWZU1vScBz5riy2NFsqYcBl39d95cERCicJJsIlN/EqDyGDRYSWXSYIhslpDKLZBZ99Ha2ZaPO8jvAh3Y+5rqawGdVtDSNGpI5TelxbRd1E8EGKVtcmB69oht1AaZqpOuzVt30nxxHxIo+MNhJfsoqKQ+tOuyYMn7T+pjPSqp9bqUVh8BFB/ENPDksUqDXtQOBRn35cGu1EfUTrJF3zelU325fUm2z/usnTEYNaSiKoGK1jbS3hq8vX5arz/VZlNWew9Ami8ODcmn1odUHwEVkf74I60ur7dsNPu8Ta26WpdKNha8eF0LQEmDqjTYoXaabd6vNYijWZSm3AaBlueP20cAVNJGalfyx1WNj2UNqRooRTIYrc/ImhISY6mtB69W2ZTWp+RLskWzJAs80jGy+cGDUc16FL+W3G+ttL/4JaEZFpo9pVcPYFFA5XFx39EyqZzfC6+NV8frERh5g3R0QG8Bn4hqoZV8IFo2kIrCQWubVAIlpF0JaLzrQa7ds/HiigDIsudgtOy0LGrFCv1LuiioODgk4PIt594aU9/rUaj/lutSqdwDmAQeCVB5XBrYkq0EMAuQnq03yGrZT95G+2MjYtMFtEqm+rh95A8pHl/L9/yoIZXfjK7XkqR2SNtIRlYCMMsuYiNBqRRAebkGWg1WHnzy8wioNN/cH5E/xTfk9ag8TqmvWjhpdqWA4oOaBx5pEJQGVWuwjO768wZfZHBGB290w0QUCKUAqQVPdAOIpFFDClUplEqm/EpB49kisWhAkPor3fjA6zgsuL2VdWlQ0+DDzzVbSchW8zxOojJYSepqPUrzz+PRYuPwkWzR6T1eFwFU3jcHoJZtabFoEPPgwmUNrlJskl9N6MAfAURuU7KmhUKkBlqlbZcdpPhAnQbESNukeUIJsY3a1GRTqE8NKtw2/71wGws+UqZkTeVp9kT60yTSqwe00um9VutRVn8emLgNAifNTrKJAIoPXHywleolvxqcPDspTqnOA50HO8t/bqupBFolAEqxRNqUwAe1HT2kSsAitUPbloCmqw0UrbMpLwapX6k/CUyWnbb21AWoch9IFoZmTdb0XvQvzqgQ/7XrUgjELFjxNh6g8lgl8PBYPBvLTvOnwSy/Fi5voEYGc3TQ7wtapfDxoItq1JCqoTYKpD7WlCxbCyqSTTSbarWLj4MCtdPgk86ttawIqLQ+vKk9zc6KZZ7rUUml61J5vQUozUYDThRQPOPRbKPTgZIvzZ9lz8stKHpxaP16/Uvqak2rtI3ULvr+HzWkLHHAtM6SovYo7ErghcLFa2v1Ld1LyU/UjvctZVXaWhYCqrxf7cOhwdDaOl66HsXbtlIX61LatSNgkoAjtfHsuX8pLg1OFvS0try9BR8ubwD2BmlkII8M9iW2RHgGVAOfiP2ygJR0sfOGUglsELvW2RQf2NE2JWXcn7eRogZURPZ3m6Q+tXYWrHJ7qS8unmm1kjZoSvLWpSJw4q9SWw1mCNC0NrmtZi/5ROwQkFl+uC8PaN7UIQI+y4/krwRCiKKgQzRqSKWb19XGCA8Mpb49oKD+LD9W7Ei7vE7zpdmi61PeRgoUVJKkNSevTVIEVrl93ia/rj4Uua7cXoKU1AYBkwT8WkDlsWm2mr10zYidZpv3a4EsMmVYUo9ACwFLX9CKtuEaNaQ85QMmArNSiHm2COwiUKrNpryND5av2um8ZCP1q8FJA5XkT8qOrPUmaVdfekXWq7RsLG+XC/2gSvc2KnRdqhRO0qvWthRQ0gAXybY0H6hdHicKMrRO8snblkIt4isXuqZV4ru0zbKBlDaARNpEpwi7XFdC/Vg+WgDIsufQs+y0LCr/Q4LXe6Dy7K3pPzSrkmDFrzW31YCVhK5HlcDJghI/1/zXwIm3l2xbACq/Bgs80oArDY7S1JQFrAjIrDat6vNr8OwikIgCJb8HJe9fTaOGVH7zul6Dqs2Ckp2X2aHg8qbxePtSAOXlUt9RO23tqTWouH+tTUTRTROWD0vS+wxpJ8USAVNuI8HEqmu1qQIBFK/TbC04SVCxBuRSkGl1vG+kLVKPXEsknpK+S+01jRpSnqwB3bJPapkpaXaeTcQHsr7klVvwk6Bn+bTgw89bgSqPQRtsrGf0aR8mPkWZFN00gdh4O/U0eZDiQteoLMjkfjwweVDTbLm9BR/pujx7aSBFIMHl7fqL1iH1eb+IDxRarW1L7JOWFaRQeETtUdih/vrKpiIAkvrSoCL51mw0+OT1nm0EVF42lfog8nf/eeJA6XrTBDJoeIrs7CuBE3+V2iJTgoi91L4k25Lg5NnxeKRyrS6PU2vn+a2BWpcgiq5pIRo1pPjNsKCkLbhbvlvZefCqqefXhWRMeZ23iULyYdlpa08tQcWF+NbaEcVgpfn0gCX5l3x4g0tUJZsnPDjlfi0gRQAlHXv2WnwaeHj8HpxK7LRYonVWX1Z8Ef9I/DU+o4DTNGpIWfIG/lJ7CwoRXzXZVEmdBBbNnoMCtbMAwbOe3B4FleQbzY5428guPjSzylWyaaLmg6z1Kw2M6DEKJ+3VGvBrASXFzQdaDWbotvRcll1k1x+/D2i7CNBqoVUConRdiG0UWssGUl1BqcSui7Uny390U0R0Gzlqx/uVsiruMwIqzT6PR2vjgcaCaAtpa025kHVTZCCwyhBo1cKJ+6hds0KBxq/Fu27JxoKeZqf5s8pr6rRr1tpbNp4f1FepLaJRQyq/EQiUvOwl2eWqmerz6q14rDjQukg5su5k2WnwSfXS76kVqHh/Nbv4Srebo3WaEIhpsXj1CJi0thqcpDJpYEI3SLQCFB8gEfBocUs2mh1iq9l7bbyBHwWSBw4UMF1BS9OoIWUJhU2JnbaBwvMVqY/WoZsi8r+erOxH8mv58zZS8N1xSIaEgCqPJ6+zpvAQiJTu4OtaXUIqF4dLfuy95j4s264Alcer2Wr2eQy5jWdn2UbBgQzsaBZl1UvXEPEjxdMFtJYNpFDYIGtKEX8WPJB6NJtCM6m83suOaqfzko0GH17fElRS/1zeFB4yFSitWUVi6EJRUHnnSV1uSU+vVtuSNSvLzrPV/Go+UDsvhoifSF1JfUubEltEo4ZUfhNqpuUidtIgq/mQ/Fj1aJ3m08t6kHJ0Ok9r0wWoktANDtL0n9WOt9fUVXYVhVwUUl6bVnBKvjx7afDygMP7iwIqvxYLPDXb0q2BWcp8SoCl+ULbRiHj2aR4UH8ln5VRQ0qTB4qIXdQmWs8HdqSdFpPmS/KDgk36I0ADiZX1lICK+03HSBtJrWCV+8r9JVnxt1AJpLgkMOXHaBn3ZwFJg41lXwIoLS4EZgh0tGk+r8zyWQIsb/D36q3MDvURtfOuSdKygFQUShoUUF+eH8+HBy2pLlqe11lTeRLYJPAQ4d+LKgEVEfX64NhoJuTFklTzUNmIoj6trenecSmcrFfeFoFbaoMCTfIvnee2eb113ZqN5rsVmKy1HxQ4mhDQlICo9v0/akilG9D1uhJig4JHq0czIKQc3RSRl9VM5yUbzSf3pR179rwvKTMqzar49Wh9c1nASurj+1G5pBikgbD0OO+jBE6pPQKmloDig6ZmawENnebjvi1bpFySBQEPEtEsShPiB4nH0qghxRWBkrcdHQELEZZNlUCLl0eBhW6KQACGwCfV8/MWoNL8I208oVvOa2TN2aNPRY/4JLKh5J1rYMn7tew90Gg20nHeDgVUHpcHKMlWsucxaDYlAELL0Y0XFrQ0RYBV4weNJ9eoIcUvdOhrT16dN+1WWx6Z9ovAh/fRGlSSrTX9x9tpr7n6gJUkDzaWvMHCKkMglavVlvRUbrXxoOYBimc7Ekg8Wy12zcaCmmfnlfP+vTZenZf9oEDytp2jfjyNGlKWEHgNJZvyMiDLXgMOj8uyS2UcVLmNlFXxWFuBSordmnqzpv8sWbDK/WgxI0LiLlUNpPi55qs1nLRXDTZafQmgNIjk1+WBXIMOFzLNVwKsEih5kPBAgoAmahN53y8bSHlAKbFpWW/1HQGQVq6VIdkZB5EGn2TD7ZOPWlDxPrzMThvkW8AqxZv70eKw/HSplpDKhe78s+q4LwsuEUBZwIna8zrP1gJMLWyswdvbvh6BWW0WlcrQbfAtPg+jh5Q0YPK6JMkmH5AlG89H/ksr+TcYvE4Ci2bvQQzZFJHsLF/WYIxMzeXt0DWnaHYkTelZU4CWDy4vu5qXaiGVS9v954EoAiftVWpr2XUBqPx6NNu8HmmDQAgts3yg/qNThtH6rqA1ekhxWWBAbVrVR8Ck+eO+Ij6kODR/3lShZF8CqhJ7a53Ky140yJVmPdZ283lAKwqqXNFt6a3hxNujWVcXgJIGUSvbknzzNl47BGLR7eut6rR66RpR/5IfRMsCUhGoSDY12RR/U3tbmr2YtYEf9aGVRTZFWG2k6T7J1toY4dlrsbXcxYfCyls3yxX5jlSrqcHS+yC1L4GU5BcBkwU3y75PQOXXYwFFGnRr4KQN4hoALLhYQPCA0rK+5r0+akhpJPagxG2i9VadtRkjCpuaaT+pDN0UkcoQUFm2UVBxf7ms6T9pqk96TfeAt+cqAUi+hpVkbS9vAShP2sCknUePeT8InCQf2vReem0FqPwaIsC0YGYBQ+qvhZ1VjraJ1OXXqWVRCJDyusiu1lFDKlcEOpJNJJsqgY9V503l5XVRMPEydFNEft41qIj0DAed/kNkwSriR7p+SdYHsfT7UZE+rMFGOi8BU15fAidej7StXbOy+pPgh5xb61D8XAMEvzdWe6Rcul9Sv9G6aL1lg2jUkOKDolSfVJMtefXIxgetjQe46DZyr0zaFCHV8/MuQJW3Q6CjTbfNE1alivwl6cmK14KSd14KJ68u+UGg5rWzgFNir9lp57wPtI1WlvxJ8WhxItCz7JE66Tqlth60SjRqSHFFwCLVo1N1vC0Ku5LND3lckt8IrCzwIVlVK1BJfZRujuDtrP6kttLA0DWwWq1HJUUgxcs8aCXxrCc/jsJJs7PaellXC0Dx7EWDjXQ9kr3UBrHR7ErKkY0XkTqrL7Rei0nTqCGVLrSPbCo6xWdtoohsoNDKvQzIs9GAw89rQUXU7YNj83apLyk2FAz52lLN7r3WILJUAymrvZQ15cet4OS1L91U0QJQ+fXxdto0otXeKyvZvq79PtGMzKvL47LalfhFNGpISeI3o6tsKpIBcV8RPxL0UBDlNhpE0IfF5ucIqHJfqD2yOcKTNwXoZXSSr9xfknV/+1YtpHJ5YNKONTjlPhHASHCLtmsJKD7IaqDg51p7rYzHHW3bqrymDqmPZlFEywRSfMCV6pNKp/GsutblWpmXnUXgJa018XoLXMj2dM9eix1pk7eTsqXS9SpNKLDmJWvQ8BTdlu6Vcb8aUDzQ8DoLVnm7EkDl16P5R8Cm+bJsuFCoWECQMh8EWKgvpB0CNESjhlS6Aa02PaS6yMYHr7yrbeT5dWsgSmXeubbjr2tQIVlNSVaVQ8ubBvR8SEK2mmttu8q6Ij4tKPHzCLC4/xI48fZWmwjUPEDxAdWCFTo1GAFY7TRfFBQIXCxfJVAqyaKIRg6pXChciNquPaHleR26gaLUruS8D1AR6U+bsICFZFWWLFhJ/aHl+TVxIVl9X5LiqwGT1D7vx4KQVddiUwXSNrWpAVR+PREYSTYtpvlyIZslkHLLl9fOA1bkczB6SPGBl5d7dbw+1aEZEFLurSdp5RpUkLWk6DmPpSWoeDt0Go+rZq0qjzX3ocVQo7wfrlbfj+KytrRrg4h2HgFT3ncEStLAyuuRthqgNMikNoi9BRMNbOg5j1+ziZRxf1a/CPRKN15EYedp9JDKxQdAXpcUAVpeX7PG1GLaD1mfKsmiNPjVgkqzTfET+cCR1p0sKFqZWa5SWHng92TBpFZaHDWQ0tpLGyxawYm/Wm09+1KgIYDKrzV6nqsWTlEAoeVoG6udJKudpFFDil9oi2m8vK7VNvKSaT8EVtoUXbJBzzX4eaDiira14BaFjGbrrXtpGyIi4EHV1XpUUitIWb5awSn3JYHIal+yqaILQPHBFj3nfluBqMvt61Ybr64miyIaOaS4NLjweiJ8F988tpFbZVa/NVlUfo7CRsuQah4cy6/ZU6tdfNpUYI3PvmXFWQolorbfl8r9IWDi7UvXn6R6FFD5tWl20fPIOpRlI8Xp+YsAK9pGihv1qWn0kNIGba/eahdtEwEOkp1ZZQj4ollU16DS4uBtiMoeHMszMt6v1zfX0Leba4pAyrPv+/tSiI/S70xJdhFA8UFVOkbPpesogVMpbDzbPL4WMMt9lX52Rg0p64NXuvFBqqtZT8rLJRjWTvlpUECzJquuFlRE8S/V1uziQ9aZataQ0J2j8wSZ1jcSkwYmfi7BoGs48XoLVnk7D2pdACq/J9q1WPYIwCToIRDygFe78SLVSb68dppGDakkDQ68vjaTknwh4EOzH69dKkOAItlb4NLqSkCV993qu1ERdbWDb4jfj0L7l9T396UkewRQli3aLgK4CKDy67Lghfi1AKcN7i22r3dVjtQhGjWk0sVrcCjZ+JDXab5KwMTL0N15Upm3kULyaYHLqyvZEJHXl2yO0KbwtCk/SSisIptDJP+5hvT9qFzR70rxc+SY91ULJ83OautlXR7gULhZQLLuDwojfi75bLV9Xbp2z94qR3xFPg+jhlSSBg2iNhsfUnmLbeR5mRSbByvvXNvxFwFVLi9Tk2wln+iaUWlWZUGrdAdfSfbT9/ej0P6JfCjxsgiY8r67ghN/tdp6cOsaUDw+7btZ6Ll2zdEyz59mW1KO1CEaNaTSxXex8cEqz+tK15S0viSYWP1J5xaotL4QaGnAQDMr9LtRkqJTgNb0Y+4H8YUKyer6kBYDMlBYMLLeE3k9AinJX2n2lNqi7VoCKr8WD1CSbeQc8emVSf5zfy3AJGVRXhtLo4ZUkjQY5XWlmyik8si0HwKryPoUes5jQbMo9BjZUWiVeVmZNqWnTQGWKJpdefd/SGoFKctXX3DyfEU3VbQGFB94LZhotug5v2bNJlLG/Vn9RqDH7dE2kkYNqXShNRsfLHsNLtFpv8j6VMSPlRl5Gxa6AJXkWytrmVVJMVix8Pquvx/VN9BaQipXzfelJN8td/2hYJJ89Amo/F5Ez6VrLoVTFEBouZaRWW08jRpSuTzQlGyi8Kbo8rqSDQ95mRcfem7Br2S6LwKqSDaV7Lveci7Jm87kPktim6esWCNQIqr/vpTUh5WFIYCKTgt6Prw2pYDKr9Frh/qVymqAVbt9Pb9vaEamXZemUUMqv1AkMyrdRFEy7VcKq1Rek0Xl597UXM2xdx8QYCUfRLEv8lrteSxW35q87eZDh5YWHxI3Aqb8HIGX5jcCp9yHBhevzvIRhZUHKM8ueu5tvvDKuOa1fT362Rk1pHJ5oKkp18qQ7CwCK2StB522y89bgEqS5J9fs+enNKuSoNXlpoia70jNQzVARsCkHVt/hEh2JXDSXhFfCKBKjyX/EchZ8EE3X0SgZ5VHgCXF59lHYDVqSOUXigKoz23kVlsEfBrM0Om+vA7drCD5t+pz/0Txp5pzRXfxSfG1/n6UdL8RaFl9z0vz+L5UXm8BBAFUBHKSHw9u8wJUfg+067fsowCrnebz4GP5iH4eQvtiX3zxRbrqqqto8+bNdOihh9JP//RP0wc/+MElIJjNZnT11VfTscceS4ceeiht3bqVvvWtby3x88QTT9C2bdto9erVtHbtWrrooovo6aefDgXOFbnBvA71ES0reQPlA75Wr/nzPhzaoGH9aH1IbYn8gQnpi/tB2ko/K1euXPyJ+CrpL+9L67dPafGU3EfkR+obbaf5kvwke/5qxZT70fqrOU59SOVWG+0e5NfmgU/zp9kkn56d1la7v6itFqulUCb1O7/zO3T99dfTTTfdRK961avo3nvvpbe97W20Zs0aete73kVERB/96Efp2muvpZtuuok2b95MV111FZ1zzjn08MMP0yGHHEJERNu2baPvf//7dPvtt9Pzzz9Pb3vb2+jiiy+mW265JRLOkguNTOVFtpHn5VqZNt0VzaLyc8un5g+pszY7lE4BoutU3D6aVUkxa755WZdTgZaioNIysqgf69qkwcSy0Y61+CR7/qqV5b4sKGmvli/LPlrvAQqBoAWvXFEYadDJY7XsUGAlf1G4RT93K2Z8u5qhn//5n6f169fTH/zBHyyWnX/++XTooYfSpz/9aZrNZrRx40b6jd/4Dfpn/+yfERHR3r17af369fSpT32KLrjgAvr6179OJ510Et1zzz10+umnExHRbbfdRm9+85vp//yf/0MbN25041hYWKA1a9bQ//gf/4MOP/zwxYF9Npu95EcqT2VpQEBskbLcH9IOObd8arEjdvlgiPqybLUyrZ+SVz6A8wxeerWONSDwj4R3rpVZ5Zos+/CHW7H3oMTPrX6j35fSyjxfHkw0f2j7kvo85haAknwjbdFz7lOyQ8s0f1p7qfyZZ56hM888k/bu3UurV68mTaE/z84880zasWMHffOb3yQioq997Wt011130Zve9CYiIvrOd75Du3fvpq1bty62WbNmDZ1xxhm0c+dOIiLauXMnrV27dhFQRERbt26llStX0q5du8R+n332WVpYWFjyo900rdyieOlfE1b/mo3lRzrXvqyIvMktO2vqTzsuKdP+ctPaa9eaYka29iI/KTZtjSbiW7OJxlVyHX38cHnTh5H3R+4TvX7tvcLji8YSqZditt47UnvPt2ZrnWtx5D4tP16Z50+ztco9hab7rrjiClpYWKATTzyRDjjgAHrxxRfpQx/6EG3bto2IiHbv3k1EROvXr1/Sbv369Yt1u3fvpnXr1i0N4sAD6aijjlq04brmmmvo/e9/vxoXv2hrei4vr9lGLpWhmx4kP9o5j7t2ui8/Rr7nlAuZ6pPKkC3mXp/5q7a5oiT+PL6kllvZUaF+I31rtlK557eL70vlfj34IHDi/iTbkjINhHk90hYBWfLt2VowkkBQszsQ+cxEwRSBVQhSf/iHf0g333wz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Z7W3+vPaSK+ojWabH0uDuGRXe9ziXCuzhNi3/r9RUVkASiqBqAcdxAaBjlaHtiWKPVbJs2kBJ8/eiweBiNUf2jbaTwmg0vjtfZZGCam//Mu/JCKiTZs2zTmSSZMmTZpUo6eeeorWrFmj1o8SUkcddRQRET366KPmxe3vWlhYoOOOO44ee+wxWr169bzDGaym+4Rpuk+YpvuEaTab0VNPPUUbN2407UYJqZTGrlmzZnoTAFq9evV0nwBN9wnTdJ8wTffJF5JktP8/1pMmTZo0aVIjTZCaNGnSpEmD1SghtWrVKvqt3/otWrVq1bxDGbSm+4Rpuk+YpvuEabpPbbViFt17O2nSpEmTJvWkUWZSkyZNmjRp/9AEqUmTJk2aNFhNkJo0adKkSYPVBKlJkyZNmjRYTZCaNGnSpEmD1Sghdd1119ErXvEKOuSQQ+iMM86gu+++e94h9aZrrrmGXvOa19CRRx5J69ato/POO48eeeSRJTY//vGPafv27XT00UfTEUccQeeffz7t2bNnic2jjz5K5557Lh122GG0bt06uvzyy+mFF17o81J61Uc+8hFasWIFXXrppYtl0336ib773e/SL//yL9PRRx9Nhx56KJ1yyil07733LtbPZjO6+uqr6dhjj6VDDz2Utm7dSt/61reW+HjiiSdo27ZttHr1alq7di1ddNFF9PTTT/d9KZ3pxRdfpKuuuoo2b95Mhx56KP30T/80ffCDH3zJg4/39/vUiWYj02c+85nZwQcfPPv3//7fzx566KHZ29/+9tnatWtne/bsmXdoveicc86Z3XjjjbMHH3xwdv/998/e/OY3zzZt2jR7+umnF21+7dd+bXbcccfNduzYMbv33ntnr3vd62ZnnnnmYv0LL7wwO/nkk2dbt26d/fmf//nsC1/4wuyYY46ZXXnllfO4pM519913z17xilfMfuZnfmb27ne/e7F8uk+z2RNPPDE7/vjjZ7/yK78y27Vr1+zb3/727E//9E9n/+t//a9Fm4985COzNWvWzP7oj/5o9rWvfW32D/7BP5ht3rx59ld/9VeLNm984xtnP/uzPzv7yle+Mvvv//2/z/7W3/pbs1/6pV+axyV1og996EOzo48+enbrrbfOvvOd78w++9nPzo444ojZv/k3/2bRZrpP3Wh0kHrta1872759++L5iy++ONu4cePsmmuumWNU89Pjjz8+I6LZnXfeOZvNZrMnn3xydtBBB80++9nPLtp8/etfnxHRbOfOnbPZbDb7whe+MFu5cuVs9+7dizbXX3/9bPXq1bNnn3223wvoWE899dTshBNOmN1+++2zv/N3/s4ipKb79BP95m/+5uz1r3+9Wr9v377Zhg0bZv/yX/7LxbInn3xytmrVqtl//I//cTabzWYPP/zwjIhm99xzz6LNF7/4xdmKFStm3/3ud7sLvkede+65s1/91V9dUvaWt7xltm3bttlsNt2nLjWq6b7nnnuO7rvvPtq6deti2cqVK2nr1q20c+fOOUY2P+3du5eI/vrJ8Pfddx89//zzS+7RiSeeSJs2bVq8Rzt37qRTTjmF1q9fv2hzzjnn0MLCAj300EM9Rt+9tm/fTueee+6S+0E03aekP/mTP6HTTz+dfvEXf5HWrVtHp556Kn3yk59crP/Od75Du3fvXnKf1qxZQ2ecccaS+7R27Vo6/fTTF222bt1KK1eupF27dvV3MR3qzDPPpB07dtA3v/lNIiL62te+RnfddRe96U1vIqLpPnWpUT0F/Yc//CG9+OKLSwYNIqL169fTN77xjTlFNT/t27ePLr30UjrrrLPo5JNPJiKi3bt308EHH0xr165dYrt+/XravXv3oo10D1PdctFnPvMZ+upXv0r33HPPS+qm+/QTffvb36brr7+eLrvsMvrn//yf0z333EPvete76OCDD6YLL7xw8Tql+5Dfp3Xr1i2pP/DAA+moo45aNvfpiiuuoIWFBTrxxBPpgAMOoBdffJE+9KEP0bZt24iIpvvUoUYFqUlLtX37dnrwwQfprrvumncog9Njjz1G7373u+n222+nQw45ZN7hDFb79u2j008/nT784Q8TEdGpp55KDz74IN1www104YUXzjm64egP//AP6eabb6ZbbrmFXvWqV9H9999Pl156KW3cuHG6Tx1rVNN9xxxzDB1wwAEv2YG1Z88e2rBhw5yimo8uueQSuvXWW+m//bf/Ri9/+csXyzds2EDPPfccPfnkk0vs83u0YcMG8R6muuWg++67jx5//HH6uZ/7OTrwwAPpwAMPpDvvvJOuvfZaOvDAA2n9+vXTfSKiY489lk466aQlZa985Svp0UcfJaK/vk7rM7dhwwZ6/PHHl9S/8MIL9MQTTyyb+3T55ZfTFVdcQRdccAGdcsop9Na3vpXe85730DXXXENE033qUqOC1MEHH0ynnXYa7dixY7Fs3759tGPHDtqyZcscI+tPs9mMLrnkEvrc5z5Hd9xxB23evHlJ/WmnnUYHHXTQknv0yCOP0KOPPrp4j7Zs2UIPPPDAkg/M7bffTqtXr37JgDVWnX322fTAAw/Q/fffv/hz+umn07Zt2xaPp/tEdNZZZ73kKwzf/OY36fjjjycios2bN9OGDRuW3KeFhQXatWvXkvv05JNP0n333bdoc8cdd9C+ffvojDPO6OEqutePfvSjxX+2mnTAAQfQvn37iGi6T51q3js3ovrMZz4zW7Vq1exTn/rU7OGHH55dfPHFs7Vr1y7ZgbWc9Y53vGO2Zs2a2Z/92Z/Nvv/97y/+/OhHP1q0+bVf+7XZpk2bZnfcccfs3nvvnW3ZsmW2ZcuWxfq0tfoNb3jD7P7775/ddttts5/6qZ9aVlurJeW7+2az6T7NZj/Znn/ggQfOPvShD82+9a1vzW6++ebZYYcdNvv0pz+9aPORj3xktnbt2tkf//Efz/7n//yfs1/4hV8Qt1afeuqps127ds3uuuuu2QknnLCstlZfeOGFs7/xN/7G4hb0//Jf/svsmGOOmb33ve9dtJnuUzcaHaRms9ns4x//+GzTpk2zgw8+ePba17529pWvfGXeIfUmIhJ/brzxxkWbv/qrv5r9+q//+uxlL3vZ7LDDDpv9w3/4D2ff//73l/j53//7f8/e9KY3zQ499NDZMcccM/uN3/iN2fPPP9/z1fQrDqnpPv1En//852cnn3zybNWqVbMTTzxx9olPfGJJ/b59+2ZXXXXVbP369bNVq1bNzj777NkjjzyyxOYv//IvZ7/0S780O+KII2arV6+eve1tb5s99dRTfV5Gp1pYWJi9+93vnm3atGl2yCGHzP7m3/ybs3/xL/7Fkq8iTPepG03/T2rSpEmTJg1Wo1qTmjRp0qRJ+5cmSE2aNGnSpMFqgtSkSZMmTRqsJkhNmjRp0qTBaoLUpEmTJk0arCZITZo0adKkwWqC1KRJkyZNGqwmSE2aNGnSpMFqgtSkSZMmTRqsJkhNmjRp0qTBaoLUpEmTJk0arP4fFC2Mhv2uJioAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Expressing conditional array"],"metadata":{"id":"F3WKzN0_1KJB"}},{"cell_type":"code","source":["xarr=np.array([1.1,1.2,1.3,1.4,1.5])\n","yarr=np.array([2.1,2.2,2.3,2.4,2.5])\n","cond=np.array([True, False, True, True, False])\n","result=[(x if c else y) for x,y,c in zip(xarr, yarr, cond)]\n","# True bval xarr-iin utgiig avna.\n","#False bol yarr"],"metadata":{"id":"rZ_w8krO1KTC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eTKv6di81KXJ","executionInfo":{"status":"ok","timestamp":1714478072559,"user_tz":-540,"elapsed":6,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"946deebd-39a9-4ba4-88f3-0ebe602a49d7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.1, 2.2, 1.3, 1.4, 2.5]"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["result=np.where(cond,xarr,yarr)\n","print(result)\n","## deed taliin urt uildliig bas ingej hiij bolnoo gsn jishee"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wpUj0PAe1KaR","executionInfo":{"status":"ok","timestamp":1714478072559,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"809485b6-ce14-4520-fdd2-7563de03558a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1.1 2.2 1.3 1.4 2.5]\n"]}]},{"cell_type":"code","source":["arr=np.random.randn(4,4)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O16KdW9T1Kdk","executionInfo":{"status":"ok","timestamp":1714478342268,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bc6d8363-c785-498e-be39-631d91b7bc00"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.1607549  -0.63081964  0.64048355  0.34664274]\n"," [ 0.3428477   0.63481275  1.89282691  0.98179899]\n"," [-0.40600531 -0.69102905  1.39873176  1.04323726]\n"," [ 2.52843994  0.26009736 -0.13573217  0.26167705]]\n"]}]},{"cell_type":"code","source":["arr>0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"60gj3WNB1G8G","executionInfo":{"status":"ok","timestamp":1714478416918,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2ddb2d90-e6cc-439b-9da8-18f9d201fe95"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True, False,  True,  True],\n","       [ True,  True,  True,  True],\n","       [False, False,  True,  True],\n","       [ True,  True, False,  True]])"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["np.where(arr>0 , 2,-2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HY4l_8gV4GCc","executionInfo":{"status":"ok","timestamp":1714478429782,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bd8bb210-4a02-4ec9-e5f6-96eaca640ff5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2, -2,  2,  2],\n","       [ 2,  2,  2,  2],\n","       [-2, -2,  2,  2],\n","       [ 2,  2, -2,  2]])"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["np.where(arr>0 , 2 ,arr)\n","# eyreg too bol 2oor soliod, surug too bol heveer ni uldeeh shit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zP2YNiek4GGG","executionInfo":{"status":"ok","timestamp":1714478548809,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a50a3ded-4ba0-4a09-fd40-6cce347fcafd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2.        , -0.63081964,  2.        ,  2.        ],\n","       [ 2.        ,  2.        ,  2.        ,  2.        ],\n","       [-0.40600531, -0.69102905,  2.        ,  2.        ],\n","       [ 2.        ,  2.        , -0.13573217,  2.        ]])"]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["##Methods for boolean arrays."],"metadata":{"id":"lR6Izp-w4pg5"}},{"cell_type":"code","source":["arr=np.random.randn(100)\n","(arr>0).sum()\n","#niit eyreg elementuudiin too."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0oYKMbXN4pw0","executionInfo":{"status":"ok","timestamp":1714478683783,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9112a667-709b-410f-ed17-b0976923aa59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["48"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["bools=np.array([False, False,True, False])\n","bools.any()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3SoPVv8G4p0r","executionInfo":{"status":"ok","timestamp":1714478714292,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"dbfe36f0-36fb-4436-b6e0-363306834b75"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["bools.all()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z_NTeVv04p4E","executionInfo":{"status":"ok","timestamp":1714478720437,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"afab4a3a-ff9e-425d-a78c-ec36b4eccba9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["##Sorting"],"metadata":{"id":"BBKdLyet5CcP"}},{"cell_type":"code","source":["arr=np.random.randn(6)\n","arr.sort()\n","arr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qCtJzR134p7E","executionInfo":{"status":"ok","timestamp":1714478852949,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"819cdaaf-cc30-4e48-f8dc-a70e202662a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.50320633,  0.06718183,  0.36451068,  0.39695503,  1.30111501,\n","        1.6443255 ])"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["arr=np.random.randn(5,3)\n","arr.sort(1)\n","arr\n","#muriin daguu eremblej baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tfuMvjOd5Com","executionInfo":{"status":"ok","timestamp":1714478830725,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"84c7f11f-bd8c-4d48-eb3b-6d50cf79d993"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.78404807, -0.29080526,  0.25446942],\n","       [-0.33183241, -0.22479076,  0.44053796],\n","       [ 0.20517681,  0.77334008,  1.85510228],\n","       [-1.40642954, -0.41933898, -0.30493422],\n","       [ 0.07528637,  0.52522414,  1.39519824]])"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["arr=np.random.randn(5,3)\n","arr.sort(0)\n","arr\n","#baganiin daguu erembelj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fbL6XIt45CsT","executionInfo":{"status":"ok","timestamp":1714478948080,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8bf3a3c2-8a9c-4be7-8da1-6c10c211d848"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.25125926, -1.66029065, -1.66382361],\n","       [ 0.48746463, -1.30308752, -1.02199851],\n","       [ 0.63595521, -1.10389249, -0.14046698],\n","       [ 1.21089598, -0.23011019,  0.49000317],\n","       [ 3.00895401,  0.40111671,  0.81670624]])"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["#Lesson 76(Numpy-Mathematical and Statistical functions)"],"metadata":{"id":"8h16Mizn6aDv"}},{"cell_type":"code","source":["import numpy as np\n","arr=np.random.randn(5,4)\n","print(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"krMar1YG6eev","executionInfo":{"status":"ok","timestamp":1714805555916,"user_tz":-540,"elapsed":23,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0a93d538-ce90-40ff-87c1-a231b15161a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.80866145  0.96121262 -0.38154551 -0.42211869]\n"," [ 1.61197147  1.15322555 -1.55815781  0.94498411]\n"," [-2.08345913 -0.47859857 -0.19621134  1.77285849]\n"," [ 0.13129051 -2.23823483 -1.46043411 -1.30319719]\n"," [ 0.12076964  1.89823781 -0.69020489  0.64309431]]\n"]}]},{"cell_type":"code","source":["print(arr.mean())\n","print(np.mean(arr))\n","# ingej 2 ynzaar shaaj boldog."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ecKeHXTs6eia","executionInfo":{"status":"ok","timestamp":1714805555916,"user_tz":-540,"elapsed":19,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"414fb29f-e077-4b81-ab04-b9e091ae53d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-0.11915895173691884\n","-0.11915895173691884\n"]}]},{"cell_type":"code","source":["arr.sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vKkaUoS16el-","executionInfo":{"status":"ok","timestamp":1714805555917,"user_tz":-540,"elapsed":12,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"98bd5416-f0d0-4976-98c4-7fd6cccb0b95"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-2.383179034738377"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["**Axis** aggregations"],"metadata":{"id":"AIMEs_mzfp8H"}},{"cell_type":"code","source":["print(arr.mean(axis=1))\n","print(arr.mean(axis=0))\n","#axis=0 ni bagana\n","#axis=1 ni hevtee"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YX5Iqkaa6epA","executionInfo":{"status":"ok","timestamp":1714522459788,"user_tz":-540,"elapsed":414,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6936a482-73d3-423c-dad5-0180994e5924"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 0.01493577 -0.56149993  0.37043802  0.36938532  0.07455654]\n","[-0.45219254  0.49317825  0.27973939 -0.10647253]\n"]}]},{"cell_type":"markdown","source":["Cumulative sums"],"metadata":{"id":"80HenA01gRnn"}},{"cell_type":"code","source":["arr1=np.array([0,1,2,3,4,5,6,7])\n","arr1.cumsum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4MeFcz56esV","executionInfo":{"status":"ok","timestamp":1714522658977,"user_tz":-540,"elapsed":1,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f6cc36a2-3f94-434e-dd9e-e829470eacc6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0,  1,  3,  6, 10, 15, 21, 28])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["arr2=np.array([[0,1,2],[3,4,5],[6,7,8]])\n","print(arr2)\n","print(arr2.cumsum(axis=0))\n","print(arr2.cumsum(axis=1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T5SW8CCs6ewb","executionInfo":{"status":"ok","timestamp":1714522633462,"user_tz":-540,"elapsed":377,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"84d46340-5733-4def-b0e1-12cd595d524d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0 1 2]\n"," [3 4 5]\n"," [6 7 8]]\n","[[ 0  1  2]\n"," [ 3  5  7]\n"," [ 9 12 15]]\n","[[ 0  1  3]\n"," [ 3  7 12]\n"," [ 6 13 21]]\n"]}]},{"cell_type":"code","source":["arr2.cumprod(axis=1)\n","#ene ni bur urjver olj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1fxde1XehSLy","executionInfo":{"status":"ok","timestamp":1714522786025,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5e55dd40-14a0-4937-f815-d542fd994c2c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0],\n","       [  3,  12,  60],\n","       [  6,  42, 336]])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Other functions"],"metadata":{"id":"W-DbnjJzg_EC"}},{"cell_type":"code","source":["print(arr1)\n","print(arr1.std())    # standard hazailt\n","print(arr1.var())\n","print(arr1.min())\n","print(arr1.max())\n","print(arr1.argmin()) #hamgiin baga utgiin index\n","print(arr1.argmax()) # ene ch gsn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ht5DxY1e6ezd","executionInfo":{"status":"ok","timestamp":1714522892121,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"326d312a-7e98-4ef1-95d3-04c5f68f482c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 2 3 4 5 6 7]\n","2.29128784747792\n","5.25\n","0\n","7\n","0\n","7\n"]}]},{"cell_type":"markdown","source":["Unique and other Set logic"],"metadata":{"id":"_mPJOs7zhDH2"}},{"cell_type":"code","source":["names=np.array(['Bob','Joe','Bob','Will','Joe','Joe'])\n","np.unique(names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eaMI50SQ6e58","executionInfo":{"status":"ok","timestamp":1714806375744,"user_tz":-540,"elapsed":373,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b8d2e978-d372-4af7-e45e-7caa317ad11f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Bob', 'Joe', 'Will'], dtype='<U4')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["ints=np.array([3,3,3,2,2,1,1,4,4,5])\n","np.unique(ints)\n","# ene ni array-iin unique elementuudiig butsaana.\n","\n","unique_elements, counts = np.unique(ints, return_counts=True)\n","print(unique_elements)\n","print(counts)\n","# ene bol ted nar ni hed baigaag toolood ugchij baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D1CEGFx25Cvy","executionInfo":{"status":"ok","timestamp":1714806389264,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"2b916945-7649-46bf-a779-66bce229b3e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4 5]\n","[2 2 3 2 1]\n"]}]},{"cell_type":"code","source":["sorted(set(names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"62s9I-sD5Cyx","executionInfo":{"status":"ok","timestamp":1714523095594,"user_tz":-540,"elapsed":6,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5aa8a2a4-8bdc-4118-bd65-4efe69187aa0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Bob', 'Joe', 'Will']"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["Membership"],"metadata":{"id":"hrSw2w-GiKbJ"}},{"cell_type":"code","source":["values=np.array([6,0,0,3,2,5,6])\n","np.in1d(values,[2,3,6])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"El3q74u_hDZL","executionInfo":{"status":"ok","timestamp":1714523601139,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"02c5513c-1ed1-427d-9bf7-47fca89ed811"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False, False,  True,  True, False,  True])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["phone=np.array([123,124,125,126,127,128])\n","name=np.array(['Jhon','Eric','James','Tony','Paul','Cole'])\n","np.in1d(phone, [123,124,126])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6eHIldkKj6rx","executionInfo":{"status":"ok","timestamp":1714523904357,"user_tz":-540,"elapsed":409,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e17cf15a-4279-491d-d728-3171cc86aed4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True,  True, False,  True, False, False])"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["name[np.in1d(phone, [123,124,126])]\n","#name dotor ni ingeed duudval yag shuud nersiig ni haruulad ugchnu.\n","# Ugaasa true false butsaad bgan chn, true deer ni hargalzah neriig ugj baigaa."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wXI98-cehDdR","executionInfo":{"status":"ok","timestamp":1714523927098,"user_tz":-540,"elapsed":423,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"854d0bf2-8568-420e-898c-a3fa2866a457"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Jhon', 'Eric', 'Tony'], dtype='<U5')"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["#Lesson 77(Numpy-Linear Algebra)"],"metadata":{"id":"l4aZyryA6f1F"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"HzZDD4Dg6gAn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=np.array([[1.,2.,3.],[4.,5.,6.]])\n","y=np.array([[6.,23.],[-1,7],[8,9]])\n","print(x)\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SM3KfxUw6gEX","executionInfo":{"status":"ok","timestamp":1714526220618,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"3ef9c2df-d1b6-4f3b-8907-e911631cab11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1. 2. 3.]\n"," [4. 5. 6.]]\n","[[ 6. 23.]\n"," [-1.  7.]\n"," [ 8.  9.]]\n"]}]},{"cell_type":"code","source":["print(x.dot(y))\n","print()\n","print(np.dot(x,y))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OfIsk5Dw6gII","executionInfo":{"status":"ok","timestamp":1714526555903,"user_tz":-540,"elapsed":391,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0f6f5d89-004a-495c-befa-c6aef8c16677"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 28.  64.]\n"," [ 67. 181.]]\n","\n","[[ 28.  64.]\n"," [ 67. 181.]]\n"]}]},{"cell_type":"code","source":["print(x[0,0]*y[0,0]+x[0,1]*y[1,0]+x[0,2]*y[2,0])\n","print(x[0,0]*y[0,1]+x[0,1]*y[1,1]+x[0,2]*y[2,1])\n","print(x[1,0]*y[0,0]+x[1,1]*y[1,0]+x[1,2]*y[2,0])\n","print(x[1,0]*y[0,1]+x[1,1]*y[1,1]+x[1,2]*y[2,1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kulwdyU86gLU","executionInfo":{"status":"ok","timestamp":1714526513761,"user_tz":-540,"elapsed":427,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6dff8583-1e60-4b44-f1ce-9ab0ac678a9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["28.0\n","64.0\n","67.0\n","181.0\n"]}]},{"cell_type":"markdown","source":["Ones matrix product"],"metadata":{"id":"IMHX5I0ZvzD7"}},{"cell_type":"code","source":["np.ones(3)\n","# zuvhun 1iin tootoi array uusgey gej baina.\n","#haaltnii ard tald dimension-iig ni todorhoilood ugj boldog."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JwxSlkmS4GJO","executionInfo":{"status":"ok","timestamp":1714526583807,"user_tz":-540,"elapsed":423,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"af77b6a3-4dcb-43d6-af2c-0d46ec341f67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 1., 1.])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["np.dot(x,np.ones(3))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mgIVu5yElBwe","executionInfo":{"status":"ok","timestamp":1714526599881,"user_tz":-540,"elapsed":420,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"0dd69a95-56fb-4316-8627-001e4079d797"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 6., 15.])"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["#Infix matrix multiplication\n","x @ np.ones(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HbxajxCFlB0m","executionInfo":{"status":"ok","timestamp":1714526722663,"user_tz":-540,"elapsed":430,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"587ece7b-d5e8-4d60-b68b-a7645ebec855"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 6., 15.])"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["Inverse"],"metadata":{"id":"kxWW-r_HwiX6"}},{"cell_type":"code","source":["from numpy.linalg import inv,qr\n","X=np.random.randn(3,3)\n","print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pME_rOktlB4X","executionInfo":{"status":"ok","timestamp":1714527256348,"user_tz":-540,"elapsed":400,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"54fa78b0-9fe1-4c2a-ce1b-fba5415212c7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.5056343  -1.57268971 -1.45929891]\n"," [ 0.54601795  1.36660062  0.1679899 ]\n"," [ 0.32395548 -0.64132782  1.62013153]]\n"]}]},{"cell_type":"code","source":["math=X.T.dot(X)\n","print(math)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8P5_xbJAwj6C","executionInfo":{"status":"ok","timestamp":1714527256883,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cc12df92-4bcf-4e30-e291-af00e35e0af7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.65874879 -0.25677904 -0.12129559]\n"," [-0.25677904  4.75225155  1.48556403]\n"," [-0.12129559  1.48556403  4.78260009]]\n"]}]},{"cell_type":"code","source":["inv(math)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tPQO6r82lB8F","executionInfo":{"status":"ok","timestamp":1714527257385,"user_tz":-540,"elapsed":6,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ca5a8c62-226d-42e4-e286-2fb55f57edcc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.55162784,  0.07923109,  0.01474151],\n","       [ 0.07923109,  0.23710214, -0.07163886],\n","       [ 0.01474151, -0.07163886,  0.23171751]])"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["math.dot(inv(math))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xAUblOcBlB_v","executionInfo":{"status":"ok","timestamp":1714527269979,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"69c70651-0f03-4392-dc01-8221f4bf1483"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.00000000e+00, -1.18634809e-17, -2.22884934e-19],\n","       [ 6.04977640e-17,  1.00000000e+00, -2.54728581e-17],\n","       [ 1.56842961e-17, -1.56908182e-17,  1.00000000e+00]])"]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["QR decomposition"],"metadata":{"id":"2Zexf-Mmw_wJ"}},{"cell_type":"code","source":["q,r =qr(math)"],"metadata":{"id":"W5ISlyx_xANY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Upper rectangular matrix\n","print(r)\n","#Orthogonal matrix\n","print(q)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eAyVt7jbxARe","executionInfo":{"status":"ok","timestamp":1714527432986,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"bad38107-cd55-40c1-a7a8-998d3dbe6a99"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.71735491  2.18807154  1.45182439]\n"," [ 0.         -4.47985198 -2.45969806]\n"," [ 0.          0.          4.11545479]]\n","[[-0.91830248 -0.39120321  0.06066804]\n"," [ 0.35795258 -0.88597251 -0.2948265 ]\n"," [ 0.16908729 -0.24902362  0.95362295]]\n"]}]},{"cell_type":"markdown","source":["Trace"],"metadata":{"id":"D3DujRLAy_tD"}},{"cell_type":"code","source":["A=np.arange(1,10).reshape(3,3)\n","print(A)\n","print(A.trace())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-wS748kMxAVO","executionInfo":{"status":"ok","timestamp":1714527519638,"user_tz":-540,"elapsed":411,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"95054198-cbb9-4498-be94-5a6fce130f6f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3]\n"," [4 5 6]\n"," [7 8 9]]\n","15\n"]}]},{"cell_type":"code","source":["A.diagonal()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QKvtXqdhxAYb","executionInfo":{"status":"ok","timestamp":1714527531416,"user_tz":-540,"elapsed":484,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9cbf2680-b2e6-4086-9d21-ac2b11dec806"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 5, 9])"]},"metadata":{},"execution_count":63}]},{"cell_type":"markdown","source":["Matrix determinant"],"metadata":{"id":"MN5h03KQzgMh"}},{"cell_type":"code","source":["np.linalg.det(A)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"09gZWRVwxAbt","executionInfo":{"status":"ok","timestamp":1714527598290,"user_tz":-540,"elapsed":425,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8cf7a886-566a-4530-bd56-fd7db4d3de17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["qr(A)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mAJTwHQDxAe3","executionInfo":{"status":"ok","timestamp":1714527605866,"user_tz":-540,"elapsed":553,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"cc20c30a-2932-414e-cf20-e09357a850a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["QRResult(Q=array([[-0.12309149,  0.90453403,  0.40824829],\n","       [-0.49236596,  0.30151134, -0.81649658],\n","       [-0.86164044, -0.30151134,  0.40824829]]), R=array([[-8.12403840e+00, -9.60113630e+00, -1.10782342e+01],\n","       [ 0.00000000e+00,  9.04534034e-01,  1.80906807e+00],\n","       [ 0.00000000e+00,  0.00000000e+00, -8.88178420e-16]]))"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["B=np.array([[1,2],[5,3]])\n","print(B)\n","print(np.linalg.det(B))\n","print(qr(B))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLnZQ5nuxAiD","executionInfo":{"status":"ok","timestamp":1714527654868,"user_tz":-540,"elapsed":375,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a24af3a4-a78e-4c4d-d54b-bce3a9655abc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [5 3]]\n","-6.999999999999999\n","QRResult(Q=array([[-0.19611614, -0.98058068],\n","       [-0.98058068,  0.19611614]]), R=array([[-5.09901951, -3.3339743 ],\n","       [ 0.        , -1.37281295]]))\n"]}]},{"cell_type":"markdown","source":["Eigenvalues adn Eigenvector"],"metadata":{"id":"cxz5d_pK1BU3"}},{"cell_type":"code","source":["eigenval, eigenvec=np.linalg.eig(B)\n","print(eigenval)\n","print()\n","print(eigenvec)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sHhFbGEmxAlv","executionInfo":{"status":"ok","timestamp":1714528066842,"user_tz":-540,"elapsed":416,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"02e19120-05f8-4799-882d-15b8a57f641c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-1.31662479  5.31662479]\n","\n","[[-0.65348485 -0.42039403]\n"," [ 0.7569396  -0.90734164]]\n"]}]},{"cell_type":"markdown","source":["#Lesson 79(Pandas--- Ugugdliin turluud)"],"metadata":{"id":"LzVFktc5grRO"}},{"cell_type":"markdown","source":["Pandas san ni daraah 3n turliin data structure bdg.\n","\n","1.Series / 1D / (Single Coloumn)\n","\n","2.Dataframe / 2D / (Single Sheet)\n","\n","3.Panel / 3D / (Multiple Sheets)\n","\n","Series ni bol numpy array-tai aimr adilhan\n","\n","DataFrame bol tabular data buyu excel-n husnegten datatai tustei."],"metadata":{"id":"USR-W-p_YWlW"}},{"cell_type":"markdown","source":["##Series"],"metadata":{"id":"m2nFTkfZZBfx"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"YWHSytoUxAq4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["age=pd.Series([14,42,38,13], name='age')\n","print(age)\n","print(type(age))"],"metadata":{"id":"aiK1hb-NxAuG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714840991061,"user_tz":-540,"elapsed":423,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"8d30d7de-14c6-4626-ad69-2e4608ec58e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    14\n","1    42\n","2    38\n","3    13\n","Name: age, dtype: int64\n","<class 'pandas.core.series.Series'>\n"]}]},{"cell_type":"code","source":["age_with_name=pd.Series([15,35], index=['Jhon', 'Mark'], name='ages', dtype=float )\n","print(age_with_name)"],"metadata":{"id":"BYaZZkvrxAxV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714840460722,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4a29aea3-6433-4a29-f407-d6e391d4c91a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Jhon    15.0\n","Mark    35.0\n","Name: ages, dtype: float64\n"]}]},{"cell_type":"code","source":["teacher=pd.Series(['Jhon', 'Mark', 'Adam', 'Alex'], name='teacher')\n","print(teacher)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RMI5FYVqdzCD","executionInfo":{"status":"ok","timestamp":1714841073109,"user_tz":-540,"elapsed":319,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"18457274-0205-4cb6-86ef-5b1379c83ee6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    Jhon\n","1    Mark\n","2    Adam\n","3    Alex\n","Name: teacher, dtype: object\n"]}]},{"cell_type":"code","source":["name=pd.Series(['Alex',' Jhon', 'Mark','Rose'], name='name')\n","print(name)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nxtVN-3leFNb","executionInfo":{"status":"ok","timestamp":1714841011293,"user_tz":-540,"elapsed":425,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"3ce5aeae-9986-43cd-ff58-96624a0a6328"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0     Alex\n","1     Jhon\n","2     Mark\n","3     Rose\n","Name: name, dtype: object\n"]}]},{"cell_type":"markdown","source":["##DataFrame"],"metadata":{"id":"wuwL_XG3bDNz"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.DataFrame({\n","    'name': name,\n","    'teacher': teacher,\n","    'age': age\n","})\n","print(df)"],"metadata":{"id":"OYYvfWwzlC7m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714841078155,"user_tz":-540,"elapsed":351,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d2c4bb91-2cb5-4e42-abfd-beac6bb0ceb7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    name teacher  age\n","0   Alex    Jhon   14\n","1   Jhon    Mark   42\n","2   Mark    Adam   38\n","3   Rose    Alex   13\n"]}]},{"cell_type":"code","source":["df2=pd.DataFrame({'teacher': teacher,\n","                  'age': age})\n","print(df2)"],"metadata":{"id":"w5pxJaVJlC_g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714841085163,"user_tz":-540,"elapsed":314,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"c5d91e90-5dad-4d3a-8151-3c7e2deadf1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["  teacher  age\n","0    Jhon   14\n","1    Mark   42\n","2    Adam   38\n","3    Alex   13\n"]}]},{"cell_type":"code","source":["df2.set_index(name)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HbaTIh9P5cs6","executionInfo":{"status":"ok","timestamp":1714841122742,"user_tz":-540,"elapsed":555,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5bc9d9df-9726-44e9-8677-8ea42246b3a0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      teacher  age\n","name              \n","Alex     Jhon   14\n"," Jhon    Mark   42\n","Mark     Adam   38\n","Rose     Alex   13"],"text/html":["\n","  <div id=\"df-cb18c69f-6f7c-4317-95a9-2e9edb801970\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>teacher</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alex</th>\n","      <td>Jhon</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>Jhon</th>\n","      <td>Mark</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>Mark</th>\n","      <td>Adam</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>Rose</th>\n","      <td>Alex</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb18c69f-6f7c-4317-95a9-2e9edb801970')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb18c69f-6f7c-4317-95a9-2e9edb801970 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb18c69f-6f7c-4317-95a9-2e9edb801970');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aaff6e56-c7be-4b80-b5a1-4caa29b587b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aaff6e56-c7be-4b80-b5a1-4caa29b587b9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aaff6e56-c7be-4b80-b5a1-4caa29b587b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \" Jhon\",\n          \"Rose\",\n          \"Alex\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"teacher\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Mark\",\n          \"Alex\",\n          \"Jhon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 13,\n        \"max\": 42,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          42,\n          13,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":110}]},{"cell_type":"markdown","source":["##Panel"],"metadata":{"id":"NrSF4fOyfzCK"}},{"cell_type":"code","source":["data={'Sheet1':df, 'Sheet2': df2}\n","print(data)\n","# say Panel ni neeh"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nYLo7OVu5c3I","executionInfo":{"status":"ok","timestamp":1714841197519,"user_tz":-540,"elapsed":336,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a5073bbd-7681-45ed-ff90-2a8915ff1433"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Sheet1':     name teacher  age\n","0   Alex    Jhon   14\n","1   Jhon    Mark   42\n","2   Mark    Adam   38\n","3   Rose    Alex   13, 'Sheet2':   teacher  age\n","0    Jhon   14\n","1    Mark   42\n","2    Adam   38\n","3    Alex   13}\n"]}]},{"cell_type":"markdown","source":["#Lesson 81(Sklearn--dataset)"],"metadata":{"id":"mbgK9QAHekGO"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.datasets import load_boston"],"metadata":{"id":"Lax-T5Muei63"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["boston=load_boston()\n","print(boston.keys())"],"metadata":{"id":"wV46bJ5Uei-e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714877095373,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f1be8ac1-2f98-415d-829d-bfa20ce92c4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['data', 'target', 'feature_names', 'DESCR', 'filename', 'data_module'])\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function load_boston is deprecated; `load_boston` is deprecated in 1.0 and will be removed in 1.2.\n","\n","    The Boston housing prices dataset has an ethical problem. You can refer to\n","    the documentation of this function for further details.\n","\n","    The scikit-learn maintainers therefore strongly discourage the use of this\n","    dataset unless the purpose of the code is to study and educate about\n","    ethical issues in data science and machine learning.\n","\n","    In this special case, you can fetch the dataset from the original\n","    source::\n","\n","        import pandas as pd\n","        import numpy as np\n","\n","        data_url = \"http://lib.stat.cmu.edu/datasets/boston\"\n","        raw_df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n","        data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])\n","        target = raw_df.values[1::2, 2]\n","\n","    Alternative datasets include the California housing dataset (i.e.\n","    :func:`~sklearn.datasets.fetch_california_housing`) and the Ames housing\n","    dataset. You can load the datasets as follows::\n","\n","        from sklearn.datasets import fetch_california_housing\n","        housing = fetch_california_housing()\n","\n","    for the California housing dataset and::\n","\n","        from sklearn.datasets import fetch_openml\n","        housing = fetch_openml(name=\"house_prices\", as_frame=True)\n","\n","    for the Ames housing dataset.\n","  warnings.warn(msg, category=FutureWarning)\n"]}]},{"cell_type":"code","source":["print(boston.DESCR)\n"],"metadata":{"id":"mRiePHhMejWi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714877054175,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b86aea9b-65df-42f4-d038-71bc7c890269"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[".. _boston_dataset:\n","\n","Boston house prices dataset\n","---------------------------\n","\n","**Data Set Characteristics:**  \n","\n","    :Number of Instances: 506 \n","\n","    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.\n","\n","    :Attribute Information (in order):\n","        - CRIM     per capita crime rate by town\n","        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.\n","        - INDUS    proportion of non-retail business acres per town\n","        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)\n","        - NOX      nitric oxides concentration (parts per 10 million)\n","        - RM       average number of rooms per dwelling\n","        - AGE      proportion of owner-occupied units built prior to 1940\n","        - DIS      weighted distances to five Boston employment centres\n","        - RAD      index of accessibility to radial highways\n","        - TAX      full-value property-tax rate per $10,000\n","        - PTRATIO  pupil-teacher ratio by town\n","        - B        1000(Bk - 0.63)^2 where Bk is the proportion of black people by town\n","        - LSTAT    % lower status of the population\n","        - MEDV     Median value of owner-occupied homes in $1000's\n","\n","    :Missing Attribute Values: None\n","\n","    :Creator: Harrison, D. and Rubinfeld, D.L.\n","\n","This is a copy of UCI ML housing dataset.\n","https://archive.ics.uci.edu/ml/machine-learning-databases/housing/\n","\n","\n","This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.\n","\n","The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic\n","prices and the demand for clean air', J. Environ. Economics & Management,\n","vol.5, 81-102, 1978.   Used in Belsley, Kuh & Welsch, 'Regression diagnostics\n","...', Wiley, 1980.   N.B. Various transformations are used in the table on\n","pages 244-261 of the latter.\n","\n","The Boston house-price data has been used in many machine learning papers that address regression\n","problems.   \n","     \n",".. topic:: References\n","\n","   - Belsley, Kuh & Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.\n","   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.\n","\n"]}]},{"cell_type":"markdown","source":["##Ugugdul huulah"],"metadata":{"id":"qg06Cg9Mw0A0"}},{"cell_type":"code","source":["df=pd.DataFrame(boston.data)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cIe8xkCmpLvn","executionInfo":{"status":"ok","timestamp":1714879246494,"user_tz":-540,"elapsed":409,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b290a7f9-5b57-47ff-bd81-11e64d847213"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          0     1      2    3      4      5     6       7    8      9     10  \\\n","0    0.00632  18.0   2.31  0.0  0.538  6.575  65.2  4.0900  1.0  296.0  15.3   \n","1    0.02731   0.0   7.07  0.0  0.469  6.421  78.9  4.9671  2.0  242.0  17.8   \n","2    0.02729   0.0   7.07  0.0  0.469  7.185  61.1  4.9671  2.0  242.0  17.8   \n","3    0.03237   0.0   2.18  0.0  0.458  6.998  45.8  6.0622  3.0  222.0  18.7   \n","4    0.06905   0.0   2.18  0.0  0.458  7.147  54.2  6.0622  3.0  222.0  18.7   \n","..       ...   ...    ...  ...    ...    ...   ...     ...  ...    ...   ...   \n","501  0.06263   0.0  11.93  0.0  0.573  6.593  69.1  2.4786  1.0  273.0  21.0   \n","502  0.04527   0.0  11.93  0.0  0.573  6.120  76.7  2.2875  1.0  273.0  21.0   \n","503  0.06076   0.0  11.93  0.0  0.573  6.976  91.0  2.1675  1.0  273.0  21.0   \n","504  0.10959   0.0  11.93  0.0  0.573  6.794  89.3  2.3889  1.0  273.0  21.0   \n","505  0.04741   0.0  11.93  0.0  0.573  6.030  80.8  2.5050  1.0  273.0  21.0   \n","\n","         11    12  \n","0    396.90  4.98  \n","1    396.90  9.14  \n","2    392.83  4.03  \n","3    394.63  2.94  \n","4    396.90  5.33  \n","..      ...   ...  \n","501  391.99  9.67  \n","502  396.90  9.08  \n","503  396.90  5.64  \n","504  393.45  6.48  \n","505  396.90  7.88  \n","\n","[506 rows x 13 columns]\n"]}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"74rbdAa2pLys","executionInfo":{"status":"ok","timestamp":1714879262540,"user_tz":-540,"elapsed":412,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"3c216544-877a-4411-edb0-1099480786e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(506, 13)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"F0ZEzPKkpL1t","executionInfo":{"status":"ok","timestamp":1714879272932,"user_tz":-540,"elapsed":721,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"437a5888-d41c-4420-a46d-b2a6f76a5f4c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        0     1     2    3      4      5     6       7    8      9     10  \\\n","0  0.00632  18.0  2.31  0.0  0.538  6.575  65.2  4.0900  1.0  296.0  15.3   \n","1  0.02731   0.0  7.07  0.0  0.469  6.421  78.9  4.9671  2.0  242.0  17.8   \n","2  0.02729   0.0  7.07  0.0  0.469  7.185  61.1  4.9671  2.0  242.0  17.8   \n","3  0.03237   0.0  2.18  0.0  0.458  6.998  45.8  6.0622  3.0  222.0  18.7   \n","4  0.06905   0.0  2.18  0.0  0.458  7.147  54.2  6.0622  3.0  222.0  18.7   \n","\n","       11    12  \n","0  396.90  4.98  \n","1  396.90  9.14  \n","2  392.83  4.03  \n","3  394.63  2.94  \n","4  396.90  5.33  "],"text/html":["\n","  <div id=\"df-024c9a9a-8bef-476f-8fdd-d956e0c1fada\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0.0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1.0</td>\n","      <td>296.0</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2.0</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2.0</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3.0</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3.0</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-024c9a9a-8bef-476f-8fdd-d956e0c1fada')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-024c9a9a-8bef-476f-8fdd-d956e0c1fada button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-024c9a9a-8bef-476f-8fdd-d956e0c1fada');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ab992fd-9311-472a-9fb5-60fe68383172\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ab992fd-9311-472a-9fb5-60fe68383172')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ab992fd-9311-472a-9fb5-60fe68383172 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 506,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.60154510533249,\n        \"min\": 0.00632,\n        \"max\": 88.9762,\n        \"num_unique_values\": 504,\n        \"samples\": [\n          0.09178,\n          0.05644,\n          0.10574\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.32245299451514,\n        \"min\": 0.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          25.0,\n          30.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.860352940897585,\n        \"min\": 0.46,\n        \"max\": 27.74,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          8.14,\n          1.47,\n          1.22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25399404134041037,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11587767566755595,\n        \"min\": 0.385,\n        \"max\": 0.871,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          0.401,\n          0.538\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7026171434153233,\n        \"min\": 3.561,\n        \"max\": 8.78,\n        \"num_unique_values\": 446,\n        \"samples\": [\n          6.849,\n          4.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.148861406903617,\n        \"min\": 2.9,\n        \"max\": 100.0,\n        \"num_unique_values\": 356,\n        \"samples\": [\n          51.8,\n          33.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.105710126627611,\n        \"min\": 1.1296,\n        \"max\": 12.1265,\n        \"num_unique_values\": 412,\n        \"samples\": [\n          2.2955,\n          4.2515\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.707259384239366,\n        \"min\": 1.0,\n        \"max\": 24.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          7.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 168.53711605495903,\n        \"min\": 187.0,\n        \"max\": 711.0,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          370.0,\n          666.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1649455237144406,\n        \"min\": 12.6,\n        \"max\": 22.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          19.6,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.29486438415783,\n        \"min\": 0.32,\n        \"max\": 396.9,\n        \"num_unique_values\": 357,\n        \"samples\": [\n          396.24,\n          395.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 12,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.141061511348571,\n        \"min\": 1.73,\n        \"max\": 37.97,\n        \"num_unique_values\": 455,\n        \"samples\": [\n          6.15,\n          4.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["##Baganiin ner todorhoiloh."],"metadata":{"id":"zUL8vLB1xXo6"}},{"cell_type":"code","source":["boston.feature_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"51z1xWsTpL41","executionInfo":{"status":"ok","timestamp":1714879376663,"user_tz":-540,"elapsed":427,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b71cd872-a3ed-48e3-8963-8a158cc77987"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD',\n","       'TAX', 'PTRATIO', 'B', 'LSTAT'], dtype='<U7')"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.columns=boston.feature_names\n","print(df.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PXjCmQIzpL7w","executionInfo":{"status":"ok","timestamp":1714879418286,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"224f33c8-7445-44a8-d04d-5e6e526a3540"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      CRIM    ZN  INDUS  CHAS    NOX     RM   AGE     DIS  RAD    TAX  \\\n","0  0.00632  18.0   2.31   0.0  0.538  6.575  65.2  4.0900  1.0  296.0   \n","1  0.02731   0.0   7.07   0.0  0.469  6.421  78.9  4.9671  2.0  242.0   \n","2  0.02729   0.0   7.07   0.0  0.469  7.185  61.1  4.9671  2.0  242.0   \n","3  0.03237   0.0   2.18   0.0  0.458  6.998  45.8  6.0622  3.0  222.0   \n","4  0.06905   0.0   2.18   0.0  0.458  7.147  54.2  6.0622  3.0  222.0   \n","\n","   PTRATIO       B  LSTAT  \n","0     15.3  396.90   4.98  \n","1     17.8  396.90   9.14  \n","2     17.8  392.83   4.03  \n","3     18.7  394.63   2.94  \n","4     18.7  396.90   5.33  \n"]}]},{"cell_type":"code","source":["df['PRICE']=boston.target\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"I4phxuHgpL-y","executionInfo":{"status":"ok","timestamp":1714879484993,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"a027869c-a748-4e40-f1a4-0a66cf319305"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CRIM    ZN  INDUS  CHAS    NOX     RM   AGE     DIS  RAD    TAX  \\\n","0  0.00632  18.0   2.31   0.0  0.538  6.575  65.2  4.0900  1.0  296.0   \n","1  0.02731   0.0   7.07   0.0  0.469  6.421  78.9  4.9671  2.0  242.0   \n","2  0.02729   0.0   7.07   0.0  0.469  7.185  61.1  4.9671  2.0  242.0   \n","3  0.03237   0.0   2.18   0.0  0.458  6.998  45.8  6.0622  3.0  222.0   \n","4  0.06905   0.0   2.18   0.0  0.458  7.147  54.2  6.0622  3.0  222.0   \n","\n","   PTRATIO       B  LSTAT  PRICE  \n","0     15.3  396.90   4.98   24.0  \n","1     17.8  396.90   9.14   21.6  \n","2     17.8  392.83   4.03   34.7  \n","3     18.7  394.63   2.94   33.4  \n","4     18.7  396.90   5.33   36.2  "],"text/html":["\n","  <div id=\"df-27f7bc0f-667a-4b2b-baed-5dd87beabe53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CRIM</th>\n","      <th>ZN</th>\n","      <th>INDUS</th>\n","      <th>CHAS</th>\n","      <th>NOX</th>\n","      <th>RM</th>\n","      <th>AGE</th>\n","      <th>DIS</th>\n","      <th>RAD</th>\n","      <th>TAX</th>\n","      <th>PTRATIO</th>\n","      <th>B</th>\n","      <th>LSTAT</th>\n","      <th>PRICE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0.0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1.0</td>\n","      <td>296.0</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2.0</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2.0</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3.0</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3.0</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27f7bc0f-667a-4b2b-baed-5dd87beabe53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27f7bc0f-667a-4b2b-baed-5dd87beabe53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27f7bc0f-667a-4b2b-baed-5dd87beabe53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6a659a1-f300-4fc2-81fc-7b2c26d1ecc4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6a659a1-f300-4fc2-81fc-7b2c26d1ecc4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6a659a1-f300-4fc2-81fc-7b2c26d1ecc4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 506,\n  \"fields\": [\n    {\n      \"column\": \"CRIM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.60154510533249,\n        \"min\": 0.00632,\n        \"max\": 88.9762,\n        \"num_unique_values\": 504,\n        \"samples\": [\n          0.09178,\n          0.05644,\n          0.10574\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ZN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.32245299451514,\n        \"min\": 0.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          25.0,\n          30.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"INDUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.860352940897585,\n        \"min\": 0.46,\n        \"max\": 27.74,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          8.14,\n          1.47,\n          1.22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CHAS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25399404134041037,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NOX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11587767566755595,\n        \"min\": 0.385,\n        \"max\": 0.871,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          0.401,\n          0.538\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7026171434153233,\n        \"min\": 3.561,\n        \"max\": 8.78,\n        \"num_unique_values\": 446,\n        \"samples\": [\n          6.849,\n          4.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.148861406903617,\n        \"min\": 2.9,\n        \"max\": 100.0,\n        \"num_unique_values\": 356,\n        \"samples\": [\n          51.8,\n          33.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DIS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.105710126627611,\n        \"min\": 1.1296,\n        \"max\": 12.1265,\n        \"num_unique_values\": 412,\n        \"samples\": [\n          2.2955,\n          4.2515\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.707259384239366,\n        \"min\": 1.0,\n        \"max\": 24.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          7.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TAX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 168.53711605495903,\n        \"min\": 187.0,\n        \"max\": 711.0,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          370.0,\n          666.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PTRATIO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1649455237144406,\n        \"min\": 12.6,\n        \"max\": 22.0,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          19.6,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.29486438415783,\n        \"min\": 0.32,\n        \"max\": 396.9,\n        \"num_unique_values\": 357,\n        \"samples\": [\n          396.24,\n          395.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LSTAT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.141061511348571,\n        \"min\": 1.73,\n        \"max\": 37.97,\n        \"num_unique_values\": 455,\n        \"samples\": [\n          6.15,\n          4.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PRICE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.197104087379818,\n        \"min\": 5.0,\n        \"max\": 50.0,\n        \"num_unique_values\": 229,\n        \"samples\": [\n          14.1,\n          22.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["##Summary statistics"],"metadata":{"id":"0H0NVfyQyIRE"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"id":"HrLKfPpVevHd","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1714879521054,"user_tz":-540,"elapsed":409,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"f12fccad-8cc4-4e61-c577-c8dcab12d740"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             CRIM          ZN       INDUS        CHAS         NOX          RM  \\\n","count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   \n","mean     3.613524   11.363636   11.136779    0.069170    0.554695    6.284634   \n","std      8.601545   23.322453    6.860353    0.253994    0.115878    0.702617   \n","min      0.006320    0.000000    0.460000    0.000000    0.385000    3.561000   \n","25%      0.082045    0.000000    5.190000    0.000000    0.449000    5.885500   \n","50%      0.256510    0.000000    9.690000    0.000000    0.538000    6.208500   \n","75%      3.677083   12.500000   18.100000    0.000000    0.624000    6.623500   \n","max     88.976200  100.000000   27.740000    1.000000    0.871000    8.780000   \n","\n","              AGE         DIS         RAD         TAX     PTRATIO           B  \\\n","count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   \n","mean    68.574901    3.795043    9.549407  408.237154   18.455534  356.674032   \n","std     28.148861    2.105710    8.707259  168.537116    2.164946   91.294864   \n","min      2.900000    1.129600    1.000000  187.000000   12.600000    0.320000   \n","25%     45.025000    2.100175    4.000000  279.000000   17.400000  375.377500   \n","50%     77.500000    3.207450    5.000000  330.000000   19.050000  391.440000   \n","75%     94.075000    5.188425   24.000000  666.000000   20.200000  396.225000   \n","max    100.000000   12.126500   24.000000  711.000000   22.000000  396.900000   \n","\n","            LSTAT       PRICE  \n","count  506.000000  506.000000  \n","mean    12.653063   22.532806  \n","std      7.141062    9.197104  \n","min      1.730000    5.000000  \n","25%      6.950000   17.025000  \n","50%     11.360000   21.200000  \n","75%     16.955000   25.000000  \n","max     37.970000   50.000000  "],"text/html":["\n","  <div id=\"df-39e5ea6a-b57c-450d-b017-c23636669735\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CRIM</th>\n","      <th>ZN</th>\n","      <th>INDUS</th>\n","      <th>CHAS</th>\n","      <th>NOX</th>\n","      <th>RM</th>\n","      <th>AGE</th>\n","      <th>DIS</th>\n","      <th>RAD</th>\n","      <th>TAX</th>\n","      <th>PTRATIO</th>\n","      <th>B</th>\n","      <th>LSTAT</th>\n","      <th>PRICE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","      <td>506.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.613524</td>\n","      <td>11.363636</td>\n","      <td>11.136779</td>\n","      <td>0.069170</td>\n","      <td>0.554695</td>\n","      <td>6.284634</td>\n","      <td>68.574901</td>\n","      <td>3.795043</td>\n","      <td>9.549407</td>\n","      <td>408.237154</td>\n","      <td>18.455534</td>\n","      <td>356.674032</td>\n","      <td>12.653063</td>\n","      <td>22.532806</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.601545</td>\n","      <td>23.322453</td>\n","      <td>6.860353</td>\n","      <td>0.253994</td>\n","      <td>0.115878</td>\n","      <td>0.702617</td>\n","      <td>28.148861</td>\n","      <td>2.105710</td>\n","      <td>8.707259</td>\n","      <td>168.537116</td>\n","      <td>2.164946</td>\n","      <td>91.294864</td>\n","      <td>7.141062</td>\n","      <td>9.197104</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.006320</td>\n","      <td>0.000000</td>\n","      <td>0.460000</td>\n","      <td>0.000000</td>\n","      <td>0.385000</td>\n","      <td>3.561000</td>\n","      <td>2.900000</td>\n","      <td>1.129600</td>\n","      <td>1.000000</td>\n","      <td>187.000000</td>\n","      <td>12.600000</td>\n","      <td>0.320000</td>\n","      <td>1.730000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.082045</td>\n","      <td>0.000000</td>\n","      <td>5.190000</td>\n","      <td>0.000000</td>\n","      <td>0.449000</td>\n","      <td>5.885500</td>\n","      <td>45.025000</td>\n","      <td>2.100175</td>\n","      <td>4.000000</td>\n","      <td>279.000000</td>\n","      <td>17.400000</td>\n","      <td>375.377500</td>\n","      <td>6.950000</td>\n","      <td>17.025000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.256510</td>\n","      <td>0.000000</td>\n","      <td>9.690000</td>\n","      <td>0.000000</td>\n","      <td>0.538000</td>\n","      <td>6.208500</td>\n","      <td>77.500000</td>\n","      <td>3.207450</td>\n","      <td>5.000000</td>\n","      <td>330.000000</td>\n","      <td>19.050000</td>\n","      <td>391.440000</td>\n","      <td>11.360000</td>\n","      <td>21.200000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.677083</td>\n","      <td>12.500000</td>\n","      <td>18.100000</td>\n","      <td>0.000000</td>\n","      <td>0.624000</td>\n","      <td>6.623500</td>\n","      <td>94.075000</td>\n","      <td>5.188425</td>\n","      <td>24.000000</td>\n","      <td>666.000000</td>\n","      <td>20.200000</td>\n","      <td>396.225000</td>\n","      <td>16.955000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>88.976200</td>\n","      <td>100.000000</td>\n","      <td>27.740000</td>\n","      <td>1.000000</td>\n","      <td>0.871000</td>\n","      <td>8.780000</td>\n","      <td>100.000000</td>\n","      <td>12.126500</td>\n","      <td>24.000000</td>\n","      <td>711.000000</td>\n","      <td>22.000000</td>\n","      <td>396.900000</td>\n","      <td>37.970000</td>\n","      <td>50.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39e5ea6a-b57c-450d-b017-c23636669735')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39e5ea6a-b57c-450d-b017-c23636669735 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39e5ea6a-b57c-450d-b017-c23636669735');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab24a94c-9ca5-4632-88ef-9cc00886f22d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab24a94c-9ca5-4632-88ef-9cc00886f22d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab24a94c-9ca5-4632-88ef-9cc00886f22d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"CRIM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.21241273856964,\n        \"min\": 0.00632,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.613523557312254,\n          0.25651,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ZN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 174.65631992520622,\n        \"min\": 0.0,\n        \"max\": 506.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          506.0,\n          11.363636363636363,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"INDUS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175.10046881853455,\n        \"min\": 0.46,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11.13677865612648,\n          9.69,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CHAS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 178.83151296515905,\n        \"min\": 0.0,\n        \"max\": 506.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0691699604743083,\n          1.0,\n          0.25399404134041037\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NOX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 178.71946937975397,\n        \"min\": 0.11587767566755595,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.5546950592885376,\n          0.538,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.99257138815915,\n        \"min\": 0.7026171434153233,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.284634387351779,\n          6.2085,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 161.29423343904304,\n        \"min\": 2.9,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          68.57490118577076,\n          77.5,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DIS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177.4338019618181,\n        \"min\": 1.1296,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.795042687747036,\n          3.2074499999999997,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 175.26272292595036,\n        \"min\": 1.0,\n        \"max\": 506.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          506.0,\n          9.549407114624506,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TAX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 205.93933614417858,\n        \"min\": 168.53711605495903,\n        \"max\": 711.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          408.2371541501976,\n          330.0,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PTRATIO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 173.36059244426346,\n        \"min\": 2.1649455237144406,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          18.455533596837945,\n          19.05,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 173.23587641654387,\n        \"min\": 0.32,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          356.6740316205534,\n          391.44,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LSTAT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 174.45535325169888,\n        \"min\": 1.73,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.653063241106722,\n          11.36,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PRICE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 171.852511161592,\n        \"min\": 5.0,\n        \"max\": 506.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          22.532806324110677,\n          21.2,\n          506.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["#Lesson82 (Pandas--)"],"metadata":{"id":"sdOusCjOyPDu"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.datasets import load_wine\n","wine=load_wine()"],"metadata":{"id":"7EtUgvfsevLY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(wine.DESCR)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LFYRyDhS9S6E","executionInfo":{"status":"ok","timestamp":1714882599837,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"4b24e6b6-7ed2-4d9e-c6a8-aa9982818785"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[".. _wine_dataset:\n","\n","Wine recognition dataset\n","------------------------\n","\n","**Data Set Characteristics:**\n","\n","    :Number of Instances: 178 (50 in each of three classes)\n","    :Number of Attributes: 13 numeric, predictive attributes and the class\n","    :Attribute Information:\n"," \t\t- Alcohol\n"," \t\t- Malic acid\n"," \t\t- Ash\n","\t\t- Alcalinity of ash  \n"," \t\t- Magnesium\n","\t\t- Total phenols\n"," \t\t- Flavanoids\n"," \t\t- Nonflavanoid phenols\n"," \t\t- Proanthocyanins\n","\t\t- Color intensity\n"," \t\t- Hue\n"," \t\t- OD280/OD315 of diluted wines\n"," \t\t- Proline\n","\n","    - class:\n","            - class_0\n","            - class_1\n","            - class_2\n","\t\t\n","    :Summary Statistics:\n","    \n","    ============================= ==== ===== ======= =====\n","                                   Min   Max   Mean     SD\n","    ============================= ==== ===== ======= =====\n","    Alcohol:                      11.0  14.8    13.0   0.8\n","    Malic Acid:                   0.74  5.80    2.34  1.12\n","    Ash:                          1.36  3.23    2.36  0.27\n","    Alcalinity of Ash:            10.6  30.0    19.5   3.3\n","    Magnesium:                    70.0 162.0    99.7  14.3\n","    Total Phenols:                0.98  3.88    2.29  0.63\n","    Flavanoids:                   0.34  5.08    2.03  1.00\n","    Nonflavanoid Phenols:         0.13  0.66    0.36  0.12\n","    Proanthocyanins:              0.41  3.58    1.59  0.57\n","    Colour Intensity:              1.3  13.0     5.1   2.3\n","    Hue:                          0.48  1.71    0.96  0.23\n","    OD280/OD315 of diluted wines: 1.27  4.00    2.61  0.71\n","    Proline:                       278  1680     746   315\n","    ============================= ==== ===== ======= =====\n","\n","    :Missing Attribute Values: None\n","    :Class Distribution: class_0 (59), class_1 (71), class_2 (48)\n","    :Creator: R.A. Fisher\n","    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)\n","    :Date: July, 1988\n","\n","This is a copy of UCI ML Wine recognition datasets.\n","https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data\n","\n","The data is the results of a chemical analysis of wines grown in the same\n","region in Italy by three different cultivators. There are thirteen different\n","measurements taken for different constituents found in the three types of\n","wine.\n","\n","Original Owners: \n","\n","Forina, M. et al, PARVUS - \n","An Extendible Package for Data Exploration, Classification and Correlation. \n","Institute of Pharmaceutical and Food Analysis and Technologies,\n","Via Brigata Salerno, 16147 Genoa, Italy.\n","\n","Citation:\n","\n","Lichman, M. (2013). UCI Machine Learning Repository\n","[https://archive.ics.uci.edu/ml]. Irvine, CA: University of California,\n","School of Information and Computer Science. \n","\n",".. topic:: References\n","\n","  (1) S. Aeberhard, D. Coomans and O. de Vel, \n","  Comparison of Classifiers in High Dimensional Settings, \n","  Tech. Rep. no. 92-02, (1992), Dept. of Computer Science and Dept. of  \n","  Mathematics and Statistics, James Cook University of North Queensland. \n","  (Also submitted to Technometrics). \n","\n","  The data was used with many others for comparing various \n","  classifiers. The classes are separable, though only RDA \n","  has achieved 100% correct classification. \n","  (RDA : 100%, QDA 99.4%, LDA 98.9%, 1NN 96.1% (z-transformed data)) \n","  (All results using the leave-one-out technique) \n","\n","  (2) S. Aeberhard, D. Coomans and O. de Vel, \n","  \"THE CLASSIFICATION PERFORMANCE OF RDA\" \n","  Tech. Rep. no. 92-01, (1992), Dept. of Computer Science and Dept. of \n","  Mathematics and Statistics, James Cook University of North Queensland. \n","  (Also submitted to Journal of Chemometrics).\n","\n"]}]},{"cell_type":"code","source":["df=pd.DataFrame(wine.data)"],"metadata":{"id":"aqIMYVrC9fc_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"OmviC9AZ9fgI","executionInfo":{"status":"ok","timestamp":1714882640943,"user_tz":-540,"elapsed":726,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9e6073d5-2efe-48fc-9e20-f01cd8d8d729"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0     1     2     3      4     5     6     7     8     9     10    11  \\\n","0  14.23  1.71  2.43  15.6  127.0  2.80  3.06  0.28  2.29  5.64  1.04  3.92   \n","1  13.20  1.78  2.14  11.2  100.0  2.65  2.76  0.26  1.28  4.38  1.05  3.40   \n","2  13.16  2.36  2.67  18.6  101.0  2.80  3.24  0.30  2.81  5.68  1.03  3.17   \n","3  14.37  1.95  2.50  16.8  113.0  3.85  3.49  0.24  2.18  7.80  0.86  3.45   \n","4  13.24  2.59  2.87  21.0  118.0  2.80  2.69  0.39  1.82  4.32  1.04  2.93   \n","\n","       12  \n","0  1065.0  \n","1  1050.0  \n","2  1185.0  \n","3  1480.0  \n","4   735.0  "],"text/html":["\n","  <div id=\"df-3d098578-6116-4b65-9401-670b807bc11e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.23</td>\n","      <td>1.71</td>\n","      <td>2.43</td>\n","      <td>15.6</td>\n","      <td>127.0</td>\n","      <td>2.80</td>\n","      <td>3.06</td>\n","      <td>0.28</td>\n","      <td>2.29</td>\n","      <td>5.64</td>\n","      <td>1.04</td>\n","      <td>3.92</td>\n","      <td>1065.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13.20</td>\n","      <td>1.78</td>\n","      <td>2.14</td>\n","      <td>11.2</td>\n","      <td>100.0</td>\n","      <td>2.65</td>\n","      <td>2.76</td>\n","      <td>0.26</td>\n","      <td>1.28</td>\n","      <td>4.38</td>\n","      <td>1.05</td>\n","      <td>3.40</td>\n","      <td>1050.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","      <td>2.36</td>\n","      <td>2.67</td>\n","      <td>18.6</td>\n","      <td>101.0</td>\n","      <td>2.80</td>\n","      <td>3.24</td>\n","      <td>0.30</td>\n","      <td>2.81</td>\n","      <td>5.68</td>\n","      <td>1.03</td>\n","      <td>3.17</td>\n","      <td>1185.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.37</td>\n","      <td>1.95</td>\n","      <td>2.50</td>\n","      <td>16.8</td>\n","      <td>113.0</td>\n","      <td>3.85</td>\n","      <td>3.49</td>\n","      <td>0.24</td>\n","      <td>2.18</td>\n","      <td>7.80</td>\n","      <td>0.86</td>\n","      <td>3.45</td>\n","      <td>1480.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.24</td>\n","      <td>2.59</td>\n","      <td>2.87</td>\n","      <td>21.0</td>\n","      <td>118.0</td>\n","      <td>2.80</td>\n","      <td>2.69</td>\n","      <td>0.39</td>\n","      <td>1.82</td>\n","      <td>4.32</td>\n","      <td>1.04</td>\n","      <td>2.93</td>\n","      <td>735.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d098578-6116-4b65-9401-670b807bc11e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d098578-6116-4b65-9401-670b807bc11e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d098578-6116-4b65-9401-670b807bc11e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ca019bc0-cb9b-4471-a2da-eadc94ff9e85\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca019bc0-cb9b-4471-a2da-eadc94ff9e85')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ca019bc0-cb9b-4471-a2da-eadc94ff9e85 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 178,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8118265380058575,\n        \"min\": 11.03,\n        \"max\": 14.83,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          11.62,\n          13.64,\n          13.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1171460976144627,\n        \"min\": 0.74,\n        \"max\": 5.8,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          1.21,\n          2.83,\n          1.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27434400906081485,\n        \"min\": 1.36,\n        \"max\": 3.23,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          2.31,\n          2.43,\n          2.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.339563767173505,\n        \"min\": 10.6,\n        \"max\": 30.0,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          25.5,\n          28.5,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.282483515295665,\n        \"min\": 70.0,\n        \"max\": 162.0,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          126.0,\n          85.0,\n          162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6258510488339893,\n        \"min\": 0.98,\n        \"max\": 3.88,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          1.68,\n          2.11,\n          1.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9988586850169467,\n        \"min\": 0.34,\n        \"max\": 5.08,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          3.18,\n          2.5,\n          3.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12445334029667937,\n        \"min\": 0.13,\n        \"max\": 0.66,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          0.58,\n          0.41,\n          0.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5723588626747613,\n        \"min\": 0.41,\n        \"max\": 3.58,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          0.75,\n          1.77,\n          1.42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.318285871822413,\n        \"min\": 1.28,\n        \"max\": 13.0,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          2.95,\n          3.3,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22857156582982338,\n        \"min\": 0.48,\n        \"max\": 1.71,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          1.22,\n          1.04,\n          1.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 11,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7099904287650504,\n        \"min\": 1.27,\n        \"max\": 4.0,\n        \"num_unique_values\": 122,\n        \"samples\": [\n          4.0,\n          1.82,\n          1.59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 12,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.9074742768491,\n        \"min\": 278.0,\n        \"max\": 1680.0,\n        \"num_unique_values\": 121,\n        \"samples\": [\n          1375.0,\n          1270.0,\n          735.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["df.columns=wine.feature_names"],"metadata":{"id":"GJOPH4Fq9fje"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"BeqUZw3T9fmf","executionInfo":{"status":"ok","timestamp":1714882667383,"user_tz":-540,"elapsed":5,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"61a162a9-1f4c-42e1-a198-b059cc3bca48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   alcohol  malic_acid   ash  alcalinity_of_ash  magnesium  total_phenols  \\\n","0    14.23        1.71  2.43               15.6      127.0           2.80   \n","1    13.20        1.78  2.14               11.2      100.0           2.65   \n","2    13.16        2.36  2.67               18.6      101.0           2.80   \n","3    14.37        1.95  2.50               16.8      113.0           3.85   \n","4    13.24        2.59  2.87               21.0      118.0           2.80   \n","\n","   flavanoids  nonflavanoid_phenols  proanthocyanins  color_intensity   hue  \\\n","0        3.06                  0.28             2.29             5.64  1.04   \n","1        2.76                  0.26             1.28             4.38  1.05   \n","2        3.24                  0.30             2.81             5.68  1.03   \n","3        3.49                  0.24             2.18             7.80  0.86   \n","4        2.69                  0.39             1.82             4.32  1.04   \n","\n","   od280/od315_of_diluted_wines  proline  \n","0                          3.92   1065.0  \n","1                          3.40   1050.0  \n","2                          3.17   1185.0  \n","3                          3.45   1480.0  \n","4                          2.93    735.0  "],"text/html":["\n","  <div id=\"df-f058db7c-39bc-4d17-90b3-948a751f97dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","      <th>magnesium</th>\n","      <th>total_phenols</th>\n","      <th>flavanoids</th>\n","      <th>nonflavanoid_phenols</th>\n","      <th>proanthocyanins</th>\n","      <th>color_intensity</th>\n","      <th>hue</th>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <th>proline</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.23</td>\n","      <td>1.71</td>\n","      <td>2.43</td>\n","      <td>15.6</td>\n","      <td>127.0</td>\n","      <td>2.80</td>\n","      <td>3.06</td>\n","      <td>0.28</td>\n","      <td>2.29</td>\n","      <td>5.64</td>\n","      <td>1.04</td>\n","      <td>3.92</td>\n","      <td>1065.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13.20</td>\n","      <td>1.78</td>\n","      <td>2.14</td>\n","      <td>11.2</td>\n","      <td>100.0</td>\n","      <td>2.65</td>\n","      <td>2.76</td>\n","      <td>0.26</td>\n","      <td>1.28</td>\n","      <td>4.38</td>\n","      <td>1.05</td>\n","      <td>3.40</td>\n","      <td>1050.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","      <td>2.36</td>\n","      <td>2.67</td>\n","      <td>18.6</td>\n","      <td>101.0</td>\n","      <td>2.80</td>\n","      <td>3.24</td>\n","      <td>0.30</td>\n","      <td>2.81</td>\n","      <td>5.68</td>\n","      <td>1.03</td>\n","      <td>3.17</td>\n","      <td>1185.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.37</td>\n","      <td>1.95</td>\n","      <td>2.50</td>\n","      <td>16.8</td>\n","      <td>113.0</td>\n","      <td>3.85</td>\n","      <td>3.49</td>\n","      <td>0.24</td>\n","      <td>2.18</td>\n","      <td>7.80</td>\n","      <td>0.86</td>\n","      <td>3.45</td>\n","      <td>1480.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.24</td>\n","      <td>2.59</td>\n","      <td>2.87</td>\n","      <td>21.0</td>\n","      <td>118.0</td>\n","      <td>2.80</td>\n","      <td>2.69</td>\n","      <td>0.39</td>\n","      <td>1.82</td>\n","      <td>4.32</td>\n","      <td>1.04</td>\n","      <td>2.93</td>\n","      <td>735.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f058db7c-39bc-4d17-90b3-948a751f97dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f058db7c-39bc-4d17-90b3-948a751f97dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f058db7c-39bc-4d17-90b3-948a751f97dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-12376cb3-7627-49ec-8d2b-226a19149164\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12376cb3-7627-49ec-8d2b-226a19149164')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-12376cb3-7627-49ec-8d2b-226a19149164 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 178,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8118265380058575,\n        \"min\": 11.03,\n        \"max\": 14.83,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          11.62,\n          13.64,\n          13.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"malic_acid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1171460976144627,\n        \"min\": 0.74,\n        \"max\": 5.8,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          1.21,\n          2.83,\n          1.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27434400906081485,\n        \"min\": 1.36,\n        \"max\": 3.23,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          2.31,\n          2.43,\n          2.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alcalinity_of_ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.339563767173505,\n        \"min\": 10.6,\n        \"max\": 30.0,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          25.5,\n          28.5,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"magnesium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.282483515295665,\n        \"min\": 70.0,\n        \"max\": 162.0,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          126.0,\n          85.0,\n          162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6258510488339893,\n        \"min\": 0.98,\n        \"max\": 3.88,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          1.68,\n          2.11,\n          1.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flavanoids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9988586850169467,\n        \"min\": 0.34,\n        \"max\": 5.08,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          3.18,\n          2.5,\n          3.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nonflavanoid_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12445334029667937,\n        \"min\": 0.13,\n        \"max\": 0.66,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          0.58,\n          0.41,\n          0.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proanthocyanins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5723588626747613,\n        \"min\": 0.41,\n        \"max\": 3.58,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          0.75,\n          1.77,\n          1.42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color_intensity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.318285871822413,\n        \"min\": 1.28,\n        \"max\": 13.0,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          2.95,\n          3.3,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22857156582982338,\n        \"min\": 0.48,\n        \"max\": 1.71,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          1.22,\n          1.04,\n          1.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"od280/od315_of_diluted_wines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7099904287650504,\n        \"min\": 1.27,\n        \"max\": 4.0,\n        \"num_unique_values\": 122,\n        \"samples\": [\n          4.0,\n          1.82,\n          1.59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proline\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.9074742768491,\n        \"min\": 278.0,\n        \"max\": 1680.0,\n        \"num_unique_values\": 121,\n        \"samples\": [\n          1375.0,\n          1270.0,\n          735.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df['class']=wine.target"],"metadata":{"id":"lNBgrpQI9fpZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"yWoPvmL-9fyu","executionInfo":{"status":"ok","timestamp":1714882687522,"user_tz":-540,"elapsed":405,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"954094a3-a385-483e-c013-a0420eb49943"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   alcohol  malic_acid   ash  alcalinity_of_ash  magnesium  total_phenols  \\\n","0    14.23        1.71  2.43               15.6      127.0           2.80   \n","1    13.20        1.78  2.14               11.2      100.0           2.65   \n","2    13.16        2.36  2.67               18.6      101.0           2.80   \n","3    14.37        1.95  2.50               16.8      113.0           3.85   \n","4    13.24        2.59  2.87               21.0      118.0           2.80   \n","\n","   flavanoids  nonflavanoid_phenols  proanthocyanins  color_intensity   hue  \\\n","0        3.06                  0.28             2.29             5.64  1.04   \n","1        2.76                  0.26             1.28             4.38  1.05   \n","2        3.24                  0.30             2.81             5.68  1.03   \n","3        3.49                  0.24             2.18             7.80  0.86   \n","4        2.69                  0.39             1.82             4.32  1.04   \n","\n","   od280/od315_of_diluted_wines  proline  class  \n","0                          3.92   1065.0      0  \n","1                          3.40   1050.0      0  \n","2                          3.17   1185.0      0  \n","3                          3.45   1480.0      0  \n","4                          2.93    735.0      0  "],"text/html":["\n","  <div id=\"df-4fa84f52-6316-4b20-adad-87b167a7cde4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","      <th>magnesium</th>\n","      <th>total_phenols</th>\n","      <th>flavanoids</th>\n","      <th>nonflavanoid_phenols</th>\n","      <th>proanthocyanins</th>\n","      <th>color_intensity</th>\n","      <th>hue</th>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <th>proline</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.23</td>\n","      <td>1.71</td>\n","      <td>2.43</td>\n","      <td>15.6</td>\n","      <td>127.0</td>\n","      <td>2.80</td>\n","      <td>3.06</td>\n","      <td>0.28</td>\n","      <td>2.29</td>\n","      <td>5.64</td>\n","      <td>1.04</td>\n","      <td>3.92</td>\n","      <td>1065.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13.20</td>\n","      <td>1.78</td>\n","      <td>2.14</td>\n","      <td>11.2</td>\n","      <td>100.0</td>\n","      <td>2.65</td>\n","      <td>2.76</td>\n","      <td>0.26</td>\n","      <td>1.28</td>\n","      <td>4.38</td>\n","      <td>1.05</td>\n","      <td>3.40</td>\n","      <td>1050.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","      <td>2.36</td>\n","      <td>2.67</td>\n","      <td>18.6</td>\n","      <td>101.0</td>\n","      <td>2.80</td>\n","      <td>3.24</td>\n","      <td>0.30</td>\n","      <td>2.81</td>\n","      <td>5.68</td>\n","      <td>1.03</td>\n","      <td>3.17</td>\n","      <td>1185.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.37</td>\n","      <td>1.95</td>\n","      <td>2.50</td>\n","      <td>16.8</td>\n","      <td>113.0</td>\n","      <td>3.85</td>\n","      <td>3.49</td>\n","      <td>0.24</td>\n","      <td>2.18</td>\n","      <td>7.80</td>\n","      <td>0.86</td>\n","      <td>3.45</td>\n","      <td>1480.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.24</td>\n","      <td>2.59</td>\n","      <td>2.87</td>\n","      <td>21.0</td>\n","      <td>118.0</td>\n","      <td>2.80</td>\n","      <td>2.69</td>\n","      <td>0.39</td>\n","      <td>1.82</td>\n","      <td>4.32</td>\n","      <td>1.04</td>\n","      <td>2.93</td>\n","      <td>735.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fa84f52-6316-4b20-adad-87b167a7cde4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4fa84f52-6316-4b20-adad-87b167a7cde4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4fa84f52-6316-4b20-adad-87b167a7cde4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-acd05ada-6493-4723-9de3-6ddaa2ec2867\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-acd05ada-6493-4723-9de3-6ddaa2ec2867')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-acd05ada-6493-4723-9de3-6ddaa2ec2867 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 178,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8118265380058575,\n        \"min\": 11.03,\n        \"max\": 14.83,\n        \"num_unique_values\": 126,\n        \"samples\": [\n          11.62,\n          13.64,\n          13.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"malic_acid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1171460976144627,\n        \"min\": 0.74,\n        \"max\": 5.8,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          1.21,\n          2.83,\n          1.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27434400906081485,\n        \"min\": 1.36,\n        \"max\": 3.23,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          2.31,\n          2.43,\n          2.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alcalinity_of_ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.339563767173505,\n        \"min\": 10.6,\n        \"max\": 30.0,\n        \"num_unique_values\": 63,\n        \"samples\": [\n          25.5,\n          28.5,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"magnesium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.282483515295665,\n        \"min\": 70.0,\n        \"max\": 162.0,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          126.0,\n          85.0,\n          162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6258510488339893,\n        \"min\": 0.98,\n        \"max\": 3.88,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          1.68,\n          2.11,\n          1.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flavanoids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9988586850169467,\n        \"min\": 0.34,\n        \"max\": 5.08,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          3.18,\n          2.5,\n          3.17\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nonflavanoid_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12445334029667937,\n        \"min\": 0.13,\n        \"max\": 0.66,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          0.58,\n          0.41,\n          0.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proanthocyanins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5723588626747613,\n        \"min\": 0.41,\n        \"max\": 3.58,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          0.75,\n          1.77,\n          1.42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color_intensity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.318285871822413,\n        \"min\": 1.28,\n        \"max\": 13.0,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          2.95,\n          3.3,\n          5.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22857156582982338,\n        \"min\": 0.48,\n        \"max\": 1.71,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          1.22,\n          1.04,\n          1.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"od280/od315_of_diluted_wines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7099904287650504,\n        \"min\": 1.27,\n        \"max\": 4.0,\n        \"num_unique_values\": 122,\n        \"samples\": [\n          4.0,\n          1.82,\n          1.59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proline\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.9074742768491,\n        \"min\": 278.0,\n        \"max\": 1680.0,\n        \"num_unique_values\": 121,\n        \"samples\": [\n          1375.0,\n          1270.0,\n          735.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"f53kcgXC-Sue","executionInfo":{"status":"ok","timestamp":1714882698801,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"d52fe6aa-059f-4f86-e28f-b43432e13fd6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          alcohol  malic_acid         ash  alcalinity_of_ash   magnesium  \\\n","count  178.000000  178.000000  178.000000         178.000000  178.000000   \n","mean    13.000618    2.336348    2.366517          19.494944   99.741573   \n","std      0.811827    1.117146    0.274344           3.339564   14.282484   \n","min     11.030000    0.740000    1.360000          10.600000   70.000000   \n","25%     12.362500    1.602500    2.210000          17.200000   88.000000   \n","50%     13.050000    1.865000    2.360000          19.500000   98.000000   \n","75%     13.677500    3.082500    2.557500          21.500000  107.000000   \n","max     14.830000    5.800000    3.230000          30.000000  162.000000   \n","\n","       total_phenols  flavanoids  nonflavanoid_phenols  proanthocyanins  \\\n","count     178.000000  178.000000            178.000000       178.000000   \n","mean        2.295112    2.029270              0.361854         1.590899   \n","std         0.625851    0.998859              0.124453         0.572359   \n","min         0.980000    0.340000              0.130000         0.410000   \n","25%         1.742500    1.205000              0.270000         1.250000   \n","50%         2.355000    2.135000              0.340000         1.555000   \n","75%         2.800000    2.875000              0.437500         1.950000   \n","max         3.880000    5.080000              0.660000         3.580000   \n","\n","       color_intensity         hue  od280/od315_of_diluted_wines      proline  \\\n","count       178.000000  178.000000                    178.000000   178.000000   \n","mean          5.058090    0.957449                      2.611685   746.893258   \n","std           2.318286    0.228572                      0.709990   314.907474   \n","min           1.280000    0.480000                      1.270000   278.000000   \n","25%           3.220000    0.782500                      1.937500   500.500000   \n","50%           4.690000    0.965000                      2.780000   673.500000   \n","75%           6.200000    1.120000                      3.170000   985.000000   \n","max          13.000000    1.710000                      4.000000  1680.000000   \n","\n","            class  \n","count  178.000000  \n","mean     0.938202  \n","std      0.775035  \n","min      0.000000  \n","25%      0.000000  \n","50%      1.000000  \n","75%      2.000000  \n","max      2.000000  "],"text/html":["\n","  <div id=\"df-a0127c8f-b661-4fef-b7e0-fc14a186b425\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","      <th>magnesium</th>\n","      <th>total_phenols</th>\n","      <th>flavanoids</th>\n","      <th>nonflavanoid_phenols</th>\n","      <th>proanthocyanins</th>\n","      <th>color_intensity</th>\n","      <th>hue</th>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <th>proline</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","      <td>178.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>13.000618</td>\n","      <td>2.336348</td>\n","      <td>2.366517</td>\n","      <td>19.494944</td>\n","      <td>99.741573</td>\n","      <td>2.295112</td>\n","      <td>2.029270</td>\n","      <td>0.361854</td>\n","      <td>1.590899</td>\n","      <td>5.058090</td>\n","      <td>0.957449</td>\n","      <td>2.611685</td>\n","      <td>746.893258</td>\n","      <td>0.938202</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.811827</td>\n","      <td>1.117146</td>\n","      <td>0.274344</td>\n","      <td>3.339564</td>\n","      <td>14.282484</td>\n","      <td>0.625851</td>\n","      <td>0.998859</td>\n","      <td>0.124453</td>\n","      <td>0.572359</td>\n","      <td>2.318286</td>\n","      <td>0.228572</td>\n","      <td>0.709990</td>\n","      <td>314.907474</td>\n","      <td>0.775035</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>11.030000</td>\n","      <td>0.740000</td>\n","      <td>1.360000</td>\n","      <td>10.600000</td>\n","      <td>70.000000</td>\n","      <td>0.980000</td>\n","      <td>0.340000</td>\n","      <td>0.130000</td>\n","      <td>0.410000</td>\n","      <td>1.280000</td>\n","      <td>0.480000</td>\n","      <td>1.270000</td>\n","      <td>278.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>12.362500</td>\n","      <td>1.602500</td>\n","      <td>2.210000</td>\n","      <td>17.200000</td>\n","      <td>88.000000</td>\n","      <td>1.742500</td>\n","      <td>1.205000</td>\n","      <td>0.270000</td>\n","      <td>1.250000</td>\n","      <td>3.220000</td>\n","      <td>0.782500</td>\n","      <td>1.937500</td>\n","      <td>500.500000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>13.050000</td>\n","      <td>1.865000</td>\n","      <td>2.360000</td>\n","      <td>19.500000</td>\n","      <td>98.000000</td>\n","      <td>2.355000</td>\n","      <td>2.135000</td>\n","      <td>0.340000</td>\n","      <td>1.555000</td>\n","      <td>4.690000</td>\n","      <td>0.965000</td>\n","      <td>2.780000</td>\n","      <td>673.500000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>13.677500</td>\n","      <td>3.082500</td>\n","      <td>2.557500</td>\n","      <td>21.500000</td>\n","      <td>107.000000</td>\n","      <td>2.800000</td>\n","      <td>2.875000</td>\n","      <td>0.437500</td>\n","      <td>1.950000</td>\n","      <td>6.200000</td>\n","      <td>1.120000</td>\n","      <td>3.170000</td>\n","      <td>985.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>14.830000</td>\n","      <td>5.800000</td>\n","      <td>3.230000</td>\n","      <td>30.000000</td>\n","      <td>162.000000</td>\n","      <td>3.880000</td>\n","      <td>5.080000</td>\n","      <td>0.660000</td>\n","      <td>3.580000</td>\n","      <td>13.000000</td>\n","      <td>1.710000</td>\n","      <td>4.000000</td>\n","      <td>1680.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0127c8f-b661-4fef-b7e0-fc14a186b425')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0127c8f-b661-4fef-b7e0-fc14a186b425 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0127c8f-b661-4fef-b7e0-fc14a186b425');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-de8937b6-66fd-49cc-af7a-003d207bb07d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de8937b6-66fd-49cc-af7a-003d207bb07d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-de8937b6-66fd-49cc-af7a-003d207bb07d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59.11804622765535,\n        \"min\": 0.8118265380058575,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          13.00061797752809,\n          13.05,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"malic_acid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.116878053835904,\n        \"min\": 0.74,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.3363483146067416,\n          1.8650000000000002,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.213612771606805,\n        \"min\": 0.27434400906081485,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.3665168539325845,\n          2.36,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alcalinity_of_ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57.32526338306687,\n        \"min\": 3.339563767173505,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          19.49494382022472,\n          19.5,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"magnesium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51.18081686409121,\n        \"min\": 14.282483515295665,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          99.74157303370787,\n          98.0,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.19953212829461,\n        \"min\": 0.6258510488339893,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.295112359550562,\n          2.355,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flavanoids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.20866774807846,\n        \"min\": 0.34,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.0292696629213487,\n          2.135,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nonflavanoid_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.81536936528359,\n        \"min\": 0.12445334029667937,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.3618539325842696,\n          0.34,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proanthocyanins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.389141510191415,\n        \"min\": 0.41,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.5908988764044945,\n          1.5550000000000002,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color_intensity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61.23070389608627,\n        \"min\": 1.28,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.058089882022472,\n          4.6899999999999995,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.618701002452724,\n        \"min\": 0.22857156582982338,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.9574494382022471,\n          0.965,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"od280/od315_of_diluted_wines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.109005977625,\n        \"min\": 0.7099904287650504,\n        \"max\": 178.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.6116853932584267,\n          2.78,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proline\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 489.2848273029377,\n        \"min\": 178.0,\n        \"max\": 1680.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          746.8932584269663,\n          673.5,\n          178.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.59804698158684,\n        \"min\": 0.0,\n        \"max\": 178.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          178.0,\n          0.9382022471910112,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":[],"metadata":{"id":"PhxYRxNo-VqT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Selecting"],"metadata":{"id":"Tibf3IOr_vgo"}},{"cell_type":"code","source":["df['class']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yFczMcWv_vxQ","executionInfo":{"status":"ok","timestamp":1714883075786,"user_tz":-540,"elapsed":325,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9a77500e-0b57-4156-aac7-c03f43d16940"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","173    2\n","174    2\n","175    2\n","176    2\n","177    2\n","Name: class, Length: 178, dtype: int64"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["print(df['class'][2])\n","print(df['alcohol'][4])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K24-x1Lr_55Q","executionInfo":{"status":"ok","timestamp":1714883191759,"user_tz":-540,"elapsed":513,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"41dbfe12-6a28-4f99-d590-c7ba07f7ae5d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","13.24\n"]}]},{"cell_type":"markdown","source":["##Index-eer ni element ruu ni handah.\n","\n","iloc operator. stands for index location"],"metadata":{"id":"yU5K1Fmd_1Ab"}},{"cell_type":"code","source":["df.iloc[0]\n","## 0 deh observation-nii feature bolgon dahi hargalzah utgiig gargaj ugch baina.\n","## uuruur helbel ehnii muriig hevleed bn gsn ug"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iF0JsbDI_1MX","executionInfo":{"status":"ok","timestamp":1714883213672,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"74185085-e7c6-4bbf-d505-a216c53d409f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["alcohol                           14.23\n","malic_acid                         1.71\n","ash                                2.43\n","alcalinity_of_ash                 15.60\n","magnesium                        127.00\n","total_phenols                      2.80\n","flavanoids                         3.06\n","nonflavanoid_phenols               0.28\n","proanthocyanins                    2.29\n","color_intensity                    5.64\n","hue                                1.04\n","od280/od315_of_diluted_wines       3.92\n","proline                         1065.00\n","class                              0.00\n","Name: 0, dtype: float64"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["df.iloc[10]\n","## ene bol 11deh mur ni geh met\n","## jishee ni: wine bish company ntriin dataset bsn bol,\n","## ajilchinii buh medeellig avah geh met jishee baij bolno."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZidqDx5N_1Pk","executionInfo":{"status":"ok","timestamp":1714883285499,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e0d5bbf2-1548-498b-db4d-4d282d587718"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["alcohol                           14.10\n","malic_acid                         2.16\n","ash                                2.30\n","alcalinity_of_ash                 18.00\n","magnesium                        105.00\n","total_phenols                      2.95\n","flavanoids                         3.32\n","nonflavanoid_phenols               0.22\n","proanthocyanins                    2.38\n","color_intensity                    5.75\n","hue                                1.25\n","od280/od315_of_diluted_wines       3.17\n","proline                         1510.00\n","class                              0.00\n","Name: 10, dtype: float64"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["df.iloc[:,4]\n","## bas selecting ingej hiij bolno.\n","## numpy matrix-iin slicing deer baigaad bsntai tustei\n","\n","\n","## buh observation-ii 4deh feature-iig gargaj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"13uMh5TA_v1S","executionInfo":{"status":"ok","timestamp":1714883351823,"user_tz":-540,"elapsed":3,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"04432aa8-f3e3-44df-9113-14b1408b223d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      127.0\n","1      100.0\n","2      101.0\n","3      113.0\n","4      118.0\n","       ...  \n","173     95.0\n","174    102.0\n","175    120.0\n","176    120.0\n","177     96.0\n","Name: magnesium, Length: 178, dtype: float64"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["df.iloc[2, :4]\n","\n","## 3dah observation-ii ehnii 4n feature"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xZIIQ6K-A1HV","executionInfo":{"status":"ok","timestamp":1714883376500,"user_tz":-540,"elapsed":2,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"ba7445bb-9d97-492c-b8ed-f6397dd32a71"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["alcohol              13.16\n","malic_acid            2.36\n","ash                   2.67\n","alcalinity_of_ash    18.60\n","Name: 2, dtype: float64"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["df.iloc[[2,20,21], :4]\n","\n","## 2doh 20d0h 21deh"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"zH4pF9XDA7GC","executionInfo":{"status":"ok","timestamp":1714883588754,"user_tz":-540,"elapsed":4,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9cdf889a-3d9d-4f04-dac7-6c487160059f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    alcohol  malic_acid   ash  alcalinity_of_ash\n","2     13.16        2.36  2.67               18.6\n","20    14.06        1.63  2.28               16.0\n","21    12.93        3.80  2.65               18.6"],"text/html":["\n","  <div id=\"df-2ed149b0-364f-4fef-b31d-bb5b010a4178\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","      <td>2.36</td>\n","      <td>2.67</td>\n","      <td>18.6</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>14.06</td>\n","      <td>1.63</td>\n","      <td>2.28</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>12.93</td>\n","      <td>3.80</td>\n","      <td>2.65</td>\n","      <td>18.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ed149b0-364f-4fef-b31d-bb5b010a4178')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ed149b0-364f-4fef-b31d-bb5b010a4178 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ed149b0-364f-4fef-b31d-bb5b010a4178');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a3fbedb7-127f-497e-ac19-8950d56ab2cc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3fbedb7-127f-497e-ac19-8950d56ab2cc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a3fbedb7-127f-497e-ac19-8950d56ab2cc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"## 2doh\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5971878543082854,\n        \"min\": 12.93,\n        \"max\": 14.06,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          13.16,\n          14.06,\n          12.93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"malic_acid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.104188993484962,\n        \"min\": 1.63,\n        \"max\": 3.8,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.36,\n          1.63,\n          3.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21962088546705516,\n        \"min\": 2.28,\n        \"max\": 2.67,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.67,\n          2.28,\n          2.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alcalinity_of_ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.501110699893028,\n        \"min\": 16.0,\n        \"max\": 18.6,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          16.0,\n          18.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["df.iloc[-3: ,]\n","\n","## suuliin 3iig avah buyu,\n","#list shig bas ard talaas ni index hiij chadaj baina."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":163},"id":"6_QMMmf5Bqvg","executionInfo":{"status":"ok","timestamp":1714883621702,"user_tz":-540,"elapsed":346,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"5e6f9cc9-88bf-417f-fccb-6dac6eb40e75"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     alcohol  malic_acid   ash  alcalinity_of_ash  magnesium  total_phenols  \\\n","175    13.27        4.28  2.26               20.0      120.0           1.59   \n","176    13.17        2.59  2.37               20.0      120.0           1.65   \n","177    14.13        4.10  2.74               24.5       96.0           2.05   \n","\n","     flavanoids  nonflavanoid_phenols  proanthocyanins  color_intensity   hue  \\\n","175        0.69                  0.43             1.35             10.2  0.59   \n","176        0.68                  0.53             1.46              9.3  0.60   \n","177        0.76                  0.56             1.35              9.2  0.61   \n","\n","     od280/od315_of_diluted_wines  proline  class  \n","175                          1.56    835.0      2  \n","176                          1.62    840.0      2  \n","177                          1.60    560.0      2  "],"text/html":["\n","  <div id=\"df-50303f7f-b848-48a4-8155-8d9261111836\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>malic_acid</th>\n","      <th>ash</th>\n","      <th>alcalinity_of_ash</th>\n","      <th>magnesium</th>\n","      <th>total_phenols</th>\n","      <th>flavanoids</th>\n","      <th>nonflavanoid_phenols</th>\n","      <th>proanthocyanins</th>\n","      <th>color_intensity</th>\n","      <th>hue</th>\n","      <th>od280/od315_of_diluted_wines</th>\n","      <th>proline</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>175</th>\n","      <td>13.27</td>\n","      <td>4.28</td>\n","      <td>2.26</td>\n","      <td>20.0</td>\n","      <td>120.0</td>\n","      <td>1.59</td>\n","      <td>0.69</td>\n","      <td>0.43</td>\n","      <td>1.35</td>\n","      <td>10.2</td>\n","      <td>0.59</td>\n","      <td>1.56</td>\n","      <td>835.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>13.17</td>\n","      <td>2.59</td>\n","      <td>2.37</td>\n","      <td>20.0</td>\n","      <td>120.0</td>\n","      <td>1.65</td>\n","      <td>0.68</td>\n","      <td>0.53</td>\n","      <td>1.46</td>\n","      <td>9.3</td>\n","      <td>0.60</td>\n","      <td>1.62</td>\n","      <td>840.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>14.13</td>\n","      <td>4.10</td>\n","      <td>2.74</td>\n","      <td>24.5</td>\n","      <td>96.0</td>\n","      <td>2.05</td>\n","      <td>0.76</td>\n","      <td>0.56</td>\n","      <td>1.35</td>\n","      <td>9.2</td>\n","      <td>0.61</td>\n","      <td>1.60</td>\n","      <td>560.0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50303f7f-b848-48a4-8155-8d9261111836')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50303f7f-b848-48a4-8155-8d9261111836 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50303f7f-b848-48a4-8155-8d9261111836');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-767042df-9e0d-45b9-979c-3db50da6c18c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-767042df-9e0d-45b9-979c-3db50da6c18c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-767042df-9e0d-45b9-979c-3db50da6c18c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5277625728803947,\n        \"min\": 13.17,\n        \"max\": 14.13,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          13.27,\n          13.17,\n          14.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"malic_acid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9281343293582742,\n        \"min\": 2.59,\n        \"max\": 4.28,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.28,\n          2.59,\n          4.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2514623895005641,\n        \"min\": 2.26,\n        \"max\": 2.74,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.26,\n          2.37,\n          2.74\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alcalinity_of_ash\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.598076211353316,\n        \"min\": 20.0,\n        \"max\": 24.5,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          24.5,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"magnesium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.856406460551018,\n        \"min\": 96.0,\n        \"max\": 120.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          96.0,\n          120.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25006665778014725,\n        \"min\": 1.59,\n        \"max\": 2.05,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.59,\n          1.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flavanoids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04358898943540673,\n        \"min\": 0.68,\n        \"max\": 0.76,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.69,\n          0.68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nonflavanoid_phenols\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06806859285554048,\n        \"min\": 0.43,\n        \"max\": 0.56,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.43,\n          0.53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proanthocyanins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06350852961085876,\n        \"min\": 1.35,\n        \"max\": 1.46,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.46,\n          1.35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color_intensity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5507570547286098,\n        \"min\": 9.2,\n        \"max\": 10.2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10.2,\n          9.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010000000000000009,\n        \"min\": 0.59,\n        \"max\": 0.61,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.59,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"od280/od315_of_diluted_wines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03055050463303896,\n        \"min\": 1.56,\n        \"max\": 1.62,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.56,\n          1.62\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"proline\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 160.23420358962065,\n        \"min\": 560.0,\n        \"max\": 840.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          835.0,\n          840.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":[],"metadata":{"id":"yCEcyXKhB27Y"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Label-aar ni element ruu handah.\n","\n","loc operator. stands for location"],"metadata":{"id":"LCrP9i7HCFJj"}},{"cell_type":"code","source":["df.loc[0, 'alcohol']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BcivXAuaCE5_","executionInfo":{"status":"ok","timestamp":1714883826527,"user_tz":-540,"elapsed":392,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"b957280f-48c1-4b48-898f-abafd5c89bef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["14.23"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["df.loc[100, 'ash']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vz6g5IO7CFUo","executionInfo":{"status":"ok","timestamp":1714883838991,"user_tz":-540,"elapsed":431,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"6d64fd96-7b61-4797-b08b-0ae028b338fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.7"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["df.loc[:4 , ['alcohol', 'magnesium', 'color_intensity']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"NUMrhDi0CFah","executionInfo":{"status":"ok","timestamp":1714883875240,"user_tz":-540,"elapsed":425,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"9b8e29f5-af27-40f9-98ba-d5b19ddf1e3f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   alcohol  magnesium  color_intensity\n","0    14.23      127.0             5.64\n","1    13.20      100.0             4.38\n","2    13.16      101.0             5.68\n","3    14.37      113.0             7.80\n","4    13.24      118.0             4.32"],"text/html":["\n","  <div id=\"df-80c1afa3-ddfc-4670-b1bb-9ce747415bf2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","      <th>magnesium</th>\n","      <th>color_intensity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.23</td>\n","      <td>127.0</td>\n","      <td>5.64</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13.20</td>\n","      <td>100.0</td>\n","      <td>4.38</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","      <td>101.0</td>\n","      <td>5.68</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.37</td>\n","      <td>113.0</td>\n","      <td>7.80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.24</td>\n","      <td>118.0</td>\n","      <td>4.32</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80c1afa3-ddfc-4670-b1bb-9ce747415bf2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80c1afa3-ddfc-4670-b1bb-9ce747415bf2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80c1afa3-ddfc-4670-b1bb-9ce747415bf2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a8506d6-3fc2-4d5c-9110-cba3819d4921\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a8506d6-3fc2-4d5c-9110-cba3819d4921')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a8506d6-3fc2-4d5c-9110-cba3819d4921 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6051859218455101,\n        \"min\": 13.16,\n        \"max\": 14.37,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          13.2,\n          13.24,\n          13.16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"magnesium\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.476062042355817,\n        \"min\": 100.0,\n        \"max\": 127.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          100.0,\n          118.0,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color_intensity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4114106418757086,\n        \"min\": 4.32,\n        \"max\": 7.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4.38,\n          4.32,\n          5.68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["## loc ba iloc-iin ylgaa."],"metadata":{"id":"ey1_cG-UC3Fu"}},{"cell_type":"markdown","source":["Gants baigaa ylgaa ni gevel, indexing method ni uur uuruur systemchlegdsen baidag.\n","\n","iloc ni python deerh undsen indexing system ym. jishee ni:\n","0:5 gevel 0-4 hurtelh index deerh elementuud ruu handana.\n","Harin loc ni suuliin elementiig oruuldag."],"metadata":{"id":"6yuNECRFDN6K"}},{"cell_type":"code","source":["df.loc[0:5 , ['alcohol']]\n","# suuliin index-iig bagtaaj avaad bdg tul, haaya anduurah magadlaltai.\n","# list shig indexing-d dastsan bdg tul."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"z7X6O_yEC3Xx","executionInfo":{"status":"ok","timestamp":1714884170605,"user_tz":-540,"elapsed":304,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"1f5cafff-bdc1-43d4-c03b-ae3e03939e05"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   alcohol\n","0    14.23\n","1    13.20\n","2    13.16\n","3    14.37\n","4    13.24\n","5    14.20"],"text/html":["\n","  <div id=\"df-120dce6e-0058-4326-a58e-a22e6c0dbc59\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alcohol</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.23</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13.20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.16</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14.37</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.24</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>14.20</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-120dce6e-0058-4326-a58e-a22e6c0dbc59')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-120dce6e-0058-4326-a58e-a22e6c0dbc59 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-120dce6e-0058-4326-a58e-a22e6c0dbc59');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-492e3e36-53e9-482b-93fd-46721a64cf6e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-492e3e36-53e9-482b-93fd-46721a64cf6e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-492e3e36-53e9-482b-93fd-46721a64cf6e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"alcohol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5875939641169458,\n        \"min\": 13.16,\n        \"max\": 14.37,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          14.23,\n          13.2,\n          14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["df.iloc[0:5, 0]\n","## yg l bidnii medeheer indexing hiij bna."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f4WEdHA3C3bm","executionInfo":{"status":"ok","timestamp":1714884229976,"user_tz":-540,"elapsed":323,"user":{"displayName":"temka-sama","userId":"13085788523966765980"}},"outputId":"e37b3dc1-ad2f-4998-c2a6-691e28d09349"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    14.23\n","1    13.20\n","2    13.16\n","3    14.37\n","4    13.24\n","Name: alcohol, dtype: float64"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":[],"metadata":{"id":"sSRqupOFD127"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"xayCdYZg4bgU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"G9enxNe_4bkN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"XEqXh97BD16N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1vZCSwXLF03q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"gGMiosIlIbrx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fKkD6yXwIb5E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"z8iwgxMnRYLS"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[],"toc_visible":true,"mount_file_id":"190HKtgZwg8xNX4aDYWjVKaFEtYbs6hBL","authorship_tag":"ABX9TyMLJ5qBC2qrQ/lQXDVcxi1J"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}